public class java_mapping_jsp implements com.sun.grid.cull.template.Template {
  public void print(final com.sun.grid.cull.Printer p, final java.util.Map params) {
    p.println("/*___INFO__MARK_BEGIN__*/");
    p.println("/*************************************************************************");
    p.println(" *");
    p.println(" *  The Contents of this file are made available subject to the terms of");
    p.println(" *  the Sun Industry Standards Source License Version 1.2");
    p.println(" *");
    p.println(" *  Sun Microsystems Inc., March, 2001");
    p.println(" *");
    p.println(" *");
    p.println(" *  Sun Industry Standards Source License Version 1.2");
    p.println(" *  =================================================");
    p.println(" *  The contents of this file are subject to the Sun Industry Standards");
    p.println(" *  Source License Version 1.2 (the \"License\"); You may not use this file");
    p.println(" *  except in compliance with the License. You may obtain a copy of the");
    p.println(" *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html");
    p.println(" *");
    p.println(" *  Software provided under this License is provided on an \"AS IS\" basis,");
    p.println(" *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,");
    p.println(" *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,");
    p.println(" *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.");
    p.println(" *  See the License for the specific provisions governing your rights and");
    p.println(" *  obligations concerning the Software.");
    p.println(" *");
    p.println(" *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.");
    p.println(" *");
    p.println(" *   Copyright: 2001 by Sun Microsystems, Inc.");
    p.println(" *");
    p.println(" *   All Rights Reserved.");
    p.println(" *");
    p.println(" ************************************************************************/");
    p.println("/*___INFO__MARK_END__*/");
    p.println("/**");
    p.println(" *  Generated from java_mapping.jsp");
    p.println(" *  !!! DO NOT EDIT THIS FILE !!!");
    p.println(" */");
    p.print("");
    
  com.sun.grid.cull.JavaHelper jh = (com.sun.grid.cull.JavaHelper)params.get("javaHelper");
  com.sun.grid.cull.CullDefinition cullDef = (com.sun.grid.cull.CullDefinition)params.get("cullDef");
  
p.println("");
    p.println("package com.sun.grid.jgdi.configuration.reflect;");
    p.println("");
    p.println("import java.util.Map;");
    p.println("import java.util.HashMap;");
    p.println("");
    p.println("/**");
    p.println(" *  This class provides the mapping from cull type to its java classes");
    p.println(" */");
    p.println("public class CullTypeMapping {");
    p.println("   ");
    p.println("   private static Map<String, Class> typeMap;");
    p.println("   ");
    p.println("   private static void reg(String cullType, Class clazz) {");
    p.println("      typeMap.put(cullType, clazz);");
    p.println("   }");
    p.println("   ");
    p.println("   private static void init() {");
    p.println("      if (typeMap == null) {");
    p.println("        synchronized(CullTypeMapping.class) {");
    p.println("           if (typeMap == null ) {");
    p.println("               typeMap = new HashMap<String, Class>();");
    p.print("");
      for (String name : cullDef.getObjectNames()) {
      com.sun.grid.cull.CullObject cullObj = cullDef.getCullObject(name);       
p.print("              reg(\"");
    p.print(name);p.print("\", ");
    p.print(jh.getFullClassName(cullObj));p.println(".class);   ");
    p.print("");
     
    } // end of for 
p.println("");
    p.println("            }");
    p.println("         }");
    p.println("      }");
    p.println("   }");
    p.println("   ");
    p.println("   /**");
    p.println("    *   Get the java class which represents a cull type");
    p.println("    *   @param  cullType  name of the cull type");
    p.println("    *   @return the java class");
    p.println("    *   @throws IllegalArgumentException if the cull type is unknown");
    p.println("    */");
    p.println("   public static Class getClassForCullType(String cullType) {");
    p.println("      init();");
    p.println("      Class ret = typeMap.get(cullType);");
    p.println("      if (ret == null) {");
    p.println("         throw new IllegalArgumentException(\"Unknown cull type '\" + cullType + \"'\");");
    p.println("      }");
    p.println("      return ret;");
    p.println("   }");
    p.println("}");
  } // end of print
} // end of class java_mapping_jsp
