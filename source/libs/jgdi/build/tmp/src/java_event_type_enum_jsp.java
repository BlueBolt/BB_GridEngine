public class java_event_type_enum_jsp implements com.sun.grid.cull.template.Template {
  public void print(final com.sun.grid.cull.Printer p, final java.util.Map params) {
    p.println("/*___INFO__MARK_BEGIN__*/");
    p.println("/*************************************************************************");
    p.println(" *");
    p.println(" *  The Contents of this file are made available subject to the terms of");
    p.println(" *  the Sun Industry Standards Source License Version 1.2");
    p.println(" *");
    p.println(" *  Sun Microsystems Inc., March, 2001");
    p.println(" *");
    p.println(" *");
    p.println(" *  Sun Industry Standards Source License Version 1.2");
    p.println(" *  =================================================");
    p.println(" *  The contents of this file are subject to the Sun Industry Standards");
    p.println(" *  Source License Version 1.2 (the \"License\"); You may not use this file");
    p.println(" *  except in compliance with the License. You may obtain a copy of the");
    p.println(" *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html");
    p.println(" *");
    p.println(" *  Software provided under this License is provided on an \"AS IS\" basis,");
    p.println(" *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,");
    p.println(" *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,");
    p.println(" *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.");
    p.println(" *  See the License for the specific provisions governing your rights and");
    p.println(" *  obligations concerning the Software.");
    p.println(" *");
    p.println(" *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.");
    p.println(" *");
    p.println(" *   Copyright: 2001 by Sun Microsystems, Inc.");
    p.println(" *");
    p.println(" *   All Rights Reserved.");
    p.println(" *");
    p.println(" ************************************************************************/");
    p.println("/*___INFO__MARK_END__*/");
    p.println("/**");
    p.println(" *  Generated from java_event_client.jsp");
    p.println(" *  !!! DO NOT EDIT THIS FILE !!!");
    p.println(" */");
    p.print("");
    
  com.sun.grid.cull.JavaHelper jh = (com.sun.grid.cull.JavaHelper)params.get("javaHelper");
  com.sun.grid.cull.CullDefinition cullDef = (com.sun.grid.cull.CullDefinition)params.get("cullDef");
p.println("");
    p.println("package com.sun.grid.jgdi.event;");
    p.println("");
    p.println(" ");
    p.println("/** ");
    p.println(" *");
    p.println(" */");
    p.println("public enum EventTypeEnum {");
    p.println("");
    p.print("");
    
    com.sun.grid.cull.CullObject cullObj = null;
    for (String name : cullDef.getObjectNames()) {
      cullObj = cullDef.getCullObject(name); 
      name = cullObj.getIdlName();
//      System.out.println("name = " + name + ", cullname = " + cullObj.getName() + " " + 
//                         (cullObj.hasAddEvent() ? "A" : "") + 
//                         (cullObj.hasDeleteEvent() ? "D" : "") +
//                         (cullObj.hasGetListEvent() ? "L" : "") +
//                         (cullObj.hasGetEvent() ? "G" : "") +
//                         (cullObj.hasModifyEvent() ? "M" : ""));
      if(name == null) {
         throw new IllegalStateException("Have no idl name for " + cullObj.getName());
      }
p.println("");
    p.print("      /* ");
    p.print(name);p.print(" events */");
    
      if(cullObj.hasAddEvent()) {
p.println("");
    p.print("       ");
    p.print(name);p.print("Add,");
    
      }
      
      if(cullObj.hasDeleteEvent()) { 
p.println("");
    p.print("       ");
    p.print(name);p.print("Del,");
         
      }
      if (cullObj.hasGetListEvent()) {
p.println("    ");
    p.print("       ");
    p.print(name);p.print("List,");
             
      } // end if hasGetListOperation
      if (cullObj.hasModifyEvent()) {
p.println("      ");
    p.print("       ");
    p.print(name);p.print("Mod,");
     
      } // end of hasModifyOperation
p.println("");
    p.print("");
    
   } // end of for
p.println("");
    p.print("       /* Special Events */");
    
   String [] specialEvents = {
       "QmasterGoesDown",
       "SchedulerRun",
       "Shutdown",
       "JobFinish",
       "JobUsage",
       "JobFinalUsage",
       "JobPriorityMod",
       "QueueInstanceSuspend",
       "QueueInstanceUnsuspend"
   };
   
   for(int i = 0; i < specialEvents.length; i++) {
p.println("");
    p.print("       ");
    p.print(specialEvents[i]);p.print("");
     
       
       if ( i < specialEvents.length - 1) {
        p.print(", ");
       
       }
   } // end of for special events
p.println("");
    p.println("}");
  } // end of print
} // end of class java_event_type_enum_jsp
