public class java_rmi_jgdi_descriptor_jsp implements com.sun.grid.cull.template.Template {
  public void print(final com.sun.grid.cull.Printer p, final java.util.Map params) {
    p.println("/*___INFO__MARK_BEGIN__*/");
    p.println("/*************************************************************************");
    p.println(" *");
    p.println(" *  The Contents of this file are made available subject to the terms of");
    p.println(" *  the Sun Industry Standards Source License Version 1.2");
    p.println(" *");
    p.println(" *  Sun Microsystems Inc., March, 2001");
    p.println(" *");
    p.println(" *");
    p.println(" *  Sun Industry Standards Source License Version 1.2");
    p.println(" *  =================================================");
    p.println(" *  The contents of this file are subject to the Sun Industry Standards");
    p.println(" *  Source License Version 1.2 (the \"License\"); You may not use this file");
    p.println(" *  except in compliance with the License. You may obtain a copy of the");
    p.println(" *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html");
    p.println(" *");
    p.println(" *  Software provided under this License is provided on an \"AS IS\" basis,");
    p.println(" *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,");
    p.println(" *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,");
    p.println(" *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.");
    p.println(" *  See the License for the specific provisions governing your rights and");
    p.println(" *  obligations concerning the Software.");
    p.println(" *");
    p.println(" *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.");
    p.println(" *");
    p.println(" *   Copyright: 2001 by Sun Microsystems, Inc.");
    p.println(" *");
    p.println(" *   All Rights Reserved.");
    p.println(" *");
    p.println(" ************************************************************************/");
    p.println("/*___INFO__MARK_END__*/");
    p.println("/**");
    p.println(" *  Generated from java_jgdi_descriptor.jsp");
    p.println(" *  !!! DO NOT EDIT THIS FILE !!!");
    p.println(" */");
    p.print("");
    
  com.sun.grid.cull.CullDefinition cullDef = (com.sun.grid.cull.CullDefinition)params.get("cullDef");
  com.sun.grid.cull.JavaHelper jh = (com.sun.grid.cull.JavaHelper)params.get("javaHelper");
p.println("");
    p.println("package com.sun.grid.jgdi.rmi;");
    p.println("");
    p.println("");
    p.println("import java.rmi.RemoteException; ");
    p.println("import java.rmi.Remote;");
    p.println("import com.sun.grid.jgdi.configuration.reflect.AbstractClassDescriptor;");
    p.println("import com.sun.grid.jgdi.configuration.reflect.PlainListPropertyDescriptor;");
    p.println("import com.sun.grid.jgdi.configuration.reflect.SimplePropertyDescriptor;");
    p.println("");
    p.print("");
     // Import all cull object names;
    com.sun.grid.cull.CullObject cullObj = null;
    String classname = null;
    String idlname = null;
    for (String name : cullDef.getObjectNames()) {
      cullObj = cullDef.getCullObject(name); 
      if(cullObj.getType() == cullObj.TYPE_PRIMITIVE) {
         continue;
      }
      if(cullObj.getType() == cullObj.TYPE_MAPPED) {
         continue;
      }
      if(!cullObj.isRootObject()) {
        continue;
      }
p.print("import ");
    p.print(jh.getFullClassName(cullObj));p.println(";");
    p.print("");
     } // end of for p.println("");
    p.println("/**");
    p.println(" *");
    p.println(" * ");
    p.println(" */");
    p.println("public class JGDIRemoteDescriptor extends AbstractClassDescriptor {");
    p.println("   ");
    p.println("");
    p.println("   public JGDIRemoteDescriptor() {");
    p.println("       super(JGDIRemote.class, null);");
    p.println("       ");
    p.println("       PlainListPropertyDescriptor lpd = null;");
    p.println("");
    p.print("");
    
     for (String name : cullDef.getObjectNames()) {
      cullObj = cullDef.getCullObject(name); 
      if (cullObj.getType() == cullObj.TYPE_PRIMITIVE) {
         continue;
      }
      if (cullObj.getType() == cullObj.TYPE_MAPPED) {
         continue;
      }
      classname = cullObj.getName();
      idlname = cullObj.getIdlName();
      
  if (!cullObj.hasGetListOperation()) {
p.println("");
    p.print("      // add( new SimplePropertyDescriptor(JGDIRemote.class, \"");
    p.print(idlname);p.print("\", ");
    p.print(idlname);p.print(".class,  \"");
    p.print(name);p.println("\", -1, false, true, false));");
    p.print("");
     } else { p.println("");
    p.print("      add( new PlainListPropertyDescriptor(JGDIRemote.class, \"");
    p.print(idlname);p.print("\", ");
    p.print(idlname);p.print(".class, \"");
    p.print(name);p.println("\", -1, false, false, true));");
    p.print("");
     } p.println("      ");
    p.print("");
     
   } // end of for
p.println("");
    p.println("   }");
    p.println("   ");
    p.println("   public void validate(Object bean) throws com.sun.grid.jgdi.configuration.reflect.InvalidObjectException {");
    p.println("      // TODO");
    p.println("   }");
    p.println("}");
  } // end of print
} // end of class java_rmi_jgdi_descriptor_jsp
