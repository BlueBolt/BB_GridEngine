public class c_event_map_jsp implements com.sun.grid.cull.template.Template {
  public void print(final com.sun.grid.cull.Printer p, final java.util.Map params) {
    p.println("/*___INFO__MARK_BEGIN__*/");
    p.println("/*************************************************************************");
    p.println(" *");
    p.println(" *  The Contents of this file are made available subject to the terms of");
    p.println(" *  the Sun Industry Standards Source License Version 1.2");
    p.println(" *");
    p.println(" *  Sun Microsystems Inc., March, 2001");
    p.println(" *");
    p.println(" *");
    p.println(" *  Sun Industry Standards Source License Version 1.2");
    p.println(" *  =================================================");
    p.println(" *  The contents of this file are subject to the Sun Industry Standards");
    p.println(" *  Source License Version 1.2 (the \"License\"); You may not use this file");
    p.println(" *  except in compliance with the License. You may obtain a copy of the");
    p.println(" *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html");
    p.println(" *");
    p.println(" *  Software provided under this License is provided on an \"AS IS\" basis,");
    p.println(" *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,");
    p.println(" *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,");
    p.println(" *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.");
    p.println(" *  See the License for the specific provisions governing your rights and");
    p.println(" *  obligations concerning the Software.");
    p.println(" *");
    p.println(" *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.");
    p.println(" *");
    p.println(" *   Copyright: 2001 by Sun Microsystems, Inc.");
    p.println(" *");
    p.println(" *   All Rights Reserved.");
    p.println(" *");
    p.println(" ************************************************************************/");
    p.println("/*___INFO__MARK_END__*/");
    p.println("/**");
    p.println(" *  Generated from c_event_map.jsp");
    p.println(" *  !!! DO NOT EDIT THIS FILE !!!");
    p.println(" */");
    p.print("");
    
  com.sun.grid.cull.JavaHelper jh = (com.sun.grid.cull.JavaHelper)params.get("javaHelper");
  com.sun.grid.cull.CullDefinition cullDef = (com.sun.grid.cull.CullDefinition)params.get("cullDef");
p.println("");
    p.println("#include <ctype.h>");
    p.println("#include <string.h>");
    p.println("#include <stdio.h>");
    p.println("#include <jni.h>");
    p.println("#include \"jgdi.h\"");
    p.println("#include \"basis_types.h\"");
    p.println("#include \"cull.h\"");
    p.println("#include \"sgermon.h\"");
    p.println("#include \"sge_all_listsL.h\"");
    p.println("#include \"sge_answer.h\"");
    p.println("#include \"sge_event.h\"");
    p.println("#include \"jgdi_common.h\"    ");
    p.println("#include \"jgdi_wrapper_event.h\"");
    p.println("");
    p.println("");
    p.println("JNIEXPORT void JNICALL Java_com_sun_grid_jgdi_event_EventTypeMapping_nativeInit(JNIEnv *env, jclass clazz);");
    p.println("");
    p.println("/*");
    p.println(" * Class:     com_sun_grid_jgdi_event_EventTypeMapping");
    p.println(" * Method:    nativeInit");
    p.println(" * Signature: ()V");
    p.println(" */");
    p.println("JNIEXPORT void JNICALL Java_com_sun_grid_jgdi_event_EventTypeMapping_nativeInit(JNIEnv *env, jclass clazz) {");
    p.println("");
    p.println("    jgdi_result_t        ret = JGDI_SUCCESS;");
    p.println("    lList * alp = NULL;");
    p.println("    ");
    p.println("    DENTER(BASIS_LAYER, \"Java_com_sun_grid_jgdi_event_EventTypeMapping_nativeInit\");");
    p.println("");
    p.print("");
    
    com.sun.grid.cull.CullObject cullObj = null;    
    for (String name : cullDef.getObjectNames()) {
      cullObj = cullDef.getCullObject(name); 
      name = cullObj.getIdlName();
//      System.out.println("name = " + name + ", cullname = " + cullObj.getName() + " " + 
//                         (cullObj.hasAddEvent() ? "A" : "") + 
//                         (cullObj.hasDeleteEvent() ? "D" : "") +
//                         (cullObj.hasGetListEvent() ? "L" : "") +
//                         (cullObj.hasGetEvent() ? "G" : "") +
//                         (cullObj.hasModifyEvent() ? "M" : ""));
      if(name == null) {
         throw new IllegalStateException("Have no idl name for " + cullObj.getName());
      }
      String notifType = null;
      String classname = null;
      if(cullObj.hasAddEvent()) {
p.println("");
    p.print("      ret = EventTypeMapping_static_registerEvent(env, \"");
    p.print(name);p.print("Add\", ");
    p.print(cullObj.getAddEventName());p.println(", &alp);");
    p.println("      if(ret != JGDI_SUCCESS) {");
    p.println("          throw_error_from_answer_list(env, ret, alp);");
    p.println("          DRETURN_VOID;");
    p.println("      }");
    p.print("");
        } 
      
      if(cullObj.hasDeleteEvent()) {
p.println("");
    p.print("      ret = EventTypeMapping_static_registerEvent(env, \"");
    p.print(name);p.print("Del\", ");
    p.print(cullObj.getDeleteEventName());p.println(", &alp);");
    p.println("      if(ret != JGDI_SUCCESS) {");
    p.println("          throw_error_from_answer_list(env, ret, alp);");
    p.println("          DRETURN_VOID;");
    p.println("      }");
    p.print("");
    
      }
      if(cullObj.hasModifyEvent()) {
p.println("");
    p.print("      ret = EventTypeMapping_static_registerEvent(env, \"");
    p.print(name);p.print("Mod\", ");
    p.print(cullObj.getModifyEventName());p.println(", &alp);");
    p.println("      if(ret != JGDI_SUCCESS) {");
    p.println("          throw_error_from_answer_list(env, ret, alp);");
    p.println("          DRETURN_VOID;");
    p.println("      }");
    p.print("");
    
      }
      if(cullObj.hasGetListEvent()) {
p.println("");
    p.print("      ret = EventTypeMapping_static_registerEvent(env, \"");
    p.print(name);p.print("List\", ");
    p.print(cullObj.getGetListEventName());p.println(", &alp);");
    p.println("      if(ret != JGDI_SUCCESS) {");
    p.println("          throw_error_from_answer_list(env, ret, alp);");
    p.println("          DRETURN_VOID;");
    p.println("      }");
    p.print("");
    
      }
   } // end of for

   String [][] specialEvents = {
       { "QmasterGoesDown", "sgeE_QMASTER_GOES_DOWN" },
       { "SchedulerRun",    "sgeE_SCHEDDMONITOR" },
       { "Shutdown",        "sgeE_SHUTDOWN" },
       { "JobFinish",       "sgeE_JOB_FINISH" },
       { "JobUsage",        "sgeE_JOB_USAGE" },
       { "JobFinalUsage",   "sgeE_JOB_FINAL_USAGE" },
       { "JobPriorityMod",  "sgeE_JOB_MOD_SCHED_PRIORITY" },
       { "QueueInstanceSuspend", "sgeE_QINSTANCE_SOS" },
       { "QueueInstanceUnsuspend", "sgeE_QINSTANCE_USOS" }
   };

   for (int i = 0; i < specialEvents.length; i++) {

p.println("");
    p.print("      ret = EventTypeMapping_static_registerEvent(env, \"");
    p.print(specialEvents[i][0]);p.print("\", ");
    p.print(specialEvents[i][1]);p.println(", &alp);");
    p.println("      if(ret != JGDI_SUCCESS) {");
    p.println("          throw_error_from_answer_list(env, ret, alp);");
    p.println("          DRETURN_VOID;");
    p.println("      }");
    p.print("");
    
   } // end of for special events
p.println("");
    p.println("   DRETURN_VOID;");
    p.println("}");
  } // end of print
} // end of class c_event_map_jsp
