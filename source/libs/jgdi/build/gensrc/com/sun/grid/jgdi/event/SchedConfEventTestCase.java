/*___INFO__MARK_BEGIN__*/
/*************************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  the Sun Industry Standards Source License Version 1.2
 *
 *  Sun Microsystems Inc., March, 2001
 *
 *
 *  Sun Industry Standards Source License Version 1.2
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.2 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *   Copyright: 2001 by Sun Microsystems, Inc.
 *
 *   All Rights Reserved.
 *
 ************************************************************************/
/*___INFO__MARK_END__*/
/**
 *  Generated from java_event_test.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */

package com.sun.grid.jgdi.event;


import com.sun.grid.jgdi.JGDIException;
import com.sun.grid.jgdi.JGDI;
import com.sun.grid.jgdi.configuration.*;
import com.sun.grid.jgdi.configuration.reflect.*;
import junit.framework.*;
import com.sun.grid.jgdi.BaseTestCase;
import java.util.HashMap;
import com.sun.grid.jgdi.EventClient;
import com.sun.grid.jgdi.JGDIFactory;
import java.util.Collection;
import java.util.Map;
import com.sun.grid.jgdi.TestValueFactory;

public class SchedConfEventTestCase extends BaseTestCase {

   private JGDI jgdi;
   private EventClient evc;
   
   public SchedConfEventTestCase(String name) {
      super(name);
   }
   
   public static Test suite() {
      TestSuite suite = new TestSuite(SchedConfEventTestCase.class);
      return suite;
   }
   
   protected void setUp() throws Exception {

      jgdi = createJGDI();
      evc = createEventClient(0);
      super.setUp();
      logger.fine("SetUp done");
   }
   
   protected void tearDown() throws Exception {
      try {
        evc.close();
      } finally {
         jgdi.close();
      }
   }
   


   public void testSchedConf() throws Exception {

      // static test for SchedConf not implemented
      SchedConf testObj = jgdi.getSchedConf();
      

         int orgValue = testObj.getMaxujobs();
        
  
    
      WaitForEventThread waitThread = new WaitForEventThread(testObj);
    
      int flushInterval = 1; // in seconds
      long timeout = flushInterval * 1000 * 3;
      try {

         evc.addEventListener(waitThread);

         evc.subscribe(EventTypeEnum.SchedConfMod);
         evc.setFlush(EventTypeEnum.SchedConfMod, flushInterval);
         
         evc.commit();
         waitThread.start();
         Thread.yield();

         testObj.setMaxujobs(orgValue+1);
  

         jgdi.updateSchedConf(testObj);
         
         assertTrue("SchedConf: Did not get the mod event", waitThread.waitForModEvent(timeout));
         
      } finally {
         waitThread.interrupt();
         evc.unsubscribe(EventTypeEnum.SchedConfMod);
         evc.commit();

         testObj = jgdi.getSchedConf();

         testObj.setMaxujobs(orgValue);
  
         jgdi.updateSchedConf(testObj);
      }
         
   }


}
