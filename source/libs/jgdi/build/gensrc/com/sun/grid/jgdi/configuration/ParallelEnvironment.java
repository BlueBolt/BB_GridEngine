/*___INFO__MARK_BEGIN__*/
/*************************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  the Sun Industry Standards Source License Version 1.2
 *
 *  Sun Microsystems Inc., March, 2001
 *
 *
 *  Sun Industry Standards Source License Version 1.2
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.2 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *   Copyright: 2001 by Sun Microsystems, Inc.
 *
 *   All Rights Reserved.
 *
 ************************************************************************/
/*___INFO__MARK_END__*/
/**
 *  Generated from javamodel.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */

package com.sun.grid.jgdi.configuration;

import com.sun.grid.jgdi.configuration.GEObject;
import java.util.List;
import java.util.Set;

/**
 *  Java representation of the cull object PE_Type
 *  defined in sge_all_listsL.template
 *
 *  <p><strong>Warning:</strong>  The  ParallelEnvironment class will 
 *  not be compatible with future Sun&trade; Grid Engine releases.</p>
 *
 */
public interface ParallelEnvironment extends 
    GEObject  { 

    // Attribute name ------------------------------------------------

       
    /**
     *   Set the name attribute.
     *
     *   @param aName  the new value for the  name attribute
     */
    public void setName(java.lang.String aName);
  
    /**
     *  Get the value of the name attribute.
     *  @return the value of the name attribute
     */
    public java.lang.String getName();
   

 
    /**
     *  Determine if any name attribute is set
     *  @return <code>true</code> if the name attribute is set
     */
    public boolean isSetName();


    // Attribute slots ------------------------------------------------

       
    /**
     *   Set the slots attribute.
     *
     *   @param aSlots  the new value for the  slots attribute
     */
    public void setSlots(int aSlots);
  
    /**
     *  Get the value of the slots attribute.
     *  @return the value of the slots attribute
     */
    public int getSlots();
   

 
    /**
     *  Determine if any slots attribute is set
     *  @return <code>true</code> if the slots attribute is set
     */
    public boolean isSetSlots();


    // Attribute userList ------------------------------------------------


    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.UserSet attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.UserSet attributes
     */
    public List< com.sun.grid.jgdi.configuration.UserSet >  getUserList();

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.UserSet attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.UserSet attributes.
     */
    public int getUserCount();
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.UserSet attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public com.sun.grid.jgdi.configuration.UserSet getUser(int index);
   

    /**
     *   Add a com.sun.grid.jgdi.configuration.UserSet attribute.
     *   @param auser  the new com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public void addUser(com.sun.grid.jgdi.configuration.UserSet auser);
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.UserSet attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.UserSet attribute
     *   @param auser  the new com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public void setUser(int index, com.sun.grid.jgdi.configuration.UserSet auser);

    /**
     *  Remove all com.sun.grid.jgdi.configuration.UserSet attributes.
     */
    public void removeAllUser();
   
    /**
     *  Remote a com.sun.grid.jgdi.configuration.UserSet attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.UserSet attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.UserSet removeUser(int index);

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.UserSet attribute.
     *  @param auser  the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.UserSet attribute has been removed
     */
    public boolean removeUser(com.sun.grid.jgdi.configuration.UserSet auser);
   
       
 
    /**
     *  Determine if any user attribute is set
     *  @return <code>true</code> if the user attribute is set
     */
    public boolean isSetUser();


    // Attribute xuserList ------------------------------------------------


    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.UserSet attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.UserSet attributes
     */
    public List< com.sun.grid.jgdi.configuration.UserSet >  getXuserList();

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.UserSet attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.UserSet attributes.
     */
    public int getXuserCount();
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.UserSet attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public com.sun.grid.jgdi.configuration.UserSet getXuser(int index);
   

    /**
     *   Add a com.sun.grid.jgdi.configuration.UserSet attribute.
     *   @param axuser  the new com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public void addXuser(com.sun.grid.jgdi.configuration.UserSet axuser);
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.UserSet attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.UserSet attribute
     *   @param axuser  the new com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public void setXuser(int index, com.sun.grid.jgdi.configuration.UserSet axuser);

    /**
     *  Remove all com.sun.grid.jgdi.configuration.UserSet attributes.
     */
    public void removeAllXuser();
   
    /**
     *  Remote a com.sun.grid.jgdi.configuration.UserSet attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.UserSet attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.UserSet removeXuser(int index);

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.UserSet attribute.
     *  @param axuser  the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.UserSet attribute has been removed
     */
    public boolean removeXuser(com.sun.grid.jgdi.configuration.UserSet axuser);
   
       
 
    /**
     *  Determine if any xuser attribute is set
     *  @return <code>true</code> if the xuser attribute is set
     */
    public boolean isSetXuser();


    // Attribute startProcArgs ------------------------------------------------

       
    /**
     *   Set the startProcArgs attribute.
     *
     *   @param aStartProcArgs  the new value for the  startProcArgs attribute
     */
    public void setStartProcArgs(java.lang.String aStartProcArgs);
  
    /**
     *  Get the value of the startProcArgs attribute.
     *  @return the value of the startProcArgs attribute
     */
    public java.lang.String getStartProcArgs();
   

 
    /**
     *  Determine if any startProcArgs attribute is set
     *  @return <code>true</code> if the startProcArgs attribute is set
     */
    public boolean isSetStartProcArgs();


    // Attribute stopProcArgs ------------------------------------------------

       
    /**
     *   Set the stopProcArgs attribute.
     *
     *   @param aStopProcArgs  the new value for the  stopProcArgs attribute
     */
    public void setStopProcArgs(java.lang.String aStopProcArgs);
  
    /**
     *  Get the value of the stopProcArgs attribute.
     *  @return the value of the stopProcArgs attribute
     */
    public java.lang.String getStopProcArgs();
   

 
    /**
     *  Determine if any stopProcArgs attribute is set
     *  @return <code>true</code> if the stopProcArgs attribute is set
     */
    public boolean isSetStopProcArgs();


    // Attribute allocationRule ------------------------------------------------

       
    /**
     *   Set the allocationRule attribute.
     *
     *   @param aAllocationRule  the new value for the  allocationRule attribute
     */
    public void setAllocationRule(java.lang.String aAllocationRule);
  
    /**
     *  Get the value of the allocationRule attribute.
     *  @return the value of the allocationRule attribute
     */
    public java.lang.String getAllocationRule();
   

 
    /**
     *  Determine if any allocationRule attribute is set
     *  @return <code>true</code> if the allocationRule attribute is set
     */
    public boolean isSetAllocationRule();


    // Attribute controlSlaves ------------------------------------------------

       
    /**
     *   Set the controlSlaves attribute.
     *
     *   @param aControlSlaves  the new value for the  controlSlaves attribute
     */
    public void setControlSlaves(boolean aControlSlaves);
  
    /**
     *  Get the value of the controlSlaves attribute.
     *  @return the value of the controlSlaves attribute
     */
    public boolean isControlSlaves();
   

 
    /**
     *  Determine if any controlSlaves attribute is set
     *  @return <code>true</code> if the controlSlaves attribute is set
     */
    public boolean isSetControlSlaves();


    // Attribute jobIsFirstTask ------------------------------------------------

       
    /**
     *   Set the jobIsFirstTask attribute.
     *
     *   @param aJobIsFirstTask  the new value for the  jobIsFirstTask attribute
     */
    public void setJobIsFirstTask(boolean aJobIsFirstTask);
  
    /**
     *  Get the value of the jobIsFirstTask attribute.
     *  @return the value of the jobIsFirstTask attribute
     */
    public boolean isJobIsFirstTask();
   

 
    /**
     *  Determine if any jobIsFirstTask attribute is set
     *  @return <code>true</code> if the jobIsFirstTask attribute is set
     */
    public boolean isSetJobIsFirstTask();


    // Attribute urgencySlots ------------------------------------------------

       
    /**
     *   Set the urgencySlots attribute.
     *
     *   @param aUrgencySlots  the new value for the  urgencySlots attribute
     */
    public void setUrgencySlots(java.lang.String aUrgencySlots);
  
    /**
     *  Get the value of the urgencySlots attribute.
     *  @return the value of the urgencySlots attribute
     */
    public java.lang.String getUrgencySlots();
   

 
    /**
     *  Determine if any urgencySlots attribute is set
     *  @return <code>true</code> if the urgencySlots attribute is set
     */
    public boolean isSetUrgencySlots();


    // Attribute accountingSummary ------------------------------------------------

       
    /**
     *   Set the accountingSummary attribute.
     *
     *   @param aAccountingSummary  the new value for the  accountingSummary attribute
     */
    public void setAccountingSummary(boolean aAccountingSummary);
  
    /**
     *  Get the value of the accountingSummary attribute.
     *  @return the value of the accountingSummary attribute
     */
    public boolean isAccountingSummary();
   

 
    /**
     *  Determine if any accountingSummary attribute is set
     *  @return <code>true</code> if the accountingSummary attribute is set
     */
    public boolean isSetAccountingSummary();



    /*
     * Dump the object
     * @return <code>String</code> the dump string
     */
     public String dump();
     

}
