/*___INFO__MARK_BEGIN__*/
/*************************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  the Sun Industry Standards Source License Version 1.2
 *
 *  Sun Microsystems Inc., March, 2001
 *
 *
 *  Sun Industry Standards Source License Version 1.2
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.2 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *   Copyright: 2001 by Sun Microsystems, Inc.
 *
 *   All Rights Reserved.
 *
 ************************************************************************/
/*___INFO__MARK_END__*/
/**
 *  Generated from javamodel_impl.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */

package com.sun.grid.jgdi.configuration;

import javax.management.*;
import com.sun.grid.jgdi.configuration.GEObject;
import java.util.List;
import java.util.LinkedList;
import java.util.Collections;
import java.util.Map;
import java.util.Set;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.logging.Logger;
import java.util.logging.Level;

/**
 *  Java representation of the cull object PA_Type
 *  defined in sge_all_listsL.template
 *
 *  <p><strong>Warning:</strong>  The  PathAliasImpl class will 
 *  not be compatible with future Sun&trade; Grid Engine releases.</p>
 */
public class PathAliasImpl extends    GEObjectImpl implements PathAlias {


   /**
    *  Create a new instance of PathAliasImpl. The new instance
    *  will not be initialized with the default values.
    */
   public PathAliasImpl() {
      this(false);
   }
   
   /**
    *   Create a new instanceof
    *   @param  initWithDefaultValues if <code>true</code> the new instance will
    *                                 be initialized with the default values as defined
    *                                 in the cull definition.
    */
   public PathAliasImpl(boolean initWithDefaultValues) { 

      if (initWithDefaultValues) {     
    }

  } // end of default constructor
  
  // --- newInstance method with primary key field
  

   /**
    *  Create a new instance of PathAliasImpl
    */
   public PathAliasImpl(java.lang.String origin ) {

   
         setOrigin(origin);

    }



    // Attribute origin ------------------------------------------------
   
    /**
     *  Determine if the origin attribute is set
     *  @return <code>true</code> if the origin attribute is set
     */
    public boolean isSetOrigin() {
   
        return  (m_origin != null);

    }
   
    private java.lang.String m_origin;

    /**
     *   Set the origin attribute.
     *
     *   @param aOrigin  the new value for the  origin attribute
     */
    public void setOrigin(java.lang.String aOrigin) {   
        m_origin = aOrigin;

    }

    /**
     *  Get the value of the origin attribute.
     *  @return the value of the origin attribute
     */
    public java.lang.String getOrigin() {
        return m_origin;
    }


    // Attribute submitHost ------------------------------------------------
   
    /**
     *  Determine if the submitHost attribute is set
     *  @return <code>true</code> if the submitHost attribute is set
     */
    public boolean isSetSubmitHost() {
   
        return  (m_submitHost != null);

    }
   
    private java.lang.String m_submitHost;

    /**
     *   Set the submitHost attribute.
     *
     *   @param aSubmitHost  the new value for the  submitHost attribute
     */
    public void setSubmitHost(java.lang.String aSubmitHost) {   
        m_submitHost = aSubmitHost;

    }

    /**
     *  Get the value of the submitHost attribute.
     *  @return the value of the submitHost attribute
     */
    public java.lang.String getSubmitHost() {
        return m_submitHost;
    }


    // Attribute execHost ------------------------------------------------
   
    /**
     *  Determine if the execHost attribute is set
     *  @return <code>true</code> if the execHost attribute is set
     */
    public boolean isSetExecHost() {
   
        return  (m_execHost != null);

    }
   
    private java.lang.String m_execHost;

    /**
     *   Set the execHost attribute.
     *
     *   @param aExecHost  the new value for the  execHost attribute
     */
    public void setExecHost(java.lang.String aExecHost) {   
        m_execHost = aExecHost;

    }

    /**
     *  Get the value of the execHost attribute.
     *  @return the value of the execHost attribute
     */
    public java.lang.String getExecHost() {
        return m_execHost;
    }


    // Attribute translation ------------------------------------------------
   
    /**
     *  Determine if the translation attribute is set
     *  @return <code>true</code> if the translation attribute is set
     */
    public boolean isSetTranslation() {
   
        return  (m_translation != null);

    }
   
    private java.lang.String m_translation;

    /**
     *   Set the translation attribute.
     *
     *   @param aTranslation  the new value for the  translation attribute
     */
    public void setTranslation(java.lang.String aTranslation) {   
        m_translation = aTranslation;

    }

    /**
     *  Get the value of the translation attribute.
     *  @return the value of the translation attribute
     */
    public java.lang.String getTranslation() {
        return m_translation;
    }




    /**
     *  Is the primary key information equal to the primary key information
     *  of <code>obj</code>.
     *
     *  @param obj   the compared object
     *  @return <code>true</code> if the primary key information is equal to the
     *          primary key informations of <code>obj</code>.
     */
    public boolean equals(Object obj) {

        return (obj instanceof PathAliasImpl && getOrigin().equals(((com.sun.grid.jgdi.configuration.PathAlias)obj).getOrigin()));

    }

    
    
    public boolean equalsCompletely(Object obj) {
        Logger logger = Logger.getLogger(getClass().getName());
        if (obj instanceof  PathAliasImpl) {
            com.sun.grid.jgdi.configuration.PathAlias obj1 = (com.sun.grid.jgdi.configuration.PathAlias)obj;

            {
                java.lang.String value1 = getOrigin();
                java.lang.String value2 = obj1.getOrigin();        

            if (value1 == null) {
                if (value2 != null) {
                    if (logger.isLoggable(Level.FINE)) {
                        logger.fine("attribute PA_origin of obj1 " + value2 + " is not null as obj " + value1);
                    }
                    return false;
                }
            } else {

                if (!value1.equals(value2)) {
                    if (logger.isLoggable(Level.FINE)) {
                        logger.fine("attributes PA_origin are not equal: " + value1 + " != " + value2);
                    }
                    return false;
                }

            }

            }

            {
                java.lang.String value1 = getSubmitHost();
                java.lang.String value2 = obj1.getSubmitHost();        

            if (value1 == null) {
                if (value2 != null) {
                    if (logger.isLoggable(Level.FINE)) {
                        logger.fine("attribute PA_submit_host of obj1 " + value2 + " is not null as obj " + value1);
                    }
                    return false;
                }
            } else {

                if (!value1.equals(value2)) {
                    if (logger.isLoggable(Level.FINE)) {
                        logger.fine("attributes PA_submit_host are not equal: " + value1 + " != " + value2);
                    }
                    return false;
                }

            }

            }

            {
                java.lang.String value1 = getExecHost();
                java.lang.String value2 = obj1.getExecHost();        

            if (value1 == null) {
                if (value2 != null) {
                    if (logger.isLoggable(Level.FINE)) {
                        logger.fine("attribute PA_exec_host of obj1 " + value2 + " is not null as obj " + value1);
                    }
                    return false;
                }
            } else {

                if (!value1.equals(value2)) {
                    if (logger.isLoggable(Level.FINE)) {
                        logger.fine("attributes PA_exec_host are not equal: " + value1 + " != " + value2);
                    }
                    return false;
                }

            }

            }

            {
                java.lang.String value1 = getTranslation();
                java.lang.String value2 = obj1.getTranslation();        

            if (value1 == null) {
                if (value2 != null) {
                    if (logger.isLoggable(Level.FINE)) {
                        logger.fine("attribute PA_translation of obj1 " + value2 + " is not null as obj " + value1);
                    }
                    return false;
                }
            } else {

                if (!value1.equals(value2)) {
                    if (logger.isLoggable(Level.FINE)) {
                        logger.fine("attributes PA_translation are not equal: " + value1 + " != " + value2);
                    }
                    return false;
                }

            }

            }

            return true;
        } else {
            return true;
        }
    }
  
    public java.lang.String toString() {
        StringBuilder ret = new StringBuilder();
        ret.append("PathAliasImpl(");

        ret.append(getOrigin());

        ret.append(")");
        return ret.toString();
    }



    public java.lang.String dump() {
        StringBuilder sb = new StringBuilder();

            {
                java.lang.String value = getOrigin();
                sb.append("Origin = " + value + "\n");
            }

            {
                java.lang.String value = getSubmitHost();
                sb.append("SubmitHost = " + value + "\n");
            }

            {
                java.lang.String value = getExecHost();
                sb.append("ExecHost = " + value + "\n");
            }

            {
                java.lang.String value = getTranslation();
                sb.append("Translation = " + value + "\n");
            }

        return sb.toString();
    }    

 
}
