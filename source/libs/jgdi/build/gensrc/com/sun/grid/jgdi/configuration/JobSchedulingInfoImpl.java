/*___INFO__MARK_BEGIN__*/
/*************************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  the Sun Industry Standards Source License Version 1.2
 *
 *  Sun Microsystems Inc., March, 2001
 *
 *
 *  Sun Industry Standards Source License Version 1.2
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.2 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *   Copyright: 2001 by Sun Microsystems, Inc.
 *
 *   All Rights Reserved.
 *
 ************************************************************************/
/*___INFO__MARK_END__*/
/**
 *  Generated from javamodel_impl.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */

package com.sun.grid.jgdi.configuration;

import javax.management.*;
import com.sun.grid.jgdi.configuration.GEObject;
import java.util.List;
import java.util.LinkedList;
import java.util.Collections;
import java.util.Map;
import java.util.Set;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.logging.Logger;
import java.util.logging.Level;

/**
 *  Java representation of the cull object SME_Type
 *  defined in sge_all_listsL.template
 *
 *  <p><strong>Warning:</strong>  The  JobSchedulingInfoImpl class will 
 *  not be compatible with future Sun&trade; Grid Engine releases.</p>
 */
public class JobSchedulingInfoImpl extends    GEObjectImpl implements JobSchedulingInfo {


   /**
    *  Create a new instance of JobSchedulingInfoImpl. The new instance
    *  will not be initialized with the default values.
    */
   public JobSchedulingInfoImpl() {
      this(false);
   }
   
   /**
    *   Create a new instanceof
    *   @param  initWithDefaultValues if <code>true</code> the new instance will
    *                                 be initialized with the default values as defined
    *                                 in the cull definition.
    */
   public JobSchedulingInfoImpl(boolean initWithDefaultValues) { 

      if (initWithDefaultValues) {     
    }

  } // end of default constructor
  
  // --- newInstance method with primary key field
  



    // Attribute messageList ------------------------------------------------

    private List< com.sun.grid.jgdi.configuration.JobSchedulingMessage > m_messageList;
   
    private void initMessage() {
        if (m_messageList == null) {
            m_messageList = new LinkedList< com.sun.grid.jgdi.configuration.JobSchedulingMessage >();
        }
    }

    /**
     *   Add a com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute.

     *   @param amessage  the new com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute
     */
    public void addMessage(com.sun.grid.jgdi.configuration.JobSchedulingMessage amessage) {   
        initMessage();
        
        m_messageList.add(amessage);
        
    }
   
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute
     *   @param amessage  the new com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute
     */
    public void setMessage(int index, com.sun.grid.jgdi.configuration.JobSchedulingMessage amessage) {
        initMessage();
        m_messageList.set(index, amessage);
    }

    /**
     *  Remove all com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes.
     */
    public void removeAllMessage() {
        if (m_messageList != null) {
            m_messageList.clear();
        }
    }

    /**
     *  Remote a com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.JobSchedulingMessage removeMessage(int index) {
        initMessage();
        return (com.sun.grid.jgdi.configuration.JobSchedulingMessage)m_messageList.remove(index);
    }

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute.
     *  @param amessage  the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute has been removed
     */
    public boolean removeMessage(com.sun.grid.jgdi.configuration.JobSchedulingMessage amessage) {
        initMessage();
        return m_messageList.remove(amessage);
    }
   
    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes
     */
    public List< com.sun.grid.jgdi.configuration.JobSchedulingMessage > getMessageList() {
        initMessage();
        return Collections.unmodifiableList(m_messageList);
    }

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes.
     */
    public int getMessageCount() {
        if (m_messageList != null) {
            return m_messageList.size();
        } else {
            return 0;
        }
    }
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute
     */
    public com.sun.grid.jgdi.configuration.JobSchedulingMessage getMessage(int index) {
        initMessage();
        return (com.sun.grid.jgdi.configuration.JobSchedulingMessage)m_messageList.get(index);
    }
   
    /**
     *  Determine if the message attribute is set
     *  @return <code>true</code> if the message attribute is set
     */
    public boolean isSetMessage () {
        return (m_messageList != null) && (!m_messageList.isEmpty());
    }
   

    // Attribute globalMessageList ------------------------------------------------

    private List< com.sun.grid.jgdi.configuration.JobSchedulingMessage > m_globalMessageList;
   
    private void initGlobalMessage() {
        if (m_globalMessageList == null) {
            m_globalMessageList = new LinkedList< com.sun.grid.jgdi.configuration.JobSchedulingMessage >();
        }
    }

    /**
     *   Add a com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute.

     *   @param aglobalMessage  the new com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute
     */
    public void addGlobalMessage(com.sun.grid.jgdi.configuration.JobSchedulingMessage aglobalMessage) {   
        initGlobalMessage();
        
        m_globalMessageList.add(aglobalMessage);
        
    }
   
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute
     *   @param aglobalMessage  the new com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute
     */
    public void setGlobalMessage(int index, com.sun.grid.jgdi.configuration.JobSchedulingMessage aglobalMessage) {
        initGlobalMessage();
        m_globalMessageList.set(index, aglobalMessage);
    }

    /**
     *  Remove all com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes.
     */
    public void removeAllGlobalMessage() {
        if (m_globalMessageList != null) {
            m_globalMessageList.clear();
        }
    }

    /**
     *  Remote a com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.JobSchedulingMessage removeGlobalMessage(int index) {
        initGlobalMessage();
        return (com.sun.grid.jgdi.configuration.JobSchedulingMessage)m_globalMessageList.remove(index);
    }

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute.
     *  @param aglobalMessage  the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute has been removed
     */
    public boolean removeGlobalMessage(com.sun.grid.jgdi.configuration.JobSchedulingMessage aglobalMessage) {
        initGlobalMessage();
        return m_globalMessageList.remove(aglobalMessage);
    }
   
    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes
     */
    public List< com.sun.grid.jgdi.configuration.JobSchedulingMessage > getGlobalMessageList() {
        initGlobalMessage();
        return Collections.unmodifiableList(m_globalMessageList);
    }

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.JobSchedulingMessage attributes.
     */
    public int getGlobalMessageCount() {
        if (m_globalMessageList != null) {
            return m_globalMessageList.size();
        } else {
            return 0;
        }
    }
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.JobSchedulingMessage attribute
     */
    public com.sun.grid.jgdi.configuration.JobSchedulingMessage getGlobalMessage(int index) {
        initGlobalMessage();
        return (com.sun.grid.jgdi.configuration.JobSchedulingMessage)m_globalMessageList.get(index);
    }
   
    /**
     *  Determine if the globalMessage attribute is set
     *  @return <code>true</code> if the globalMessage attribute is set
     */
    public boolean isSetGlobalMessage () {
        return (m_globalMessageList != null) && (!m_globalMessageList.isEmpty());
    }
   



    /**
     *  Is the primary key information equal to the primary key information
     *  of <code>obj</code>.
     *
     *  @param obj   the compared object
     *  @return <code>true</code> if the primary key information is equal to the
     *          primary key informations of <code>obj</code>.
     */
    public boolean equals(Object obj) {
            
            return obj instanceof JobSchedulingInfoImpl;

    }

    
    
    public boolean equalsCompletely(Object obj) {
        Logger logger = Logger.getLogger(getClass().getName());
        if (obj instanceof  JobSchedulingInfoImpl) {
            com.sun.grid.jgdi.configuration.JobSchedulingInfo obj1 = (com.sun.grid.jgdi.configuration.JobSchedulingInfo)obj;

            return true;
        } else {
            return true;
        }
    }
  
    public java.lang.String toString() {
        StringBuilder ret = new StringBuilder();
        ret.append("JobSchedulingInfoImpl(");

        ret.append(")");
        return ret.toString();
    }



    public java.lang.String dump() {
        StringBuilder sb = new StringBuilder();

        return sb.toString();
    }    

 
}
