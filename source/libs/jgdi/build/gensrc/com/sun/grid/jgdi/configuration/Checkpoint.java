/*___INFO__MARK_BEGIN__*/
/*************************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  the Sun Industry Standards Source License Version 1.2
 *
 *  Sun Microsystems Inc., March, 2001
 *
 *
 *  Sun Industry Standards Source License Version 1.2
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.2 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *   Copyright: 2001 by Sun Microsystems, Inc.
 *
 *   All Rights Reserved.
 *
 ************************************************************************/
/*___INFO__MARK_END__*/
/**
 *  Generated from javamodel.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */

package com.sun.grid.jgdi.configuration;

import com.sun.grid.jgdi.configuration.GEObject;
import java.util.List;
import java.util.Set;

/**
 *  Java representation of the cull object CK_Type
 *  defined in sge_all_listsL.template
 *
 *  <p><strong>Warning:</strong>  The  Checkpoint class will 
 *  not be compatible with future Sun&trade; Grid Engine releases.</p>
 *
 */
public interface Checkpoint extends 
    GEObject  { 

    // Attribute name ------------------------------------------------

       
    /**
     *   Set the name attribute.
     *
     *   @param aName  the new value for the  name attribute
     */
    public void setName(java.lang.String aName);
  
    /**
     *  Get the value of the name attribute.
     *  @return the value of the name attribute
     */
    public java.lang.String getName();
   

 
    /**
     *  Determine if any name attribute is set
     *  @return <code>true</code> if the name attribute is set
     */
    public boolean isSetName();


    // Attribute interface ------------------------------------------------

       
    /**
     *   Set the interface attribute.
     *
     *   @param aInterface  the new value for the  interface attribute
     */
    public void setInterface(java.lang.String aInterface);
  
    /**
     *  Get the value of the interface attribute.
     *  @return the value of the interface attribute
     */
    public java.lang.String getInterface();
   

 
    /**
     *  Determine if any interface attribute is set
     *  @return <code>true</code> if the interface attribute is set
     */
    public boolean isSetInterface();


    // Attribute ckptCommand ------------------------------------------------

       
    /**
     *   Set the ckptCommand attribute.
     *
     *   @param aCkptCommand  the new value for the  ckptCommand attribute
     */
    public void setCkptCommand(java.lang.String aCkptCommand);
  
    /**
     *  Get the value of the ckptCommand attribute.
     *  @return the value of the ckptCommand attribute
     */
    public java.lang.String getCkptCommand();
   

 
    /**
     *  Determine if any ckptCommand attribute is set
     *  @return <code>true</code> if the ckptCommand attribute is set
     */
    public boolean isSetCkptCommand();


    // Attribute migrCommand ------------------------------------------------

       
    /**
     *   Set the migrCommand attribute.
     *
     *   @param aMigrCommand  the new value for the  migrCommand attribute
     */
    public void setMigrCommand(java.lang.String aMigrCommand);
  
    /**
     *  Get the value of the migrCommand attribute.
     *  @return the value of the migrCommand attribute
     */
    public java.lang.String getMigrCommand();
   

 
    /**
     *  Determine if any migrCommand attribute is set
     *  @return <code>true</code> if the migrCommand attribute is set
     */
    public boolean isSetMigrCommand();


    // Attribute restCommand ------------------------------------------------

       
    /**
     *   Set the restCommand attribute.
     *
     *   @param aRestCommand  the new value for the  restCommand attribute
     */
    public void setRestCommand(java.lang.String aRestCommand);
  
    /**
     *  Get the value of the restCommand attribute.
     *  @return the value of the restCommand attribute
     */
    public java.lang.String getRestCommand();
   

 
    /**
     *  Determine if any restCommand attribute is set
     *  @return <code>true</code> if the restCommand attribute is set
     */
    public boolean isSetRestCommand();


    // Attribute ckptDir ------------------------------------------------

       
    /**
     *   Set the ckptDir attribute.
     *
     *   @param aCkptDir  the new value for the  ckptDir attribute
     */
    public void setCkptDir(java.lang.String aCkptDir);
  
    /**
     *  Get the value of the ckptDir attribute.
     *  @return the value of the ckptDir attribute
     */
    public java.lang.String getCkptDir();
   

 
    /**
     *  Determine if any ckptDir attribute is set
     *  @return <code>true</code> if the ckptDir attribute is set
     */
    public boolean isSetCkptDir();


    // Attribute when ------------------------------------------------

       
    /**
     *   Set the when attribute.
     *
     *   @param aWhen  the new value for the  when attribute
     */
    public void setWhen(java.lang.String aWhen);
  
    /**
     *  Get the value of the when attribute.
     *  @return the value of the when attribute
     */
    public java.lang.String getWhen();
   

 
    /**
     *  Determine if any when attribute is set
     *  @return <code>true</code> if the when attribute is set
     */
    public boolean isSetWhen();


    // Attribute signal ------------------------------------------------

       
    /**
     *   Set the signal attribute.
     *
     *   @param aSignal  the new value for the  signal attribute
     */
    public void setSignal(java.lang.String aSignal);
  
    /**
     *  Get the value of the signal attribute.
     *  @return the value of the signal attribute
     */
    public java.lang.String getSignal();
   

 
    /**
     *  Determine if any signal attribute is set
     *  @return <code>true</code> if the signal attribute is set
     */
    public boolean isSetSignal();


    // Attribute cleanCommand ------------------------------------------------

       
    /**
     *   Set the cleanCommand attribute.
     *
     *   @param aCleanCommand  the new value for the  cleanCommand attribute
     */
    public void setCleanCommand(java.lang.String aCleanCommand);
  
    /**
     *  Get the value of the cleanCommand attribute.
     *  @return the value of the cleanCommand attribute
     */
    public java.lang.String getCleanCommand();
   

 
    /**
     *  Determine if any cleanCommand attribute is set
     *  @return <code>true</code> if the cleanCommand attribute is set
     */
    public boolean isSetCleanCommand();



    /*
     * Dump the object
     * @return <code>String</code> the dump string
     */
     public String dump();
     

}
