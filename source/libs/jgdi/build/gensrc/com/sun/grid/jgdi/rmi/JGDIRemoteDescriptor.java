/*___INFO__MARK_BEGIN__*/
/*************************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  the Sun Industry Standards Source License Version 1.2
 *
 *  Sun Microsystems Inc., March, 2001
 *
 *
 *  Sun Industry Standards Source License Version 1.2
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.2 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *   Copyright: 2001 by Sun Microsystems, Inc.
 *
 *   All Rights Reserved.
 *
 ************************************************************************/
/*___INFO__MARK_END__*/
/**
 *  Generated from java_jgdi_descriptor.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */

package com.sun.grid.jgdi.rmi;


import java.rmi.RemoteException; 
import java.rmi.Remote;
import com.sun.grid.jgdi.configuration.reflect.AbstractClassDescriptor;
import com.sun.grid.jgdi.configuration.reflect.PlainListPropertyDescriptor;
import com.sun.grid.jgdi.configuration.reflect.SimplePropertyDescriptor;

import com.sun.grid.jgdi.configuration.Hostgroup;
import com.sun.grid.jgdi.configuration.SubmitHost;
import com.sun.grid.jgdi.configuration.ExecHost;
import com.sun.grid.jgdi.configuration.Manager;
import com.sun.grid.jgdi.configuration.AdvanceReservation;
import com.sun.grid.jgdi.configuration.SchedConf;
import com.sun.grid.jgdi.configuration.Configuration;
import com.sun.grid.jgdi.configuration.Project;
import com.sun.grid.jgdi.configuration.ShareTree;
import com.sun.grid.jgdi.configuration.AdminHost;
import com.sun.grid.jgdi.configuration.Checkpoint;
import com.sun.grid.jgdi.configuration.ParallelEnvironment;
import com.sun.grid.jgdi.configuration.ComplexEntry;
import com.sun.grid.jgdi.configuration.ClusterQueue;
import com.sun.grid.jgdi.configuration.JobSchedulingInfo;
import com.sun.grid.jgdi.configuration.UserSet;
import com.sun.grid.jgdi.configuration.Calendar;
import com.sun.grid.jgdi.configuration.Operator;
import com.sun.grid.jgdi.configuration.Job;
import com.sun.grid.jgdi.configuration.ResourceQuotaSet;
import com.sun.grid.jgdi.configuration.EventClient;
import com.sun.grid.jgdi.configuration.User;
/**
 *
 * 
 */
public class JGDIRemoteDescriptor extends AbstractClassDescriptor {
   

   public JGDIRemoteDescriptor() {
       super(JGDIRemote.class, null);
       
       PlainListPropertyDescriptor lpd = null;


      add( new PlainListPropertyDescriptor(JGDIRemote.class, "Hostgroup", Hostgroup.class, "HGRP_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "SubmitHost", SubmitHost.class, "SH_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "ExecHost", ExecHost.class, "EH_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "Manager", Manager.class, "UM_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "AdvanceReservation", AdvanceReservation.class, "AR_Type", -1, false, false, true));
      

      // add( new SimplePropertyDescriptor(JGDIRemote.class, "SchedConf", SchedConf.class,  "SC_Type", -1, false, true, false));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "Configuration", Configuration.class, "CONF_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "Project", Project.class, "PR_Type", -1, false, false, true));
      

      // add( new SimplePropertyDescriptor(JGDIRemote.class, "ShareTree", ShareTree.class,  "STN_Type", -1, false, true, false));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "AdminHost", AdminHost.class, "AH_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "Checkpoint", Checkpoint.class, "CK_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "ParallelEnvironment", ParallelEnvironment.class, "PE_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "ComplexEntry", ComplexEntry.class, "CE_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "ClusterQueue", ClusterQueue.class, "CQ_Type", -1, false, false, true));
      

      // add( new SimplePropertyDescriptor(JGDIRemote.class, "JobSchedulingInfo", JobSchedulingInfo.class,  "SME_Type", -1, false, true, false));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "UserSet", UserSet.class, "US_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "Calendar", Calendar.class, "CAL_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "Operator", Operator.class, "UO_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "Job", Job.class, "JB_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "ResourceQuotaSet", ResourceQuotaSet.class, "RQS_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "EventClient", EventClient.class, "EV_Type", -1, false, false, true));
      

      add( new PlainListPropertyDescriptor(JGDIRemote.class, "User", User.class, "UU_Type", -1, false, false, true));
      

   }
   
   public void validate(Object bean) throws com.sun.grid.jgdi.configuration.reflect.InvalidObjectException {
      // TODO
   }
}
