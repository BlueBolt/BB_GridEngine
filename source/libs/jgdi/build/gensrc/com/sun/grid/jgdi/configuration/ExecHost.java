/*___INFO__MARK_BEGIN__*/
/*************************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  the Sun Industry Standards Source License Version 1.2
 *
 *  Sun Microsystems Inc., March, 2001
 *
 *
 *  Sun Industry Standards Source License Version 1.2
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.2 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *   The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *   Copyright: 2001 by Sun Microsystems, Inc.
 *
 *   All Rights Reserved.
 *
 ************************************************************************/
/*___INFO__MARK_END__*/
/**
 *  Generated from javamodel.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */

package com.sun.grid.jgdi.configuration;

import com.sun.grid.jgdi.configuration.GEObject;
import java.util.List;
import java.util.Set;

/**
 *  Java representation of the cull object EH_Type
 *  defined in sge_all_listsL.template
 *
 *  <p><strong>Warning:</strong>  The  ExecHost class will 
 *  not be compatible with future Sun&trade; Grid Engine releases.</p>
 *
 */
public interface ExecHost extends 
    GEObject  { 

    // Attribute name ------------------------------------------------

       
    /**
     *   Set the name attribute.
     *
     *   @param aName  the new value for the  name attribute
     */
    public void setName(java.lang.String aName);
  
    /**
     *  Get the value of the name attribute.
     *  @return the value of the name attribute
     */
    public java.lang.String getName();
   

 
    /**
     *  Determine if any name attribute is set
     *  @return <code>true</code> if the name attribute is set
     */
    public boolean isSetName();


    // Attribute scalingList ------------------------------------------------

        // keyClassName for SGE_STRING = String
     
   
    /**
     *  <p>Get the default value of the attribute scaling.</p>
     *  @return the default value of the attribute scaling
     *  @throws  java.lang.IllegalStateException if the default value is not set
     */
    public double getDefaultScaling();

    /**
     *  <p>Get the scaling attribute for <code>key</code>.</p>
     *  @param   key   the key
     *  @return  the scaling attribute for <code>key</code> or the
     *           default value of  scaling
     */
    public double getScaling(String key);
   
    /**
     *  Get the set of <code>key</code>s which have the attribute scaling set.
     *  @return set of <code>key</code>s
     */
    public Set<String> getScalingKeys();
   
    /**
     *  Get the number of keys which have the attribute scaling set.
     *  @return the number of keys which have the attribute scaling set.
     */
    public int getScalingCount();
   
    /**
     *  Determine if any scaling attribute is for <code>key</code> is set
     *  @param  key the key
     *  @return <code>true</code> if the scaling attribute is set
     */
    public boolean isSetScaling(String key);
   
   
          
    /**
     *  <p>Put the attribute scaling for <code>key</code>.</p>
     *
     *  @param key   the key
     *  @param value the value
     */
    public void putScaling(String key, double value);
   


    /**
     *  <p>remove the attribute scaling for <code>key</code>.</p>
     *
     *  @param key  The key
     *  @return the value of the attribute for <code>key</code> or <code>null</code>
     *          if the attribute was not defined for <code>key</code>.
     */
    public java.lang.Double removeScaling(String key);
   
    /**
     *  <p>Remove the attribute scaling for all keys.</p>
     */
    public void removeAllScaling();


 
    /**
     *  Determine if any scaling attribute is set
     *  @return <code>true</code> if the scaling attribute is set
     */
    public boolean isSetScaling();


    // Attribute consumableConfigList ------------------------------------------------


    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.ComplexEntry attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.ComplexEntry attributes
     */
    public List< com.sun.grid.jgdi.configuration.ComplexEntry >  getConsumableConfigList();

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.ComplexEntry attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.ComplexEntry attributes.
     */
    public int getConsumableConfigCount();
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.ComplexEntry attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.ComplexEntry attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.ComplexEntry attribute
     */
    public com.sun.grid.jgdi.configuration.ComplexEntry getConsumableConfig(int index);
   

    /**
     *   Add a com.sun.grid.jgdi.configuration.ComplexEntry attribute.
     *   @param aconsumableConfig  the new com.sun.grid.jgdi.configuration.ComplexEntry attribute
     */
    public void addConsumableConfig(com.sun.grid.jgdi.configuration.ComplexEntry aconsumableConfig);
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.ComplexEntry attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.ComplexEntry attribute
     *   @param aconsumableConfig  the new com.sun.grid.jgdi.configuration.ComplexEntry attribute
     */
    public void setConsumableConfig(int index, com.sun.grid.jgdi.configuration.ComplexEntry aconsumableConfig);

    /**
     *  Remove all com.sun.grid.jgdi.configuration.ComplexEntry attributes.
     */
    public void removeAllConsumableConfig();
   
    /**
     *  Remote a com.sun.grid.jgdi.configuration.ComplexEntry attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.ComplexEntry attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.ComplexEntry attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.ComplexEntry removeConsumableConfig(int index);

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.ComplexEntry attribute.
     *  @param aconsumableConfig  the com.sun.grid.jgdi.configuration.ComplexEntry attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.ComplexEntry attribute has been removed
     */
    public boolean removeConsumableConfig(com.sun.grid.jgdi.configuration.ComplexEntry aconsumableConfig);
   
       
 
    /**
     *  Determine if any consumableConfig attribute is set
     *  @return <code>true</code> if the consumableConfig attribute is set
     */
    public boolean isSetConsumableConfig();


    // Attribute usageScalingList ------------------------------------------------

        // keyClassName for SGE_STRING = String
     
   
    /**
     *  <p>Get the default value of the attribute usageScaling.</p>
     *  @return the default value of the attribute usageScaling
     *  @throws  java.lang.IllegalStateException if the default value is not set
     */
    public double getDefaultUsageScaling();

    /**
     *  <p>Get the usageScaling attribute for <code>key</code>.</p>
     *  @param   key   the key
     *  @return  the usageScaling attribute for <code>key</code> or the
     *           default value of  usageScaling
     */
    public double getUsageScaling(String key);
   
    /**
     *  Get the set of <code>key</code>s which have the attribute usageScaling set.
     *  @return set of <code>key</code>s
     */
    public Set<String> getUsageScalingKeys();
   
    /**
     *  Get the number of keys which have the attribute usageScaling set.
     *  @return the number of keys which have the attribute usageScaling set.
     */
    public int getUsageScalingCount();
   
    /**
     *  Determine if any usageScaling attribute is for <code>key</code> is set
     *  @param  key the key
     *  @return <code>true</code> if the usageScaling attribute is set
     */
    public boolean isSetUsageScaling(String key);
   
   
          
    /**
     *  <p>Put the attribute usageScaling for <code>key</code>.</p>
     *
     *  @param key   the key
     *  @param value the value
     */
    public void putUsageScaling(String key, double value);
   


    /**
     *  <p>remove the attribute usageScaling for <code>key</code>.</p>
     *
     *  @param key  The key
     *  @return the value of the attribute for <code>key</code> or <code>null</code>
     *          if the attribute was not defined for <code>key</code>.
     */
    public java.lang.Double removeUsageScaling(String key);
   
    /**
     *  <p>Remove the attribute usageScaling for all keys.</p>
     */
    public void removeAllUsageScaling();


 
    /**
     *  Determine if any usageScaling attribute is set
     *  @return <code>true</code> if the usageScaling attribute is set
     */
    public boolean isSetUsageScaling();


    // Attribute loadList ------------------------------------------------

        // keyClassName for SGE_STRING = String
     
   
    /**
     *  <p>Get the default value of the attribute load.</p>
     *  @return the default value of the attribute load
     *  @throws  java.lang.IllegalStateException if the default value is not set
     */
    public String getDefaultLoad();

    /**
     *  <p>Get the load attribute for <code>key</code>.</p>
     *  @param   key   the key
     *  @return  the load attribute for <code>key</code> or the
     *           default value of  load
     */
    public String getLoad(String key);
   
    /**
     *  Get the set of <code>key</code>s which have the attribute load set.
     *  @return set of <code>key</code>s
     */
    public Set<String> getLoadKeys();
   
    /**
     *  Get the number of keys which have the attribute load set.
     *  @return the number of keys which have the attribute load set.
     */
    public int getLoadCount();
   
    /**
     *  Determine if any load attribute is for <code>key</code> is set
     *  @param  key the key
     *  @return <code>true</code> if the load attribute is set
     */
    public boolean isSetLoad(String key);
   
   


 
    /**
     *  Determine if any load attribute is set
     *  @return <code>true</code> if the load attribute is set
     */
    public boolean isSetLoad();


    // Attribute processors ------------------------------------------------

  
    /**
     *  Get the value of the processors attribute.
     *  @return the value of the processors attribute
     */
    public int getProcessors();
   

 
    /**
     *  Determine if any processors attribute is set
     *  @return <code>true</code> if the processors attribute is set
     */
    public boolean isSetProcessors();


    // Attribute acl ------------------------------------------------


    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.UserSet attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.UserSet attributes
     */
    public List< com.sun.grid.jgdi.configuration.UserSet >  getAclList();

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.UserSet attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.UserSet attributes.
     */
    public int getAclCount();
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.UserSet attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public com.sun.grid.jgdi.configuration.UserSet getAcl(int index);
   

    /**
     *   Add a com.sun.grid.jgdi.configuration.UserSet attribute.
     *   @param aacl  the new com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public void addAcl(com.sun.grid.jgdi.configuration.UserSet aacl);
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.UserSet attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.UserSet attribute
     *   @param aacl  the new com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public void setAcl(int index, com.sun.grid.jgdi.configuration.UserSet aacl);

    /**
     *  Remove all com.sun.grid.jgdi.configuration.UserSet attributes.
     */
    public void removeAllAcl();
   
    /**
     *  Remote a com.sun.grid.jgdi.configuration.UserSet attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.UserSet attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.UserSet removeAcl(int index);

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.UserSet attribute.
     *  @param aacl  the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.UserSet attribute has been removed
     */
    public boolean removeAcl(com.sun.grid.jgdi.configuration.UserSet aacl);
   
       
 
    /**
     *  Determine if any acl attribute is set
     *  @return <code>true</code> if the acl attribute is set
     */
    public boolean isSetAcl();


    // Attribute xacl ------------------------------------------------


    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.UserSet attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.UserSet attributes
     */
    public List< com.sun.grid.jgdi.configuration.UserSet >  getXaclList();

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.UserSet attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.UserSet attributes.
     */
    public int getXaclCount();
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.UserSet attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public com.sun.grid.jgdi.configuration.UserSet getXacl(int index);
   

    /**
     *   Add a com.sun.grid.jgdi.configuration.UserSet attribute.
     *   @param axacl  the new com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public void addXacl(com.sun.grid.jgdi.configuration.UserSet axacl);
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.UserSet attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.UserSet attribute
     *   @param axacl  the new com.sun.grid.jgdi.configuration.UserSet attribute
     */
    public void setXacl(int index, com.sun.grid.jgdi.configuration.UserSet axacl);

    /**
     *  Remove all com.sun.grid.jgdi.configuration.UserSet attributes.
     */
    public void removeAllXacl();
   
    /**
     *  Remote a com.sun.grid.jgdi.configuration.UserSet attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.UserSet attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.UserSet removeXacl(int index);

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.UserSet attribute.
     *  @param axacl  the com.sun.grid.jgdi.configuration.UserSet attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.UserSet attribute has been removed
     */
    public boolean removeXacl(com.sun.grid.jgdi.configuration.UserSet axacl);
   
       
 
    /**
     *  Determine if any xacl attribute is set
     *  @return <code>true</code> if the xacl attribute is set
     */
    public boolean isSetXacl();


    // Attribute prj ------------------------------------------------


    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.Project attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.Project attributes
     */
    public List< com.sun.grid.jgdi.configuration.Project >  getPrjList();

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.Project attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.Project attributes.
     */
    public int getPrjCount();
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.Project attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.Project attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.Project attribute
     */
    public com.sun.grid.jgdi.configuration.Project getPrj(int index);
   

    /**
     *   Add a com.sun.grid.jgdi.configuration.Project attribute.
     *   @param aprj  the new com.sun.grid.jgdi.configuration.Project attribute
     */
    public void addPrj(com.sun.grid.jgdi.configuration.Project aprj);
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.Project attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.Project attribute
     *   @param aprj  the new com.sun.grid.jgdi.configuration.Project attribute
     */
    public void setPrj(int index, com.sun.grid.jgdi.configuration.Project aprj);

    /**
     *  Remove all com.sun.grid.jgdi.configuration.Project attributes.
     */
    public void removeAllPrj();
   
    /**
     *  Remote a com.sun.grid.jgdi.configuration.Project attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.Project attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.Project attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.Project removePrj(int index);

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.Project attribute.
     *  @param aprj  the com.sun.grid.jgdi.configuration.Project attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.Project attribute has been removed
     */
    public boolean removePrj(com.sun.grid.jgdi.configuration.Project aprj);
   
       
 
    /**
     *  Determine if any prj attribute is set
     *  @return <code>true</code> if the prj attribute is set
     */
    public boolean isSetPrj();


    // Attribute xprj ------------------------------------------------


    /**
     *   Get a unmodifiable list of all com.sun.grid.jgdi.configuration.Project attributes.
     *
     *   @return Unmodifiable list with all com.sun.grid.jgdi.configuration.Project attributes
     */
    public List< com.sun.grid.jgdi.configuration.Project >  getXprjList();

    /**
     *  Get the number of com.sun.grid.jgdi.configuration.Project attributes.
     *
     *  @return The number of com.sun.grid.jgdi.configuration.Project attributes.
     */
    public int getXprjCount();
 
    /**
     *  Get a com.sun.grid.jgdi.configuration.Project attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.Project attribute which should be
     *                removed
     *  @return the com.sun.grid.jgdi.configuration.Project attribute
     */
    public com.sun.grid.jgdi.configuration.Project getXprj(int index);
   

    /**
     *   Add a com.sun.grid.jgdi.configuration.Project attribute.
     *   @param axprj  the new com.sun.grid.jgdi.configuration.Project attribute
     */
    public void addXprj(com.sun.grid.jgdi.configuration.Project axprj);
   
    /**
     *   Set a com.sun.grid.jgdi.configuration.Project attribute.
     *   @param index   index of the com.sun.grid.jgdi.configuration.Project attribute
     *   @param axprj  the new com.sun.grid.jgdi.configuration.Project attribute
     */
    public void setXprj(int index, com.sun.grid.jgdi.configuration.Project axprj);

    /**
     *  Remove all com.sun.grid.jgdi.configuration.Project attributes.
     */
    public void removeAllXprj();
   
    /**
     *  Remote a com.sun.grid.jgdi.configuration.Project attribute at an index.
     *  @param index  the index of the com.sun.grid.jgdi.configuration.Project attribute which should be
     *                removed
     *  @return the removed com.sun.grid.jgdi.configuration.Project attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public com.sun.grid.jgdi.configuration.Project removeXprj(int index);

    /**
     *  Remote a specific com.sun.grid.jgdi.configuration.Project attribute.
     *  @param axprj  the com.sun.grid.jgdi.configuration.Project attribute which should be
     *                         removed
     *  @return <code>true</code> if the com.sun.grid.jgdi.configuration.Project attribute has been removed
     */
    public boolean removeXprj(com.sun.grid.jgdi.configuration.Project axprj);
   
       
 
    /**
     *  Determine if any xprj attribute is set
     *  @return <code>true</code> if the xprj attribute is set
     */
    public boolean isSetXprj();


    // Attribute reportVariables ------------------------------------------------


    /**
     *   Get a unmodifiable list of all java.lang.String attributes.
     *
     *   @return Unmodifiable list with all java.lang.String attributes
     */
    public List< java.lang.String >  getReportVariablesList();

    /**
     *  Get the number of java.lang.String attributes.
     *
     *  @return The number of java.lang.String attributes.
     */
    public int getReportVariablesCount();
 
    /**
     *  Get a java.lang.String attribute at an index.
     *  @param index  the index of the java.lang.String attribute which should be
     *                removed
     *  @return the java.lang.String attribute
     */
    public java.lang.String getReportVariables(int index);
   

    /**
     *   Add a java.lang.String attribute.
     *   @param areportVariables  the new java.lang.String attribute
     */
    public void addReportVariables(java.lang.String areportVariables);
   
    /**
     *   Set a java.lang.String attribute.
     *   @param index   index of the java.lang.String attribute
     *   @param areportVariables  the new java.lang.String attribute
     */
    public void setReportVariables(int index, java.lang.String areportVariables);

    /**
     *  Remove all java.lang.String attributes.
     */
    public void removeAllReportVariables();
   
    /**
     *  Remote a java.lang.String attribute at an index.
     *  @param index  the index of the java.lang.String attribute which should be
     *                removed
     *  @return the removed java.lang.String attribute or <code>null</code> if
     *          no attribute at this index is stored
     */
    public java.lang.String removeReportVariables(int index);

    /**
     *  Remote a specific java.lang.String attribute.
     *  @param areportVariables  the java.lang.String attribute which should be
     *                         removed
     *  @return <code>true</code> if the java.lang.String attribute has been removed
     */
    public boolean removeReportVariables(java.lang.String areportVariables);
   
       
 
    /**
     *  Determine if any reportVariables attribute is set
     *  @return <code>true</code> if the reportVariables attribute is set
     */
    public boolean isSetReportVariables();



    /*
     * Dump the object
     * @return <code>String</code> the dump string
     */
     public String dump();
     

}
