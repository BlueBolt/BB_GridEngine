# 1 "../libs/sgeobj/sge_all_listsL.h"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "../libs/sgeobj/sge_all_listsL.h"
# 36 "../libs/sgeobj/sge_all_listsL.h"
# 1 "../common/basis_types.h" 1
# 35 "../common/basis_types.h"
# 1 "/usr/include/sys/types.h" 1 3 4
# 26 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 361 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 365 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 366 "/usr/include/sys/cdefs.h" 2 3 4
# 362 "/usr/include/features.h" 2 3 4
# 385 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4



# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 5 "/usr/include/gnu/stubs.h" 2 3 4




# 1 "/usr/include/gnu/stubs-64.h" 1 3 4
# 10 "/usr/include/gnu/stubs.h" 2 3 4
# 386 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/sys/types.h" 2 3 4



# 1 "/usr/include/bits/types.h" 1 3 4
# 28 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;







typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
# 131 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 132 "/usr/include/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef long int __swblk_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;

typedef long int __ssize_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;
# 31 "/usr/include/sys/types.h" 2 3 4



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;




typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 133 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 58 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 74 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 92 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 104 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 134 "/usr/include/sys/types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h" 1 3 4
# 211 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 148 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 195 "/usr/include/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 217 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 38 "/usr/include/endian.h" 2 3 4
# 61 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 28 "/usr/include/bits/byteswap.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/byteswap.h" 2 3 4
# 62 "/usr/include/endian.h" 2 3 4
# 218 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/select.h" 1 3 4
# 31 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/select.h" 1 3 4
# 23 "/usr/include/bits/select.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 24 "/usr/include/bits/select.h" 2 3 4
# 32 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 24 "/usr/include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 35 "/usr/include/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;





# 1 "/usr/include/time.h" 1 3 4
# 120 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    long int tv_nsec;
  };
# 45 "/usr/include/sys/select.h" 2 3 4

# 1 "/usr/include/bits/time.h" 1 3 4
# 75 "/usr/include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 47 "/usr/include/sys/select.h" 2 3 4
# 55 "/usr/include/sys/select.h" 3 4
typedef long int __fd_mask;
# 67 "/usr/include/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 99 "/usr/include/sys/select.h" 3 4

# 109 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 121 "/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);



# 221 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 30 "/usr/include/sys/sysmacros.h" 3 4
__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     __attribute__ ((__nothrow__));


__extension__ extern __inline unsigned int
__attribute__ ((__nothrow__)) gnu_dev_major (unsigned long long int __dev)
{
  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);
}

__extension__ extern __inline unsigned int
__attribute__ ((__nothrow__)) gnu_dev_minor (unsigned long long int __dev)
{
  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);
}

__extension__ extern __inline unsigned long long int
__attribute__ ((__nothrow__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)
{
  return ((__minor & 0xff) | ((__major & 0xfff) << 8)
   | (((unsigned long long int) (__minor & ~0xff)) << 12)
   | (((unsigned long long int) (__major & ~0xfff)) << 32));
}
# 224 "/usr/include/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 263 "/usr/include/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;





# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 24 "/usr/include/bits/pthreadtypes.h" 2 3 4
# 50 "/usr/include/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


typedef union
{
  char __size[56];
  long int __align;
} pthread_attr_t;



typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
# 76 "/usr/include/bits/pthreadtypes.h" 3 4
typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;

    unsigned int __nusers;



    int __kind;

    int __spins;
    __pthread_list_t __list;
# 101 "/usr/include/bits/pthreadtypes.h" 3 4
  } __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{

  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;
    int __writer;
    int __shared;
    unsigned long int __pad1;
    unsigned long int __pad2;


    unsigned int __flags;
  } __data;
# 187 "/usr/include/bits/pthreadtypes.h" 3 4
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 272 "/usr/include/sys/types.h" 2 3 4



# 36 "../common/basis_types.h" 2


# 1 "/usr/include/libintl.h" 1 3 4
# 35 "/usr/include/libintl.h" 3 4





extern char *gettext (__const char *__msgid)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (1)));



extern char *dgettext (__const char *__domainname, __const char *__msgid)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2)));
extern char *__dgettext (__const char *__domainname, __const char *__msgid)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2)));



extern char *dcgettext (__const char *__domainname,
   __const char *__msgid, int __category)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2)));
extern char *__dcgettext (__const char *__domainname,
     __const char *__msgid, int __category)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2)));




extern char *ngettext (__const char *__msgid1, __const char *__msgid2,
         unsigned long int __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (1))) __attribute__ ((__format_arg__ (2)));



extern char *dngettext (__const char *__domainname, __const char *__msgid1,
   __const char *__msgid2, unsigned long int __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2))) __attribute__ ((__format_arg__ (3)));



extern char *dcngettext (__const char *__domainname, __const char *__msgid1,
    __const char *__msgid2, unsigned long int __n,
    int __category)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2))) __attribute__ ((__format_arg__ (3)));





extern char *textdomain (__const char *__domainname) __attribute__ ((__nothrow__));



extern char *bindtextdomain (__const char *__domainname,
        __const char *__dirname) __attribute__ ((__nothrow__));



extern char *bind_textdomain_codeset (__const char *__domainname,
          __const char *__codeset) __attribute__ ((__nothrow__));







# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h" 1 3 4
# 102 "/usr/include/libintl.h" 2 3 4


# 1 "/usr/include/locale.h" 1 3 4
# 29 "/usr/include/locale.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h" 1 3 4
# 30 "/usr/include/locale.h" 2 3 4
# 1 "/usr/include/bits/locale.h" 1 3 4
# 27 "/usr/include/bits/locale.h" 3 4
enum
{
  __LC_CTYPE = 0,
  __LC_NUMERIC = 1,
  __LC_TIME = 2,
  __LC_COLLATE = 3,
  __LC_MONETARY = 4,
  __LC_MESSAGES = 5,
  __LC_ALL = 6,
  __LC_PAPER = 7,
  __LC_NAME = 8,
  __LC_ADDRESS = 9,
  __LC_TELEPHONE = 10,
  __LC_MEASUREMENT = 11,
  __LC_IDENTIFICATION = 12
};
# 31 "/usr/include/locale.h" 2 3 4


# 51 "/usr/include/locale.h" 3 4



struct lconv
{


  char *decimal_point;
  char *thousands_sep;





  char *grouping;





  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;

  char p_cs_precedes;

  char p_sep_by_space;

  char n_cs_precedes;

  char n_sep_by_space;






  char p_sign_posn;
  char n_sign_posn;


  char int_p_cs_precedes;

  char int_p_sep_by_space;

  char int_n_cs_precedes;

  char int_n_sep_by_space;






  char int_p_sign_posn;
  char int_n_sign_posn;
# 121 "/usr/include/locale.h" 3 4
};



extern char *setlocale (int __category, __const char *__locale) __attribute__ ((__nothrow__));


extern struct lconv *localeconv (void) __attribute__ ((__nothrow__));


# 146 "/usr/include/locale.h" 3 4
# 1 "/usr/include/xlocale.h" 1 3 4
# 28 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;
# 147 "/usr/include/locale.h" 2 3 4





extern __locale_t newlocale (int __category_mask, __const char *__locale,
        __locale_t __base) __attribute__ ((__nothrow__));
# 187 "/usr/include/locale.h" 3 4
extern __locale_t duplocale (__locale_t __dataset) __attribute__ ((__nothrow__));



extern void freelocale (__locale_t __dataset) __attribute__ ((__nothrow__));






extern __locale_t uselocale (__locale_t __dataset) __attribute__ ((__nothrow__));








# 105 "/usr/include/libintl.h" 2 3 4
# 122 "/usr/include/libintl.h" 3 4

# 39 "../common/basis_types.h" 2

# 1 "../libs/uti/sge_language.h" 1
# 35 "../libs/uti/sge_language.h"
# 1 "../common/basis_types.h" 1
# 36 "../libs/uti/sge_language.h" 2



int sge_init_languagefunc(char *package, char *localeDir);






typedef char* (*gettext_func_type)(char *);
typedef char* (*setlocale_func_type)(int lc, const char *name);
typedef char* (*bindtextdomain_func_type)(const char *domainname, const char *dirname);
typedef char* (*textdomain_func_type)(const char *donainname);

void sge_init_language_func(gettext_func_type, setlocale_func_type, bindtextdomain_func_type, textdomain_func_type);

const char *sge_gettext__(char *x);
const char *sge_gettext(char *x);
const char *sge_gettext_(int msg_id, const char *msg_str);
void sge_set_message_id_output(int flag);
int sge_get_message_id_output(void);
# 41 "../common/basis_types.h" 2
# 66 "../common/basis_types.h"
typedef enum {
  false = 0,
  true
} bool;
# 107 "../common/basis_types.h"
# 1 "/usr/include/sys/param.h" 1 3 4
# 26 "/usr/include/sys/param.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/limits.h" 1 3 4
# 11 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/limits.h" 1 3 4
# 122 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 145 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 157 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 39 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 40 "/usr/include/bits/local_lim.h" 2 3 4
# 158 "/usr/include/bits/posix1_lim.h" 2 3 4
# 146 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 150 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/xopen_lim.h" 1 3 4
# 34 "/usr/include/bits/xopen_lim.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 35 "/usr/include/bits/xopen_lim.h" 2 3 4
# 154 "/usr/include/limits.h" 2 3 4
# 123 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/syslimits.h" 2 3 4
# 12 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/limits.h" 2 3 4
# 27 "/usr/include/sys/param.h" 2 3 4

# 1 "/usr/include/linux/param.h" 1 3 4



# 1 "/usr/include/asm/param.h" 1 3 4
# 1 "/usr/include/asm-generic/param.h" 1 3 4
# 1 "/usr/include/asm/param.h" 2 3 4
# 5 "/usr/include/linux/param.h" 2 3 4
# 29 "/usr/include/sys/param.h" 2 3 4
# 108 "../common/basis_types.h" 2
# 170 "../common/basis_types.h"
typedef char stringT[2048];
# 258 "../common/basis_types.h"
typedef enum {
   NO = 0,
   YES = 1,
   UNSET = 2
} ternary_t;
# 37 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/cull/cull.h" 1
# 38 "../libs/sgeobj/sge_all_listsL.h" 2



# 1 "../libs/sgeobj/sge_access_tree_PGR_L.h" 1
# 36 "../libs/sgeobj/sge_access_tree_PGR_L.h"
# 1 "../libs/sgeobj/sge_boundaries.h" 1
# 35 "../libs/sgeobj/sge_boundaries.h"
# 1 "../libs/cull/cull_list.h" 1
# 36 "../libs/sgeobj/sge_boundaries.h" 2
# 60 "../libs/sgeobj/sge_boundaries.h"
enum NameSpaceBoundaries {





   JB_LOWERBOUND = 1*BASIC_UNIT,
   JB_UPPERBOUND = JB_LOWERBOUND + MAX_DESCR_SIZE - 1,


   QU_LOWERBOUND = JB_UPPERBOUND + 1,
   QU_UPPERBOUND = QU_LOWERBOUND + MAX_DESCR_SIZE - 1,


   EH_LOWERBOUND = QU_UPPERBOUND + 1,
   EH_UPPERBOUND = EH_LOWERBOUND + 1*BASIC_UNIT - 1,


   AH_LOWERBOUND = EH_UPPERBOUND + 1,
   AH_UPPERBOUND = AH_LOWERBOUND + 1*BASIC_UNIT - 1,


   SH_LOWERBOUND = AH_UPPERBOUND + 1,
   SH_UPPERBOUND = SH_LOWERBOUND + 1*BASIC_UNIT - 1,


   AN_LOWERBOUND = SH_UPPERBOUND + 1,
   AN_UPPERBOUND = AN_LOWERBOUND + 1*BASIC_UNIT - 1,


   HA_LOWERBOUND = AN_UPPERBOUND + 1,
   HA_UPPERBOUND = HA_LOWERBOUND + 1*BASIC_UNIT - 1,


   HL_LOWERBOUND = HA_UPPERBOUND + 1,
   HL_UPPERBOUND = HL_LOWERBOUND + 1*BASIC_UNIT - 1,


   HS_LOWERBOUND = HL_UPPERBOUND + 1,
   HS_UPPERBOUND = HS_LOWERBOUND + 1*BASIC_UNIT - 1,


   HT_LOWERBOUND = HS_UPPERBOUND + 1,
   HT_UPPERBOUND = HT_LOWERBOUND + 1*BASIC_UNIT - 1,


   EV_LOWERBOUND = HT_UPPERBOUND + 1,
   EV_UPPERBOUND = EV_LOWERBOUND + 1*BASIC_UNIT - 1,


   CE_LOWERBOUND = EV_UPPERBOUND + 1,
   CE_UPPERBOUND = CE_LOWERBOUND + 1*BASIC_UNIT - 1,


   OR_LOWERBOUND = CE_UPPERBOUND + 1,
   OR_UPPERBOUND = OR_LOWERBOUND + 1*BASIC_UNIT - 1,


   OQ_LOWERBOUND = OR_UPPERBOUND + 1,
   OQ_UPPERBOUND = OQ_LOWERBOUND + 1*BASIC_UNIT - 1,


   RR_LOWERBOUND = OQ_UPPERBOUND + 1,
   RR_UPPERBOUND = RR_LOWERBOUND + 1*BASIC_UNIT - 1,


   LR_LOWERBOUND = RR_UPPERBOUND + 1,
   LR_UPPERBOUND = LR_LOWERBOUND + 1*BASIC_UNIT - 1,


   US_LOWERBOUND = LR_UPPERBOUND + 1,
   US_UPPERBOUND = US_LOWERBOUND + 1*BASIC_UNIT - 1,


   UE_LOWERBOUND = US_UPPERBOUND + 1,
   UE_UPPERBOUND = UE_LOWERBOUND + 1*BASIC_UNIT - 1,


   RN_LOWERBOUND = UE_UPPERBOUND + 1,
   RN_UPPERBOUND = RN_LOWERBOUND + 1*BASIC_UNIT - 1,


   PN_LOWERBOUND = RN_UPPERBOUND + 1,
   PN_UPPERBOUND = PN_LOWERBOUND + 1*BASIC_UNIT - 1,


   AT_LOWERBOUND = PN_UPPERBOUND + 1,
   AT_UPPERBOUND = AT_LOWERBOUND + 1*BASIC_UNIT - 1,


   VA_LOWERBOUND = AT_UPPERBOUND + 1,
   VA_UPPERBOUND = VA_LOWERBOUND + 1*BASIC_UNIT - 1,


   MR_LOWERBOUND = VA_UPPERBOUND + 1,
   MR_UPPERBOUND = MR_LOWERBOUND + 1*BASIC_UNIT - 1,


   UM_LOWERBOUND = MR_UPPERBOUND + 1,
   UM_UPPERBOUND = UM_LOWERBOUND + 1*BASIC_UNIT - 1,


   UO_LOWERBOUND = UM_UPPERBOUND + 1,
   UO_UPPERBOUND = UO_LOWERBOUND + 1*BASIC_UNIT - 1,


   ET_LOWERBOUND = UO_UPPERBOUND + 1,
   ET_UPPERBOUND = ET_LOWERBOUND + 1*BASIC_UNIT - 1,


   EVS_LOWERBOUND = ET_UPPERBOUND + 1,
   EVS_UPPERBOUND = EVS_LOWERBOUND + 1*BASIC_UNIT - 1,


   CONF_LOWERBOUND = EVS_UPPERBOUND + 1,
   CONF_UPPERBOUND = CONF_LOWERBOUND + 1*BASIC_UNIT - 1,


   CFSCHED_LOWERBOUND = CONF_UPPERBOUND + 1,
   CFSCHED_UPPERBOUND = CFSCHED_LOWERBOUND + 1*BASIC_UNIT - 1,


   CF_LOWERBOUND = CFSCHED_UPPERBOUND + 1,
   CF_UPPERBOUND = CF_LOWERBOUND + 1*BASIC_UNIT - 1,


   PE_LOWERBOUND = CF_UPPERBOUND + 1,
   PE_UPPERBOUND = PE_LOWERBOUND + 1*BASIC_UNIT - 1,


   QR_LOWERBOUND = PE_UPPERBOUND + 1,
   QR_UPPERBOUND = QR_LOWERBOUND + 1*BASIC_UNIT - 1,


   JC_LOWERBOUND = QR_UPPERBOUND + 1,
   JC_UPPERBOUND = JC_LOWERBOUND + 1*BASIC_UNIT - 1,


   ST_LOWERBOUND = JC_UPPERBOUND + 1,
   ST_UPPERBOUND = ST_LOWERBOUND + 1*BASIC_UNIT - 1,


   STU_LOWERBOUND = ST_UPPERBOUND + 1,
   STU_UPPERBOUND = STU_LOWERBOUND + 1*BASIC_UNIT - 1,


   JG_LOWERBOUND = STU_UPPERBOUND + 1,
   JG_UPPERBOUND = JG_LOWERBOUND + 1*BASIC_UNIT - 1,


   HD_LOWERBOUND = JG_UPPERBOUND + 1,
   HD_UPPERBOUND = HD_LOWERBOUND + 1*BASIC_UNIT - 1,


   HF_LOWERBOUND = HD_UPPERBOUND + 1,
   HF_UPPERBOUND = HF_LOWERBOUND + 1*BASIC_UNIT - 1,


   QAJ_LOWERBOUND = HF_UPPERBOUND + 1,
   QAJ_UPPERBOUND = QAJ_LOWERBOUND + 1*BASIC_UNIT - 1,


   SPA_LOWERBOUND = QAJ_UPPERBOUND + 1,
   SPA_UPPERBOUND = SPA_LOWERBOUND + 1*BASIC_UNIT - 1,


   REP_LOWERBOUND = SPA_UPPERBOUND + 1,
   REP_UPPERBOUND = REP_LOWERBOUND + 1*BASIC_UNIT - 1,


   SO_LOWERBOUND = REP_UPPERBOUND + 1,
   SO_UPPERBOUND = SO_LOWERBOUND + 1*BASIC_UNIT - 1,


   UA_LOWERBOUND = SO_UPPERBOUND + 1,
   UA_UPPERBOUND = UA_LOWERBOUND + 1*BASIC_UNIT - 1,


   PR_LOWERBOUND = UA_UPPERBOUND + 1,
   PR_UPPERBOUND = PR_LOWERBOUND + 1*BASIC_UNIT - 1,


   UU_LOWERBOUND = PR_UPPERBOUND + 1,
   UU_UPPERBOUND = UU_LOWERBOUND + 1*BASIC_UNIT - 1,


   STN_LOWERBOUND = UU_UPPERBOUND + 1,
   STN_UPPERBOUND = STN_LOWERBOUND + 1*BASIC_UNIT - 1,


   SC_LOWERBOUND = STN_UPPERBOUND + 1,
   SC_UPPERBOUND = SC_LOWERBOUND + 1*BASIC_UNIT - 1,


   PET_LOWERBOUND = SC_UPPERBOUND + 1,
   PET_UPPERBOUND = PET_LOWERBOUND + 1*BASIC_UNIT - 1,


   PETR_LOWERBOUND = PET_UPPERBOUND + 1,
   PETR_UPPERBOUND = PETR_LOWERBOUND + 1*BASIC_UNIT - 1,


   FPET_LOWERBOUND = PETR_UPPERBOUND + 1,
   FPET_UPPERBOUND = FPET_LOWERBOUND * 1*BASIC_UNIT - 1,


   JR_LOWERBOUND = FPET_UPPERBOUND + 1,
   JR_UPPERBOUND = JR_LOWERBOUND + 1*BASIC_UNIT - 1,


   LIC_LOWERBOUND = JR_UPPERBOUND + 1,
   LIC_UPPERBOUND = LIC_LOWERBOUND + 1*BASIC_UNIT - 1,


   DL_LOWERBOUND = LIC_UPPERBOUND + 1,
   DL_UPPERBOUND = DL_LOWERBOUND + 1*BASIC_UNIT - 1,


   JL_LOWERBOUND = DL_UPPERBOUND + 1,
   JL_UPPERBOUND = JL_LOWERBOUND + 1*BASIC_UNIT - 1,


   JP_LOWERBOUND = JL_UPPERBOUND + 1,
   JP_UPPERBOUND = JP_LOWERBOUND + 1*BASIC_UNIT - 1,


   UPU_LOWERBOUND = JP_UPPERBOUND + 1,
   UPU_UPPERBOUND = UPU_LOWERBOUND + 1*BASIC_UNIT - 1,


   CK_LOWERBOUND = UPU_UPPERBOUND + 1,
   CK_UPPERBOUND = CK_LOWERBOUND + 1*BASIC_UNIT - 1,


   KRB_LOWERBOUND = CK_UPPERBOUND + 1,
   KRB_UPPERBOUND = KRB_LOWERBOUND + 1*BASIC_UNIT - 1,


   PA_LOWERBOUND = KRB_UPPERBOUND + 1,
   PA_UPPERBOUND = PA_LOWERBOUND + 1*BASIC_UNIT - 1,


   JRE_LOWERBOUND = PA_UPPERBOUND + 1,
   JRE_UPPERBOUND = JRE_LOWERBOUND + 1*BASIC_UNIT - 1,


   ID_LOWERBOUND = JRE_UPPERBOUND + 1,
   ID_UPPERBOUND = ID_LOWERBOUND + 1*BASIC_UNIT - 1,


   MA_LOWERBOUND = ID_UPPERBOUND + 1,
   MA_UPPERBOUND = MA_LOWERBOUND + 1*BASIC_UNIT - 1,


   TE_LOWERBOUND = MA_UPPERBOUND + 1,
   TE_UPPERBOUND = TE_LOWERBOUND + 1*BASIC_UNIT - 1,



   CAL_LOWERBOUND = TE_UPPERBOUND + 1,
   CAL_UPPERBOUND = CAL_LOWERBOUND + 1*BASIC_UNIT - 1,


   CA_LOWERBOUND = CAL_UPPERBOUND + 1,
   CA_UPPERBOUND = CA_LOWERBOUND + 1*BASIC_UNIT - 1,


   TMR_LOWERBOUND = CA_UPPERBOUND + 1,
   TMR_UPPERBOUND = TMR_LOWERBOUND + 1*BASIC_UNIT - 1,


   TM_LOWERBOUND = TMR_UPPERBOUND + 1,
   TM_UPPERBOUND = TM_LOWERBOUND + 1*BASIC_UNIT - 1,


   RT_LOWERBOUND = TM_UPPERBOUND + 1,
   RT_UPPERBOUND = RT_LOWERBOUND + 1*BASIC_UNIT - 1,


   UPP_LOWERBOUND = RT_UPPERBOUND + 1,
   UPP_UPPERBOUND = UPP_LOWERBOUND + 1*BASIC_UNIT - 1,


   JO_LOWERBOUND = UPP_UPPERBOUND + 1,
   JO_UPPERBOUND = JO_LOWERBOUND + 1*BASIC_UNIT - 1,


   KTGT_LOWERBOUND = JO_UPPERBOUND + 1,
   KTGT_UPPERBOUND = KTGT_LOWERBOUND + 1*BASIC_UNIT - 1,


   SME_LOWERBOUND = KTGT_UPPERBOUND + 1,
   SME_UPPERBOUND = SME_LOWERBOUND + 1*BASIC_UNIT - 1,


   MES_LOWERBOUND = SME_UPPERBOUND + 1,
   MES_UPPERBOUND = MES_LOWERBOUND + 1*BASIC_UNIT - 1,


   JAT_LOWERBOUND = MES_UPPERBOUND +1,
   JAT_UPPERBOUND = JAT_LOWERBOUND + 1*BASIC_UNIT - 1,


   CT_LOWERBOUND = JAT_UPPERBOUND + 1,
   CT_UPPERBOUND = CT_LOWERBOUND + 1*BASIC_UNIT - 1,


   PGR_LOWERBOUND = CT_UPPERBOUND + 1,
   PGR_UPPERBOUND = PGR_LOWERBOUND + 1*BASIC_UNIT - 1,


   USR_LOWERBOUND = PGR_UPPERBOUND + 1,
   USR_UPPERBOUND = USR_LOWERBOUND + 1*BASIC_UNIT - 1,


   JRL_LOWERBOUND = USR_UPPERBOUND + 1,
   JRL_UPPERBOUND = JRL_LOWERBOUND + 1*BASIC_UNIT - 1,


   SGEJ_LOWERBOUND = JRL_UPPERBOUND + 1,
   SGEJ_UPPERBOUND = SGEJ_LOWERBOUND + 1*BASIC_UNIT - 1,

   ULNG_LOWERBOUND = SGEJ_UPPERBOUND + 1,
   ULNG_UPPERBOUND = ULNG_LOWERBOUND + 1*BASIC_UNIT - 1,

   PREF_LOWERBOUND = ULNG_UPPERBOUND + 1,
   PREF_UPPERBOUND = PREF_LOWERBOUND + 1*BASIC_UNIT - 1,


   HGRP_LOWERBOUND = PREF_UPPERBOUND + 1,
   HGRP_UPPERBOUND = HGRP_LOWERBOUND + 1*BASIC_UNIT - 1,


   HR_LOWERBOUND = HGRP_UPPERBOUND + 1,
   HR_UPPERBOUND = HR_LOWERBOUND + 1*BASIC_UNIT - 1,


   PERM_LOWERBOUND = HR_UPPERBOUND + 1,
   PERM_UPPERBOUND = PERM_LOWERBOUND + 1*BASIC_UNIT - 1,


   CU_LOWERBOUND = PERM_UPPERBOUND + 1,
   CU_UPPERBOUND = CU_LOWERBOUND + 1*BASIC_UNIT - 1,


   LS_LOWERBOUND = CU_UPPERBOUND + 1,
   LS_UPPERBOUND = LS_LOWERBOUND + 1*BASIC_UNIT - 1,


   RU_LOWERBOUND = LS_UPPERBOUND + 1,
   RU_UPPERBOUND = RU_LOWERBOUND + 1*BASIC_UNIT - 1,


   FES_LOWERBOUND = RU_UPPERBOUND + 1,
   FES_UPPERBOUND = FES_LOWERBOUND + 1*BASIC_UNIT - 1,


   FE_LOWERBOUND = FES_UPPERBOUND + 1,
   FE_UPPERBOUND = FE_LOWERBOUND + 1*BASIC_UNIT - 1,


   SU_LOWERBOUND = FE_UPPERBOUND + 1,
   SU_UPPERBOUND = SU_LOWERBOUND + 1*BASIC_UNIT - 1,


   SEC_LOWERBOUND = SU_UPPERBOUND + 1,
   SEC_UPPERBOUND = SEC_LOWERBOUND + 1*BASIC_UNIT - 1,


   SPC_LOWERBOUND = SEC_UPPERBOUND + 1,
   SPC_UPPERBOUND = SPC_LOWERBOUND + 1 * BASIC_UNIT -1,

   SPR_LOWERBOUND = SPC_UPPERBOUND + 1,
   SPR_UPPERBOUND = SPR_LOWERBOUND + 1 * BASIC_UNIT -1,

   SPT_LOWERBOUND = SPR_UPPERBOUND + 1,
   SPT_UPPERBOUND = SPT_LOWERBOUND + 1 * BASIC_UNIT -1,

   SPTR_LOWERBOUND = SPT_UPPERBOUND + 1,
   SPTR_UPPERBOUND = SPTR_LOWERBOUND + 1 * BASIC_UNIT -1,

   SPM_LOWERBOUND = SPTR_UPPERBOUND + 1,
   SPM_UPPERBOUND = SPM_LOWERBOUND + 1 * BASIC_UNIT - 1,


   JJ_LOWERBOUND = SPM_UPPERBOUND + 1,
   JJ_UPPERBOUND = JJ_LOWERBOUND + 1 * BASIC_UNIT -1,

   JJAT_LOWERBOUND = JJ_UPPERBOUND + 1,
   JJAT_UPPERBOUND = JJAT_LOWERBOUND + 1 * BASIC_UNIT -1,

   NSV_LOWERBOUND = JJAT_UPPERBOUND + 1,
   NSV_UPPERBOUND = NSV_LOWERBOUND + 1 * BASIC_UNIT -1,

   ASTR_LOWERBOUND = NSV_UPPERBOUND + 1,
   ASTR_UPPERBOUND = ASTR_LOWERBOUND + 1 * BASIC_UNIT -1,

   AULNG_LOWERBOUND = ASTR_UPPERBOUND + 1,
   AULNG_UPPERBOUND = AULNG_LOWERBOUND + 1 * BASIC_UNIT -1,

   ABOOL_LOWERBOUND = AULNG_UPPERBOUND + 1,
   ABOOL_UPPERBOUND = ABOOL_LOWERBOUND + 1 * BASIC_UNIT -1,

   ATIME_LOWERBOUND = ABOOL_UPPERBOUND + 1,
   ATIME_UPPERBOUND = ATIME_LOWERBOUND + 1 * BASIC_UNIT -1,

   AMEM_LOWERBOUND = ATIME_UPPERBOUND + 1,
   AMEM_UPPERBOUND = AMEM_LOWERBOUND + 1 * BASIC_UNIT -1,

   AINTER_LOWERBOUND = AMEM_UPPERBOUND + 1,
   AINTER_UPPERBOUND = AINTER_LOWERBOUND + 1 * BASIC_UNIT -1,

   ASTRING_LOWERBOUND = AINTER_UPPERBOUND + 1,
   ASTRING_UPPERBOUND = ASTRING_LOWERBOUND + 1 * BASIC_UNIT -1,

   ASTRLIST_LOWERBOUND = ASTRING_UPPERBOUND + 1,
   ASTRLIST_UPPERBOUND = ASTRLIST_LOWERBOUND + 1 * BASIC_UNIT -1,

   AUSRLIST_LOWERBOUND = ASTRLIST_UPPERBOUND + 1,
   AUSRLIST_UPPERBOUND = AUSRLIST_LOWERBOUND + 1 * BASIC_UNIT -1,

   APRJLIST_LOWERBOUND = AUSRLIST_UPPERBOUND + 1,
   APRJLIST_UPPERBOUND = APRJLIST_LOWERBOUND + 1 * BASIC_UNIT -1,

   ACELIST_LOWERBOUND = APRJLIST_UPPERBOUND + 1,
   ACELIST_UPPERBOUND = ACELIST_LOWERBOUND + 1 * BASIC_UNIT -1,

   ASOLIST_LOWERBOUND = ACELIST_UPPERBOUND + 1,
   ASOLIST_UPPERBOUND = ASOLIST_LOWERBOUND + 1 * BASIC_UNIT -1,

   AQTLIST_LOWERBOUND = ASOLIST_UPPERBOUND + 1,
   AQTLIST_UPPERBOUND = AQTLIST_LOWERBOUND + 1 * BASIC_UNIT -1,

   CQ_LOWERBOUND = AQTLIST_UPPERBOUND + 1,
   CQ_UPPERBOUND = CQ_LOWERBOUND + MAX_DESCR_SIZE -1,

   QIM_LOWERBOUND = CQ_UPPERBOUND + 1,
   QIM_UPPERBOUND = QIM_LOWERBOUND + MAX_DESCR_SIZE -1,

   FCAT_LOWERBOUND = QIM_UPPERBOUND + 1,
   FCAT_UPPERBOUND = FCAT_LOWERBOUND + 1 * BASIC_UNIT - 1,

   CTI_LOWERBOUND = FCAT_UPPERBOUND + 1,
   CTI_UPPERBOUND = CTI_LOWERBOUND + 1 * BASIC_UNIT - 1,

   CTQV_LOWERBOUND = CTI_UPPERBOUND + 1,
   CTQV_UPPERBOUND = CTQV_LOWERBOUND + 1 * BASIC_UNIT - 1,

   PARA_LOWERBOUND = CTQV_UPPERBOUND + 1,
   PARA_UPPERBOUND = PARA_LOWERBOUND + 1 * BASIC_UNIT - 1,

   PACK_LOWERBOUND = PARA_UPPERBOUND + 1,
   PACK_UPPERBOUND = PACK_LOWERBOUND + 1 * BASIC_UNIT - 1,


   XMLA_LOWERBOUND= PACK_UPPERBOUND + 1,
   XMLA_UPPERBOUND = XMLA_LOWERBOUND + 1 * BASIC_UNIT - 1,


   XMLH_LOWERBOUND= XMLA_UPPERBOUND + 1,
   XMLH_UPPERBOUND = XMLH_LOWERBOUND + 1 * BASIC_UNIT - 1,


   XMLS_LOWERBOUND= XMLH_UPPERBOUND + 1,
   XMLS_UPPERBOUND = XMLS_LOWERBOUND + 1 * BASIC_UNIT - 1,


   XMLE_LOWERBOUND= XMLS_UPPERBOUND + 1,
   XMLE_UPPERBOUND = XMLE_LOWERBOUND + 1 * BASIC_UNIT - 1,


   RDE_LOWERBOUND = XMLE_UPPERBOUND + 1,
   RDE_UPPERBOUND = RDE_LOWERBOUND + 1 * BASIC_UNIT -1,


   RUE_LOWERBOUND = RDE_UPPERBOUND + 1,
   RUE_UPPERBOUND = RUE_LOWERBOUND + 1 * BASIC_UNIT -1,


   QETI_LOWERBOUND = RUE_UPPERBOUND + 1,
   QETI_UPPERBOUND = QETI_LOWERBOUND + 1 * BASIC_UNIT -1,


   LDR_LOWERBOUND = QETI_LOWERBOUND + 1,
   LDR_UPPERBOUND = LDR_LOWERBOUND + 1 * BASIC_UNIT -1,


   QRL_LOWERBOUND = LDR_UPPERBOUND + 1,
   QRL_UPPERBOUND = QRL_LOWERBOUND + 1 * BASIC_UNIT -1,

   CCT_LOWERBOUND = QRL_UPPERBOUND + 1,
   CCT_UPPERBOUND = CCT_LOWERBOUND + 1 * BASIC_UNIT -1,

   CQU_LOWERBOUND = CCT_LOWERBOUND + 1,
   CQU_UPPERBOUND = CQU_LOWERBOUND + 1 * BASIC_UNIT - 1,

   SCT_LOWERBOUND = CQU_UPPERBOUND + 1,
   SCT_UPPERBOUND = SCT_LOWERBOUND + 1 * BASIC_UNIT - 1,

   REF_LOWERBOUND = SCT_UPPERBOUND + 1,
   REF_UPPERBOUND = REF_LOWERBOUND + 1 * BASIC_UNIT - 1,

   RQS_LOWERBOUND = REF_UPPERBOUND + 1,
   RQS_UPPERBOUND = RQS_LOWERBOUND + 1 * BASIC_UNIT - 1,

   RQR_LOWERBOUND = RQS_UPPERBOUND + 1,
   RQR_UPPERBOUND = RQR_LOWERBOUND + 1 * BASIC_UNIT - 1,

   RQRF_LOWERBOUND = RQR_UPPERBOUND + 1,
   RQRF_UPPERBOUND = RQRF_LOWERBOUND + 1 * BASIC_UNIT - 1,

   RQRL_LOWERBOUND = RQRF_UPPERBOUND + 1,
   RQRL_UPPERBOUND = RQRL_LOWERBOUND + 1 * BASIC_UNIT - 1,

   AR_LOWERBOUND = RQRL_UPPERBOUND + 1,
   AR_UPPERBOUND = AR_LOWERBOUND + 1 * BASIC_UNIT - 1,

   ARA_LOWERBOUND = AR_UPPERBOUND + 1,
   ARA_UPPERBOUND = ARA_LOWERBOUND + 1 * BASIC_UNIT - 1,

   RQL_LOWERBOUND = ARA_UPPERBOUND + 1,
   RQL_UPPERBOUND = RQL_LOWERBOUND + 1 * BASIC_UNIT - 1,

   ACK_LOWERBOUND = RQL_UPPERBOUND + 1,
   ACK_UPPERBOUND = ACK_LOWERBOUND + 1 * BASIC_UNIT - 1,

   EVR_LOWERBOUND = ACK_UPPERBOUND + 1,
   EVR_UPPERBOUND = EVR_LOWERBOUND + 1 * BASIC_UNIT - 1,

   JSV_LOWERBOUND = EVR_UPPERBOUND + 1,
   JSV_UPPERBOUND = JSV_LOWERBOUND + 1 * BASIC_UNIT - 1,

   RTIC_LOWERBOUND = JSV_UPPERBOUND + 1,
   RTIC_UPPERBOUND = RTIC_LOWERBOUND + 1 * BASIC_UNIT - 1,


   PRO_LOWERBOUND = RTIC_UPPERBOUND + 1,
   PRO_UPPERBOUND = PRO_LOWERBOUND + 1 * BASIC_UNIT - 1,


   GR_LOWERBOUND = PRO_UPPERBOUND + 1,
   GR_UPPERBOUND = GR_LOWERBOUND + 1 * BASIC_UNIT - 1,


   BN_LOWERBOUND = GR_UPPERBOUND + 1,
   BN_UPPERBOUND = BN_LOWERBOUND + 1 * BASIC_UNIT - 1



};
# 37 "../libs/sgeobj/sge_access_tree_PGR_L.h" 2
# 49 "../libs/sgeobj/sge_access_tree_PGR_L.h"
enum {
   PGR_priority = PGR_LOWERBOUND,
   PGR_subordinated_list,
   PGR_sort_me,
   PGR_current
};

LISTDEF(PGR_Type)
   SGE_ULONG(PGR_priority, CULL_DEFAULT)
   SGE_LIST(PGR_subordinated_list, USR_Type, CULL_DEFAULT)


   SGE_ULONG(PGR_sort_me, CULL_DEFAULT)


   SGE_REF(PGR_current, JRL_Type, CULL_DEFAULT)


LISTEND

NAMEDEF(PGRN)
   NAME("PGR_priority")
   NAME("PGR_subordinated_list")
   NAME("PGR_sort_me")
   NAME("PGR_current")
NAMEEND
# 42 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_access_tree_USR_L.h" 1
# 48 "../libs/sgeobj/sge_access_tree_USR_L.h"
enum {
   USR_name = USR_LOWERBOUND,
   USR_nrunning_el,
   USR_nrunning_dl,
   USR_job_references,
   USR_sort_me,
   USR_current
};

LISTDEF(USR_Type)
   SGE_STRING(USR_name, CULL_DEFAULT)
   SGE_ULONG(USR_nrunning_el, CULL_DEFAULT)
   SGE_ULONG(USR_nrunning_dl, CULL_DEFAULT)
   SGE_LIST(USR_job_references, JRL_Type, CULL_DEFAULT)

   SGE_ULONG(USR_sort_me, CULL_DEFAULT)
   SGE_REF(USR_current, JRL_Type, CULL_DEFAULT)

LISTEND

NAMEDEF(USRN)
   NAME("USR_name")
   NAME("USR_nrunning_el")
   NAME("USR_nrunning_dl")
   NAME("USR_job_references")
   NAME("USR_sort_me")
   NAME("USR_current")
NAMEEND
# 43 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_access_tree_JRL_L.h" 1
# 48 "../libs/sgeobj/sge_access_tree_JRL_L.h"
enum {
   JRL_jobid = JRL_LOWERBOUND,
   JRL_submission_time,
   JRL_category
};

LISTDEF(JRL_Type)
   SGE_ULONG(JRL_jobid, CULL_DEFAULT)
   SGE_ULONG(JRL_submission_time, CULL_DEFAULT)
   SGE_REF(JRL_category, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(JRLN)
   NAME("JRL_jobid")
   NAME("JRL_submission_time")
   NAME("JRL_category")
NAMEEND
# 44 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ack_ACK_L.h" 1
# 42 "../libs/sgeobj/sge_ack_ACK_L.h"
enum {
   ACK_type = ACK_LOWERBOUND,
   ACK_id,
   ACK_id2,
   ACK_str
};

LISTDEF(ACK_Type)
   SGE_ULONG(ACK_type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(ACK_id, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(ACK_id2, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_STRING(ACK_str, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(ACKN)
   NAME("ACK_type")
   NAME("ACK_id")
   NAME("ACK_id2")
   NAME("ACK_str")
NAMEEND
# 45 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_advance_reservation_AR_L.h" 1
# 44 "../libs/sgeobj/sge_advance_reservation_AR_L.h"
enum {
   AR_id = AR_LOWERBOUND,
   AR_name,
   AR_account,
   AR_owner,
   AR_group,

   AR_submission_time,
   AR_start_time,
   AR_end_time,
   AR_duration,
   AR_verify,
   AR_error_handling,

   AR_state,

   AR_checkpoint_name,

   AR_resource_list,
   AR_resource_utilization,
   AR_queue_list,

   AR_granted_slots,
   AR_reserved_queues,

   AR_mail_options,
   AR_mail_list,

   AR_pe,
   AR_pe_range,
   AR_granted_pe,
   AR_master_queue_list,

   AR_acl_list,
   AR_xacl_list,
   AR_type,
   AR_qi_errors
};

LISTDEF(AR_Type)
   JGDI_ROOT_OBJ(AdvanceReservation, SGE_AR_LIST, ADD | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_AR_ADD) | MODIFY(sgeE_AR_MOD) | DELETE(sgeE_AR_DEL) | GET_LIST(sgeE_AR_LIST))
   SGE_ULONG(AR_id, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL)
   SGE_STRING(AR_name, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_STRING(AR_account, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_STRING(AR_owner, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_STRING(AR_group, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)

   SGE_ULONG(AR_submission_time, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(AR_start_time, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(AR_end_time, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(AR_duration, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)

   SGE_ULONG(AR_verify, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(AR_error_handling, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)

   SGE_ULONG(AR_state, CULL_DEFAULT | CULL_JGDI_RO | CULL_SPOOL)

   SGE_STRING(AR_checkpoint_name, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)

   SGE_LIST(AR_resource_list, CE_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(AR_resource_utilization, RUE_Type, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_LIST(AR_queue_list, QR_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)

   SGE_LIST(AR_granted_slots, JG_Type, CULL_SPOOL | CULL_JGDI_RO)
   SGE_LIST(AR_reserved_queues, QU_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)

   SGE_ULONG(AR_mail_options, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(AR_mail_list, MR_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)

   SGE_STRING(AR_pe, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(AR_pe_range, RN_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_STRING(AR_granted_pe, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(AR_master_queue_list, QR_Type, CULL_DEFAULT | CULL_SPOOL)

   SGE_LIST(AR_acl_list, ARA_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(AR_xacl_list, ARA_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(AR_type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(AR_qi_errors, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(ARN)
   NAME("AR_id")
   NAME("AR_name")
   NAME("AR_account")
   NAME("AR_owner")
   NAME("AR_group")

   NAME("AR_submission_time")
   NAME("AR_start_time")
   NAME("AR_end_time")
   NAME("AR_duration")
   NAME("AR_verify")
   NAME("AR_error_handling")

   NAME("AR_state")

   NAME("AR_checkpoint_name")

   NAME("AR_resource_list")
   NAME("AR_resource_utilization")
   NAME("AR_queue_list")

   NAME("AR_granted_slots")
   NAME("AR_reserved_queues")

   NAME("AR_mail_options")
   NAME("AR_mail_list")

   NAME("AR_pe")
   NAME("AR_pe_range")
   NAME("AR_granted_pe")
   NAME("AR_master_queue_list")

   NAME("AR_acl_list")
   NAME("AR_xacl_list")
   NAME("AR_type")
   NAME("AR_qi_errors")
NAMEEND
# 46 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_advance_reservation_ARA_L.h" 1
# 44 "../libs/sgeobj/sge_advance_reservation_ARA_L.h"
enum {
   ARA_name = ARA_LOWERBOUND,
   ARA_group
};

LISTDEF(ARA_Type)
   SGE_STRING(ARA_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL)
   SGE_STRING(ARA_group, CULL_DEFAULT | CULL_SPOOL)
LISTEND

NAMEDEF(ARAN)
   NAME("ARA_name")
   NAME("ARA_group")
NAMEEND
# 47 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_answer_AN_L.h" 1
# 62 "../libs/sgeobj/sge_answer_AN_L.h"
enum {
   AN_status = AN_LOWERBOUND,
   AN_text,
   AN_quality
};

LISTDEF(AN_Type)
   JGDI_OBJ(JGDIAnswer)
   SGE_ULONG(AN_status, CULL_DEFAULT)
   SGE_STRING(AN_text, CULL_DEFAULT)
   SGE_ULONG(AN_quality, CULL_DEFAULT)
LISTEND

NAMEDEF(ANN)
   NAME("AN_status")
   NAME("AN_text")
   NAME("AN_quality")
NAMEEND
# 48 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_ASTR_L.h" 1
# 45 "../libs/sgeobj/sge_attr_ASTR_L.h"
enum {
   ASTR_href = ASTR_LOWERBOUND,
   ASTR_value
};

LISTDEF(ASTR_Type)
   JGDI_MAP_OBJ(ASTR_href, ASTR_value)
   SGE_HOST(ASTR_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_STRING(ASTR_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(ASTRN)
   NAME("ASTR_href")
   NAME("ASTR_value")
NAMEEND
# 49 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_AULNG_L.h" 1
# 45 "../libs/sgeobj/sge_attr_AULNG_L.h"
enum {
   AULNG_href = AULNG_LOWERBOUND,
   AULNG_value
};

LISTDEF(AULNG_Type)
   JGDI_MAP_OBJ(AULNG_href, AULNG_value)
   SGE_HOST(AULNG_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_ULONG(AULNG_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(AULNGN)
   NAME("AULNG_href")
   NAME("AULNG_value")
NAMEEND
# 50 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_ABOOL_L.h" 1
# 45 "../libs/sgeobj/sge_attr_ABOOL_L.h"
enum {
   ABOOL_href = ABOOL_LOWERBOUND,
   ABOOL_value
};

LISTDEF(ABOOL_Type)
   JGDI_MAP_OBJ(ABOOL_href, ABOOL_value)
   SGE_HOST(ABOOL_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_BOOL(ABOOL_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(ABOOLN)
   NAME("ABOOL_href")
   NAME("ABOOL_value")
NAMEEND
# 51 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_ATIME_L.h" 1
# 45 "../libs/sgeobj/sge_attr_ATIME_L.h"
enum {
   ATIME_href = ATIME_LOWERBOUND,
   ATIME_value
};

LISTDEF(ATIME_Type)
   JGDI_MAP_OBJ(ATIME_href, ATIME_value)
   SGE_HOST(ATIME_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_STRING(ATIME_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(ATIMEN)
   NAME("ATIME_href")
   NAME("ATIME_value")
NAMEEND
# 52 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_AMEM_L.h" 1
# 45 "../libs/sgeobj/sge_attr_AMEM_L.h"
enum {
   AMEM_href = AMEM_LOWERBOUND,
   AMEM_value
};

LISTDEF(AMEM_Type)
   JGDI_MAP_OBJ(AMEM_href, AMEM_value)
   SGE_HOST(AMEM_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_STRING(AMEM_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(AMEMN)
   NAME("AMEM_href")
   NAME("AMEM_value")
NAMEEND
# 53 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_AINTER_L.h" 1
# 45 "../libs/sgeobj/sge_attr_AINTER_L.h"
enum {
   AINTER_href = AINTER_LOWERBOUND,
   AINTER_value
};

LISTDEF(AINTER_Type)
   JGDI_MAP_OBJ(AINTER_href, AINTER_value)
   SGE_HOST(AINTER_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_STRING(AINTER_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(AINTERN)
   NAME("AINTER_href")
   NAME("AINTER_value")
NAMEEND
# 54 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_ASTRING_L.h" 1
# 45 "../libs/sgeobj/sge_attr_ASTRING_L.h"
enum {
   ASTRING_href = ASTRING_LOWERBOUND,
   ASTRING_value
};

LISTDEF(ASTRING_Type)
   SGE_HOST(ASTRING_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_STRING(ASTRING_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(ASTRINGN)
   NAME("ASTRING_href")
   NAME("ASTRING_value")
NAMEEND
# 55 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_ASTRLIST_L.h" 1
# 45 "../libs/sgeobj/sge_attr_ASTRLIST_L.h"
enum {
   ASTRLIST_href = ASTRLIST_LOWERBOUND,
   ASTRLIST_value
};

LISTDEF(ASTRLIST_Type)
   JGDI_MAP_OBJ(ASTRLIST_href, ASTRLIST_value)
   SGE_HOST(ASTRLIST_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_LIST(ASTRLIST_value, ST_Type, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(ASTRLISTN)
   NAME("ASTRLIST_href")
   NAME("ASTRLIST_value")
NAMEEND
# 56 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_AUSRLIST_L.h" 1
# 45 "../libs/sgeobj/sge_attr_AUSRLIST_L.h"
enum {
   AUSRLIST_href = AUSRLIST_LOWERBOUND,
   AUSRLIST_value
};

LISTDEF(AUSRLIST_Type)
   JGDI_MAP_OBJ(AUSRLIST_href, AUSRLIST_value)
   SGE_HOST(AUSRLIST_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_LIST(AUSRLIST_value, US_Type, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(AUSRLISTN)
   NAME("AUSRLIST_href")
   NAME("AUSRLIST_value")
NAMEEND
# 57 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_APRJLIST_L.h" 1
# 45 "../libs/sgeobj/sge_attr_APRJLIST_L.h"
enum {
   APRJLIST_href = APRJLIST_LOWERBOUND,
   APRJLIST_value
};

LISTDEF(APRJLIST_Type)
   JGDI_MAP_OBJ(APRJLIST_href, APRJLIST_value)
   SGE_HOST(APRJLIST_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_LIST(APRJLIST_value, PR_Type, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(APRJLISTN)
   NAME("APRJLIST_href")
   NAME("APRJLIST_value")
NAMEEND
# 58 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_ACELIST_L.h" 1
# 45 "../libs/sgeobj/sge_attr_ACELIST_L.h"
enum {
   ACELIST_href = ACELIST_LOWERBOUND,
   ACELIST_value
};

LISTDEF(ACELIST_Type)
   JGDI_MAP_OBJ(ACELIST_href, ACELIST_value)
   SGE_HOST(ACELIST_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_LIST(ACELIST_value, CE_Type, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(ACELISTN)
   NAME("ACELIST_href")
   NAME("ACELIST_value")
NAMEEND
# 59 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_ASOLIST_L.h" 1
# 45 "../libs/sgeobj/sge_attr_ASOLIST_L.h"
enum {
   ASOLIST_href = ASOLIST_LOWERBOUND,
   ASOLIST_value
};

LISTDEF(ASOLIST_Type)
   JGDI_MAP_OBJ(ASOLIST_href, ASOLIST_value)
   SGE_HOST(ASOLIST_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_LIST(ASOLIST_value, SO_Type, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(ASOLISTN)
   NAME("ASOLIST_href")
   NAME("ASOLIST_value")
NAMEEND
# 60 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_attr_AQTLIST_L.h" 1
# 45 "../libs/sgeobj/sge_attr_AQTLIST_L.h"
enum {
   AQTLIST_href = AQTLIST_LOWERBOUND,
   AQTLIST_value
};

LISTDEF(AQTLIST_Type)
   JGDI_MAP_OBJ(AQTLIST_href, AQTLIST_value)
   SGE_HOST(AQTLIST_href, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_ULONG(AQTLIST_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(AQTLISTN)
   NAME("AQTLIST_href")
   NAME("AQTLIST_value")
NAMEEND
# 61 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_binding_BN_L.h" 1
# 36 "../libs/sgeobj/sge_binding_BN_L.h"
# 1 "../libs/sgeobj/sge_boundaries.h" 1
# 37 "../libs/sgeobj/sge_binding_BN_L.h" 2
# 77 "../libs/sgeobj/sge_binding_BN_L.h"
enum {
   BN_strategy = BN_LOWERBOUND,
   BN_type,
   BN_parameter_n,
   BN_parameter_socket_offset,
   BN_parameter_core_offset,
   BN_parameter_striding_step_size,
   BN_parameter_explicit
};

LISTDEF(BN_Type)
   JGDI_OBJ(Binding)
   SGE_STRING(BN_strategy, CULL_PRIMARY_KEY | CULL_SUBLIST)
   SGE_ULONG(BN_type, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(BN_parameter_n, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(BN_parameter_socket_offset, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(BN_parameter_core_offset, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(BN_parameter_striding_step_size, CULL_DEFAULT | CULL_SUBLIST)
   SGE_STRING(BN_parameter_explicit, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(BNN)
   NAME("BN_strategy")
   NAME("BN_type")
   NAME("BN_parameter_n")
   NAME("BN_parameter_socket_offset")
   NAME("BN_parameter_core_offset")
   NAME("BN_parameter_striding_step_size")
   NAME("BN_parameter_explicit")
NAMEEND
# 62 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_calendar_CAL_L.h" 1
# 48 "../libs/sgeobj/sge_calendar_CAL_L.h"
enum {
   CAL_name = CAL_LOWERBOUND,
   CAL_year_calendar,
   CAL_week_calendar,
   CAL_parsed_year_calendar,
   CAL_parsed_week_calendar
};

LISTDEF(CAL_Type)
   JGDI_ROOT_OBJ(Calendar, SGE_CAL_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_CALENDAR_ADD) | MODIFY(sgeE_CALENDAR_MOD) | DELETE(sgeE_CALENDAR_DEL) | GET_LIST(sgeE_CALENDAR_LIST))
   SGE_STRING_D(CAL_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF, "template")
   SGE_STRING_D(CAL_year_calendar, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")
   SGE_STRING_D(CAL_week_calendar, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")

   SGE_LIST(CAL_parsed_year_calendar, CA_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_LIST(CAL_parsed_week_calendar, CA_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(CALN)
   NAME("CAL_name")
   NAME("CAL_year_calendar")
   NAME("CAL_week_calendar")
   NAME("CAL_parsed_year_calendar")
   NAME("CAL_parsed_week_calendar")
NAMEEND
# 63 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_calendar_CA_L.h" 1
# 48 "../libs/sgeobj/sge_calendar_CA_L.h"
enum {
   CA_yday_range_list = CA_LOWERBOUND,
   CA_wday_range_list,
   CA_daytime_range_list,
   CA_state
};

LISTDEF(CA_Type)
   JGDI_OBJ(ParsedCalendar)
   SGE_LIST(CA_yday_range_list, TMR_Type, CULL_DEFAULT)


   SGE_LIST(CA_wday_range_list, TMR_Type, CULL_DEFAULT)

   SGE_LIST(CA_daytime_range_list, TMR_Type, CULL_DEFAULT)


   SGE_ULONG(CA_state, CULL_DEFAULT)
LISTEND

NAMEDEF(CAN)
   NAME("CA_yday_range_list")
   NAME("CA_wday_range_list")
   NAME("CA_daytime_range_list")
   NAME("CA_state")
NAMEEND
# 64 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_calendar_CQU_L.h" 1
# 51 "../libs/sgeobj/sge_calendar_CQU_L.h"
enum {
   CQU_state = CQU_LOWERBOUND,
   CQU_till
};

LISTDEF(CQU_Type)
   JGDI_OBJ(CalendarQueueState)
   SGE_ULONG(CQU_state, CULL_DEFAULT)
   SGE_ULONG(CQU_till, CULL_DEFAULT)
LISTEND

NAMEDEF(CQUN)
   NAME("CQU_state")
   NAME("CQU_till")
NAMEEND
# 65 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_calendar_TMR_L.h" 1
# 48 "../libs/sgeobj/sge_calendar_TMR_L.h"
enum {
   TMR_begin = TMR_LOWERBOUND,
   TMR_end
};

LISTDEF(TMR_Type)
   JGDI_OBJ(TimeRange)
   SGE_LIST(TMR_begin, TM_Type, CULL_DEFAULT)
   SGE_LIST(TMR_end, TM_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(TMRN)
   NAME("TMR_begin")
   NAME("TMR_end")
NAMEEND
# 66 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_calendar_TM_L.h" 1
# 60 "../libs/sgeobj/sge_calendar_TM_L.h"
enum {
   TM_mday = TM_LOWERBOUND,
   TM_mon,
   TM_year,
   TM_sec,
   TM_min,
   TM_hour,
   TM_wday,
   TM_yday,
   TM_isdst
};

LISTDEF(TM_Type)
   JGDI_MAPPED_OBJ(java.util.Calendar)
   SGE_ULONG(TM_mday, CULL_DEFAULT)
   SGE_ULONG(TM_mon, CULL_DEFAULT)
   SGE_ULONG(TM_year, CULL_DEFAULT)
   SGE_ULONG(TM_sec, CULL_DEFAULT)
   SGE_ULONG(TM_min, CULL_DEFAULT)
   SGE_ULONG(TM_hour, CULL_DEFAULT)
   SGE_ULONG(TM_wday, CULL_DEFAULT)
   SGE_ULONG(TM_yday, CULL_DEFAULT)
   SGE_ULONG(TM_isdst, CULL_DEFAULT)
LISTEND

NAMEDEF(TMN)
   NAME("TM_mday")
   NAME("TM_mon")
   NAME("TM_year")
   NAME("TM_sec")
   NAME("TM_min")
   NAME("TM_hour")
   NAME("TM_wday")
   NAME("TM_yday")
   NAME("TM_isdst")
NAMEEND
# 67 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_centry_CE_L.h" 1
# 45 "../libs/sgeobj/sge_centry_CE_L.h"
enum {
   CE_name = CE_LOWERBOUND,
   CE_shortcut,
   CE_valtype,
   CE_stringval,
   CE_doubleval,
   CE_relop,
   CE_consumable,
   CE_default,
   CE_dominant,
   CE_pj_stringval,
   CE_pj_doubleval,
   CE_pj_dominant,
   CE_requestable,
   CE_tagged,
   CE_urgency_weight
};

LISTDEF(CE_Type)
   JGDI_ROOT_OBJ(ComplexEntry, SGE_CE_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_CENTRY_ADD) | MODIFY(sgeE_CENTRY_MOD) | DELETE(sgeE_CENTRY_DEL) | GET_LIST(sgeE_CENTRY_LIST))
   SGE_STRING(CE_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_SUBLIST | CULL_PRIMARY_KEY | CULL_JGDI_CONF)
   SGE_STRING_D(CE_shortcut, CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF, "NONE")
   SGE_ULONG_D(CE_valtype, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 1)
   SGE_STRING(CE_stringval, CULL_DEFAULT | CULL_SPOOL | CULL_SUBLIST | CULL_JGDI_CONF)
   SGE_DOUBLE(CE_doubleval, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(CE_relop, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(CE_consumable, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_STRING(CE_default, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(CE_dominant, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_STRING(CE_pj_stringval, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(CE_pj_doubleval, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(CE_pj_dominant, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(CE_requestable, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(CE_tagged, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_STRING(CE_urgency_weight, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
LISTEND

NAMEDEF(CEN)
   NAME("CE_name")
   NAME("CE_shortcut")
   NAME("CE_valtype")
   NAME("CE_stringval")
   NAME("CE_doubleval")
   NAME("CE_relop")
   NAME("CE_consumable")
   NAME("CE_default")
   NAME("CE_dominant")
   NAME("CE_pj_stringval")
   NAME("CE_pj_doubleval")
   NAME("CE_pj_dominant")
   NAME("CE_requestable")
   NAME("CE_tagged")
   NAME("CE_urgency_weight")
NAMEEND
# 68 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ckpt_CK_L.h" 1
# 51 "../libs/sgeobj/sge_ckpt_CK_L.h"
enum {
   CK_name = CK_LOWERBOUND,
   CK_interface,
   CK_ckpt_command,
   CK_migr_command,
   CK_rest_command,
   CK_ckpt_dir,
   CK_when,
   CK_signal,
   CK_job_pid,
   CK_clean_command
};

LISTDEF(CK_Type)
   JGDI_ROOT_OBJ(Checkpoint, SGE_CK_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_CKPT_ADD) | MODIFY(sgeE_CKPT_MOD) | DELETE(sgeE_CKPT_DEL) | GET_LIST(sgeE_CKPT_LIST))
   SGE_STRING_D(CK_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF, "template")
   SGE_STRING_D(CK_interface, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "userdefined")
   SGE_STRING_D(CK_ckpt_command, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")
   SGE_STRING_D(CK_migr_command, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")
   SGE_STRING_D(CK_rest_command, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")
   SGE_STRING_D(CK_ckpt_dir, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "/tmp")
   SGE_STRING_D(CK_when, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "sx")
   SGE_STRING_D(CK_signal, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")
   SGE_ULONG_D(CK_job_pid, CULL_DEFAULT | CULL_JGDI_HIDDEN, 0)
   SGE_STRING_D(CK_clean_command, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")
LISTEND

NAMEDEF(CKN)
   NAME("CK_name")
   NAME("CK_interface")
   NAME("CK_ckpt_command")
   NAME("CK_migr_command")
   NAME("CK_rest_command")
   NAME("CK_ckpt_dir")
   NAME("CK_when")
   NAME("CK_signal")
   NAME("CK_job_pid")
   NAME("CK_clean_command")
NAMEEND
# 69 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_conf_CONF_L.h" 1
# 45 "../libs/sgeobj/sge_conf_CONF_L.h"
enum {
   CONF_name = CONF_LOWERBOUND,
   CONF_version,
   CONF_entries
};

LISTDEF(CONF_Type)
   JGDI_ROOT_OBJ(Configuration, SGE_CONF_LIST, ADD | MODIFY | DELETE | GET_LIST | GET)
   JGDI_EVENT_OBJ(ADD(sgeE_CONFIG_ADD) | MODIFY(sgeE_CONFIG_MOD) | DELETE(sgeE_CONFIG_DEL) | GET_LIST(sgeE_CONFIG_LIST))
   SGE_HOST_D(CONF_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF, "global")
   SGE_ULONG(CONF_version, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)
   SGE_LIST(CONF_entries, CF_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
LISTEND

NAMEDEF(CONFN)
   NAME("CONF_name")
   NAME("CONF_version")
   NAME("CONF_entries")
NAMEEND
# 70 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_conf_CF_L.h" 1
# 47 "../libs/sgeobj/sge_conf_CF_L.h"
enum {
   CF_name = CF_LOWERBOUND,
   CF_value,
   CF_sublist,
   CF_local
};

LISTDEF(CF_Type)
   JGDI_OBJ(ConfigurationElement)
   SGE_STRING(CF_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST | CULL_JGDI_CONF)
   SGE_STRING(CF_value, CULL_DEFAULT | CULL_SUBLIST | CULL_JGDI_CONF)
   SGE_LIST(CF_sublist, CULL_ANY_SUBTYPE, CULL_DEFAULT | CULL_JGDI_CONF)
   SGE_ULONG(CF_local, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(CFN)
   NAME("CF_name")
   NAME("CF_value")
   NAME("CF_sublist")
   NAME("CF_local")
NAMEEND
# 71 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_cqueue_CQ_L.h" 1
# 43 "../libs/sgeobj/sge_cqueue_CQ_L.h"
enum {
   CQ_name = CQ_LOWERBOUND,
   CQ_hostlist,
   CQ_qinstances,

   CQ_seq_no,
   CQ_nsuspend,
   CQ_job_slots,

   CQ_rerun,

   CQ_s_fsize,
   CQ_h_fsize,
   CQ_s_data,
   CQ_h_data,
   CQ_s_stack,
   CQ_h_stack,
   CQ_s_core,
   CQ_h_core,
   CQ_s_rss,
   CQ_h_rss,
   CQ_s_vmem,
   CQ_h_vmem,

   CQ_s_rt,
   CQ_h_rt,
   CQ_s_cpu,
   CQ_h_cpu,

   CQ_suspend_interval,
   CQ_min_cpu_interval,
   CQ_notify,

   CQ_tmpdir,
   CQ_shell,
   CQ_calendar,
   CQ_priority,
   CQ_processors,
   CQ_prolog,
   CQ_epilog,
   CQ_shell_start_mode,
   CQ_starter_method,
   CQ_suspend_method,
   CQ_resume_method,
   CQ_terminate_method,
   CQ_initial_state,

   CQ_pe_list,
   CQ_ckpt_list,

   CQ_owner_list,
   CQ_acl,
   CQ_xacl,

   CQ_projects,
   CQ_xprojects,

   CQ_load_thresholds,
   CQ_suspend_thresholds,
   CQ_consumable_config_list,

   CQ_subordinate_list,

   CQ_qtype,
   CQ_tag
};

LISTDEF(CQ_Type)
   JGDI_ROOT_OBJ(ClusterQueue, SGE_CQ_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_CQUEUE_ADD) | MODIFY(sgeE_CQUEUE_MOD) | DELETE(sgeE_CQUEUE_DEL) | GET_LIST(sgeE_CQUEUE_LIST))
   SGE_STRING_D(CQ_name, CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF | CULL_PRIMARY_KEY, "template")
   SGE_LIST(CQ_hostlist, HR_Type, CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(CQ_qinstances, QU_Type, CULL_JGDI_RO)

   SGE_MAP_D(CQ_seq_no, AULNG_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", 0, "hostname", "seqNo")
   SGE_MAP_D(CQ_nsuspend, AULNG_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", 1, "hostname", "nsuspend")
   SGE_MAP_D(CQ_job_slots, AULNG_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", 1, "hostname", "jobSlots")

   SGE_MAP_D(CQ_rerun, ABOOL_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", 0, "hostname", "rerun")

   SGE_MAP_D(CQ_s_fsize, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "sFSize")
   SGE_MAP_D(CQ_h_fsize, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "hFSize")
   SGE_MAP_D(CQ_s_data, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "sData")
   SGE_MAP_D(CQ_h_data, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "hData")
   SGE_MAP_D(CQ_s_stack, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "sStack")
   SGE_MAP_D(CQ_h_stack, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "hStack")
   SGE_MAP_D(CQ_s_core, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "sCore")
   SGE_MAP_D(CQ_h_core, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "hCore")
   SGE_MAP_D(CQ_s_rss, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "sRss")
   SGE_MAP_D(CQ_h_rss, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "hRss")
   SGE_MAP_D(CQ_s_vmem, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "sVmem")
   SGE_MAP_D(CQ_h_vmem, AMEM_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "hVmem")

   SGE_MAP_D(CQ_s_rt, ATIME_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "sRt")
   SGE_MAP_D(CQ_h_rt, ATIME_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "hRt")
   SGE_MAP_D(CQ_s_cpu, ATIME_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "sCpu")
   SGE_MAP_D(CQ_h_cpu, ATIME_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "INFINITY", "hostname", "hCpu")

   SGE_MAP_D(CQ_suspend_interval, AINTER_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "00:05:00", "hostname", "suspendInterval")
   SGE_MAP_D(CQ_min_cpu_interval, AINTER_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "00:05:00", "hostname", "minCpuInterval")
   SGE_MAP_D(CQ_notify, AINTER_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "00:00:60", "hostname", "notify")

   SGE_MAP_D(CQ_tmpdir, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "/tmp", "hostname", "tmpDir")
   SGE_MAP_D(CQ_shell, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "/bin/csh", "hostname", "shell")
   SGE_MAP_D(CQ_calendar, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "calendar")
   SGE_MAP_D(CQ_priority, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "0", "hostname", "priority")
   SGE_MAP_D(CQ_processors, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "UNDEFINED", "hostname", "processors")
   SGE_MAP_D(CQ_prolog, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "prolog")
   SGE_MAP_D(CQ_epilog, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "epilog")
   SGE_MAP_D(CQ_shell_start_mode, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "posix_compliant", "hostname", "shellStartMode")
   SGE_MAP_D(CQ_starter_method, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "starterMethod")
   SGE_MAP_D(CQ_suspend_method, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "suspendMethod")
   SGE_MAP_D(CQ_resume_method, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "resumeMethod")
   SGE_MAP_D(CQ_terminate_method, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "terminateMethod")
   SGE_MAP_D(CQ_initial_state, ASTR_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "default", "hostname", "initialState")

   SGE_MAPLIST_D(CQ_pe_list, ASTRLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "make", "hostname", "pe")
   SGE_MAPLIST_D(CQ_ckpt_list, ASTRLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "checkpoint")

   SGE_MAPLIST_D(CQ_owner_list, AUSRLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "owner")
   SGE_MAPLIST_D(CQ_acl, AUSRLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "acl")
   SGE_MAPLIST_D(CQ_xacl, AUSRLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "acl")

   SGE_MAPLIST_D(CQ_projects, APRJLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "project")
   SGE_MAPLIST_D(CQ_xprojects, APRJLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "project")

   SGE_MAPLIST_D(CQ_load_thresholds, ACELIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "np_load_avg=1.75", "hostname", "loadThreshold")
   SGE_MAPLIST_D(CQ_suspend_thresholds, ACELIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "suspendThreshold")
   SGE_MAPLIST_D(CQ_consumable_config_list, ACELIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "consumable")
   SGE_MAPLIST_D(CQ_subordinate_list, ASOLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", "NONE", "hostname", "subordinate")

   SGE_MAP_D(CQ_qtype, AQTLIST_Type, CULL_SPOOL | CULL_JGDI_CONF, "@/", 3, "hostname", "qType")

   SGE_ULONG(CQ_tag, CULL_JGDI_CONF)
LISTEND

NAMEDEF(CQN)
   NAME("CQ_name")
   NAME("CQ_hostlist")
   NAME("CQ_qinstances")

   NAME("CQ_seq_no")
   NAME("CQ_nsuspend")
   NAME("CQ_job_slots")

   NAME("CQ_rerun")

   NAME("CQ_s_fsize")
   NAME("CQ_h_fsize")
   NAME("CQ_s_data")
   NAME("CQ_h_data")
   NAME("CQ_s_stack")
   NAME("CQ_h_stack")
   NAME("CQ_s_core")
   NAME("CQ_h_core")
   NAME("CQ_s_rss")
   NAME("CQ_h_rss")
   NAME("CQ_s_vmem")
   NAME("CQ_h_vmem")

   NAME("CQ_s_rt")
   NAME("CQ_h_rt")
   NAME("CQ_s_cpu")
   NAME("CQ_h_cpu")

   NAME("CQ_suspend_interval")
   NAME("CQ_min_cpu_interval")
   NAME("CQ_notify")

   NAME("CQ_tmpdir")
   NAME("CQ_shell")
   NAME("CQ_calendar")
   NAME("CQ_priority")
   NAME("CQ_processors")
   NAME("CQ_prolog")
   NAME("CQ_epilog")
   NAME("CQ_shell_start_mode")
   NAME("CQ_starter_method")
   NAME("CQ_suspend_method")
   NAME("CQ_resume_method")
   NAME("CQ_terminate_method")
   NAME("CQ_initial_state")

   NAME("CQ_pe_list")
   NAME("CQ_ckpt_list")

   NAME("CQ_owner_list")
   NAME("CQ_acl")
   NAME("CQ_xacl")

   NAME("CQ_projects")
   NAME("CQ_xprojects")

   NAME("CQ_load_thresholds")
   NAME("CQ_suspend_thresholds")
   NAME("CQ_consumable_config_list")
   NAME("CQ_subordinate_list")

   NAME("CQ_qtype")
   NAME("CQ_tag")
NAMEEND
# 72 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ct_SCT_L.h" 1
# 49 "../libs/sgeobj/sge_ct_SCT_L.h"
enum {
   SCT_str = SCT_LOWERBOUND,
   SCT_job_pending_ref,
   SCT_job_ref
};

LISTDEF(SCT_Type)
   SGE_STRING(SCT_str, CULL_HASH | CULL_UNIQUE)
   SGE_LIST(SCT_job_pending_ref, REF_Type, CULL_DEFAULT)
   SGE_LIST(SCT_job_ref, REF_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(SCTN)
   NAME("SCT_str")
   NAME("SCT_job_pending_ref")
   NAME("SCT_job_ref")
NAMEEND
# 73 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ct_REF_L.h" 1
# 45 "../libs/sgeobj/sge_ct_REF_L.h"
enum {
   REF_ref = REF_LOWERBOUND
};

LISTDEF(REF_Type)
   SGE_REF(REF_ref, JB_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(REFN)
   NAME("REF_ref")
NAMEEND
# 74 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ct_CT_L.h" 1
# 48 "../libs/sgeobj/sge_ct_CT_L.h"
enum {
   CT_str = CT_LOWERBOUND,
   CT_refcount,
   CT_count,
   CT_rejected,
   CT_cache,
   CT_messages_added,
   CT_resource_contribution,

   CT_rc_valid,
   CT_reservation_rejected
};

LISTDEF(CT_Type)
   SGE_STRING(CT_str, CULL_HASH | CULL_UNIQUE)
   SGE_ULONG(CT_refcount, CULL_DEFAULT)
   SGE_INT(CT_count, CULL_DEFAULT)
   SGE_ULONG(CT_rejected, CULL_DEFAULT)
   SGE_LIST(CT_cache, CCT_Type, CULL_DEFAULT)
   SGE_BOOL(CT_messages_added, CULL_DEFAULT)
   SGE_DOUBLE(CT_resource_contribution, CULL_DEFAULT)
   SGE_BOOL(CT_rc_valid, CULL_DEFAULT)
   SGE_ULONG(CT_reservation_rejected, CULL_DEFAULT)
LISTEND

NAMEDEF(CTN)
   NAME("CT_str")
   NAME("CT_refcount")
   NAME("CT_count")
   NAME("CT_rejected")
   NAME("CT_cache")
   NAME("CT_messages_added")
   NAME("CT_resource_contribution")
   NAME("CT_rc_valid")
   NAME("CT_reservation_rejected")
NAMEEND
# 75 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ct_CCT_L.h" 1
# 51 "../libs/sgeobj/sge_ct_CCT_L.h"
enum {
   CCT_pe_name = CCT_LOWERBOUND,
   CCT_ignore_queues,
   CCT_ignore_hosts,
   CCT_job_messages,
   CCT_pe_job_slots,
   CCT_pe_job_slot_count
};

LISTDEF(CCT_Type)
   SGE_STRING(CCT_pe_name, CULL_HASH | CULL_UNIQUE)
   SGE_LIST(CCT_ignore_queues, CTI_Type, CULL_DEFAULT)
   SGE_LIST(CCT_ignore_hosts, CTI_Type, CULL_DEFAULT)
   SGE_LIST(CCT_job_messages, MES_Type, CULL_DEFAULT)
   SGE_REF(CCT_pe_job_slots, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_ULONG(CCT_pe_job_slot_count, CULL_DEFAULT)
LISTEND

NAMEDEF(CCTN)
   NAME("CCT_pe_name")
   NAME("CCT_ignore_queues")
   NAME("CCT_ignore_hosts")
   NAME("CCT_job_messages")
   NAME("CCT_pe_job_slots")
   NAME("CCT_pe_job_slot_count")
NAMEEND
# 76 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ct_CTI_L.h" 1
# 48 "../libs/sgeobj/sge_ct_CTI_L.h"
enum {
   CTI_name = CTI_LOWERBOUND
};

LISTDEF(CTI_Type)
   SGE_STRING(CTI_name, CULL_HASH | CULL_UNIQUE )
LISTEND

NAMEDEF(CTIN)
   NAME("CTI_name")
NAMEEND
# 77 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_cull_xml_XMLA_L.h" 1
# 37 "../libs/sgeobj/sge_cull_xml_XMLA_L.h"
# 1 "../libs/cull/cull_list.h" 1
# 38 "../libs/sgeobj/sge_cull_xml_XMLA_L.h" 2
# 57 "../libs/sgeobj/sge_cull_xml_XMLA_L.h"
enum {
   XMLA_Name = XMLA_LOWERBOUND,
   XMLA_Value
};

LISTDEF(XMLA_Type)
   SGE_STRING(XMLA_Name, CULL_DEFAULT)
   SGE_STRING(XMLA_Value, CULL_DEFAULT)
LISTEND

NAMEDEF(XMLAN)
   NAME("XMLA_Name")
   NAME("XMLA_Value")
NAMEEND
# 78 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_cull_xml_XMLS_L.h" 1
# 56 "../libs/sgeobj/sge_cull_xml_XMLS_L.h"
enum {
   XMLS_Name = XMLS_LOWERBOUND,
   XMLS_Value,
   XMLS_Version
};

LISTDEF(XMLS_Type)
   SGE_STRING(XMLS_Name, CULL_DEFAULT)
   SGE_STRING(XMLS_Value, CULL_DEFAULT)
   SGE_STRING(XMLS_Version, CULL_DEFAULT)
LISTEND

NAMEDEF(XMLSN)
   NAME("XMLS_Name")
   NAME("XMLS_Value")
   NAME("XMLS_Version")
NAMEEND
# 79 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_cull_xml_XMLH_L.h" 1
# 50 "../libs/sgeobj/sge_cull_xml_XMLH_L.h"
enum {
   XMLH_Version = XMLH_LOWERBOUND,
   XMLH_Name,
   XMLH_Stylesheet,
   XMLH_Attribute,
   XMLH_Element
};

LISTDEF(XMLH_Type)
   SGE_STRING(XMLH_Version, CULL_DEFAULT)
   SGE_STRING(XMLH_Name, CULL_DEFAULT)
   SGE_LIST(XMLH_Stylesheet, XMLS_Type, CULL_DEFAULT)
   SGE_LIST(XMLH_Attribute, XMLA_Type, CULL_DEFAULT)
   SGE_LIST(XMLH_Element, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(XMLHN)
   NAME("XMLH_Version")
   NAME("XMLH_Name")
   NAME("XMLH_Stylesheet")
   NAME("XMLH_Attribute")
   NAME("XMLH_Element")
NAMEEND
# 80 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_cull_xml_XMLE_L.h" 1
# 50 "../libs/sgeobj/sge_cull_xml_XMLE_L.h"
enum {
   XMLE_Attribute = XMLE_LOWERBOUND,
   XMLE_Print,
   XMLE_Element,
   XMLE_List
};

LISTDEF(XMLE_Type)
   SGE_LIST(XMLE_Attribute, XMLA_Type, CULL_DEFAULT)
   SGE_BOOL(XMLE_Print, CULL_DEFAULT)
   SGE_OBJECT(XMLE_Element, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_LIST(XMLE_List, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(XMLEN)
   NAME("XMLE_Attribute")
   NAME("XMLE_Print")
   NAME("XMLE_Element")
   NAME("XMLE_List")
NAMEEND
# 81 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_cuser_CU_L.h" 1
# 45 "../libs/sgeobj/sge_cuser_CU_L.h"
enum {
   CU_name = CU_LOWERBOUND,
   CU_ruser_list,
   CU_ulong32,
   CU_bool,
   CU_time,
   CU_mem,
   CU_inter
};

LISTDEF(CU_Type)
   SGE_STRING(CU_name, CULL_HASH | CULL_UNIQUE | CULL_SPOOL)
   SGE_LIST(CU_ruser_list, ASTR_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(CU_ulong32, AULNG_Type, CULL_DEFAULT)
   SGE_LIST(CU_bool, ABOOL_Type, CULL_DEFAULT)
   SGE_LIST(CU_time, ATIME_Type, CULL_DEFAULT)
   SGE_LIST(CU_mem, AMEM_Type, CULL_DEFAULT)
   SGE_LIST(CU_inter, AINTER_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(CUN)
   NAME("CU_name")
   NAME("CU_ruser_list")
   NAME("CU_ulong32")
   NAME("CU_bool")
   NAME("CU_time")
   NAME("CU_mem")
   NAME("CU_inter")
NAMEEND
# 82 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_eejob_FCAT_L.h" 1
# 49 "../libs/sgeobj/sge_eejob_FCAT_L.h"
enum {
   FCAT_job_share = FCAT_LOWERBOUND,
   FCAT_user_share,
   FCAT_user,
   FCAT_project_share,
   FCAT_project,
   FCAT_dept_share,
   FCAT_dept,
   FCAT_jobrelated_ticket_first,
   FCAT_jobrelated_ticket_last
};

LISTDEF(FCAT_Type)
   SGE_ULONG(FCAT_job_share, CULL_DEFAULT)
   SGE_ULONG(FCAT_user_share, CULL_DEFAULT)
   SGE_REF(FCAT_user,CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_ULONG(FCAT_project_share, CULL_DEFAULT)
   SGE_REF(FCAT_project,CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_ULONG(FCAT_dept_share, CULL_DEFAULT)
   SGE_REF(FCAT_dept,CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(FCAT_jobrelated_ticket_first, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(FCAT_jobrelated_ticket_last, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(FCATN)
   NAME("FCAT_job_share")
   NAME("FCAT_user_share")
   NAME("FACT_user")
   NAME("FCAT_project_share")
   NAME("FCAT_project")
   NAME("FCAT_dept_share")
   NAME("FCAT_dept")
   NAME("FCAT_jobrelated_ticket_first")
   NAME("FCAT_jobrelated_ticket_last")
NAMEEND
# 83 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_eejob_SGEJ_L.h" 1
# 49 "../libs/sgeobj/sge_eejob_SGEJ_L.h"
enum {
   SGEJ_priority = SGEJ_LOWERBOUND,
   SGEJ_job_number,
   SGEJ_job_name,
   SGEJ_owner,
   SGEJ_state,
   SGEJ_master_queue,
   SGEJ_job_reference,
   SGEJ_submission_time
};


enum {
  SGEJ_sort_decending = 0,
  SGEJ_sort_ascending
};

LISTDEF(SGEJ_Type)
   SGE_DOUBLE(SGEJ_priority, CULL_DEFAULT)
   SGE_ULONG(SGEJ_job_number, CULL_DEFAULT)
   SGE_STRING(SGEJ_job_name, CULL_DEFAULT)
   SGE_STRING(SGEJ_owner, CULL_DEFAULT)
   SGE_ULONG(SGEJ_state, CULL_DEFAULT)
   SGE_STRING(SGEJ_master_queue, CULL_DEFAULT)
   SGE_REF(SGEJ_job_reference, JRL_Type, CULL_DEFAULT)
   SGE_ULONG(SGEJ_submission_time, CULL_DEFAULT)
LISTEND

NAMEDEF(SGEJN)
   NAME("SGEJ_priority")
   NAME("SGEJ_job_number")
   NAME("SGEJ_job_name")
   NAME("SGEJ_owner")
   NAME("SGEJ_state")
   NAME("SGEJ_master_queue")
   NAME("SGEJ_job_reference")
   NAME("SGEJ_submission_time")
NAMEEND
# 84 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_event_EV_L.h" 1
# 38 "../libs/sgeobj/sge_event_EV_L.h"
# 1 "../libs/uti/sge_monitor.h" 1
# 36 "../libs/uti/sge_monitor.h"
# 1 "/usr/include/sys/time.h" 1 3 4
# 27 "/usr/include/sys/time.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 28 "/usr/include/sys/time.h" 2 3 4

# 1 "/usr/include/bits/time.h" 1 3 4
# 30 "/usr/include/sys/time.h" 2 3 4
# 39 "/usr/include/sys/time.h" 3 4

# 57 "/usr/include/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };

typedef struct timezone *__restrict __timezone_ptr_t;
# 73 "/usr/include/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    __timezone_ptr_t __tz) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));




extern int settimeofday (__const struct timeval *__tv,
    __const struct timezone *__tz)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int adjtime (__const struct timeval *__delta,
      struct timeval *__olddelta) __attribute__ ((__nothrow__));




enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };




typedef enum __itimer_which __itimer_which_t;






extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) __attribute__ ((__nothrow__));




extern int setitimer (__itimer_which_t __which,
        __const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) __attribute__ ((__nothrow__));




extern int utimes (__const char *__file, __const struct timeval __tvp[2])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int lutimes (__const char *__file, __const struct timeval __tvp[2])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int futimes (int __fd, __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));






extern int futimesat (int __fd, __const char *__file,
        __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));
# 191 "/usr/include/sys/time.h" 3 4

# 37 "../libs/uti/sge_monitor.h" 2


# 1 "../libs/uti/sge_dstring.h" 1
# 54 "../libs/uti/sge_dstring.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 102 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 55 "../libs/uti/sge_dstring.h" 2



# 1 "../libs/uti/sge_stdlib.h" 1
# 35 "../libs/uti/sge_stdlib.h"
# 1 "/usr/include/stdlib.h" 1 3 4
# 33 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h" 1 3 4
# 323 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h" 3 4
typedef int wchar_t;
# 34 "/usr/include/stdlib.h" 2 3 4








# 1 "/usr/include/bits/waitflags.h" 1 3 4
# 43 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/bits/waitstatus.h" 1 3 4
# 67 "/usr/include/bits/waitstatus.h" 3 4
union wait
  {
    int w_status;
    struct
      {

 unsigned int __w_termsig:7;
 unsigned int __w_coredump:1;
 unsigned int __w_retcode:8;
 unsigned int:16;







      } __wait_terminated;
    struct
      {

 unsigned int __w_stopval:8;
 unsigned int __w_stopsig:8;
 unsigned int:16;






      } __wait_stopped;
  };
# 44 "/usr/include/stdlib.h" 2 3 4
# 68 "/usr/include/stdlib.h" 3 4
typedef union
  {
    union wait *__uptr;
    int *__iptr;
  } __WAIT_STATUS __attribute__ ((__transparent_union__));
# 96 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 140 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__)) ;




extern double atof (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (__const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





extern float strtof (__const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

extern long double strtold (__const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





extern long int strtol (__const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

extern unsigned long int strtoul (__const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




__extension__
extern long long int strtoq (__const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

__extension__
extern unsigned long long int strtouq (__const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





__extension__
extern long long int strtoll (__const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

__extension__
extern unsigned long long int strtoull (__const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

# 240 "/usr/include/stdlib.h" 3 4
extern long int strtol_l (__const char *__restrict __nptr,
     char **__restrict __endptr, int __base,
     __locale_t __loc) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;

extern unsigned long int strtoul_l (__const char *__restrict __nptr,
        char **__restrict __endptr,
        int __base, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;

__extension__
extern long long int strtoll_l (__const char *__restrict __nptr,
    char **__restrict __endptr, int __base,
    __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;

__extension__
extern unsigned long long int strtoull_l (__const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;

extern double strtod_l (__const char *__restrict __nptr,
   char **__restrict __endptr, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;

extern float strtof_l (__const char *__restrict __nptr,
         char **__restrict __endptr, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;

extern long double strtold_l (__const char *__restrict __nptr,
         char **__restrict __endptr,
         __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;





extern __inline double
__attribute__ ((__nothrow__)) atof (__const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}
extern __inline int
__attribute__ ((__nothrow__)) atoi (__const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline long int
__attribute__ ((__nothrow__)) atol (__const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline long long int
__attribute__ ((__nothrow__)) atoll (__const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 311 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__)) ;


extern long int a64l (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
# 327 "/usr/include/stdlib.h" 3 4
extern long int random (void) __attribute__ ((__nothrow__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));






extern int rand (void) __attribute__ ((__nothrow__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__));




extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__));







extern double drand48 (void) __attribute__ ((__nothrow__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    unsigned long long int __a;
  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));









extern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__));




extern void cfree (void *__ptr) __attribute__ ((__nothrow__));



# 1 "/usr/include/alloca.h" 1 3 4
# 25 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h" 1 3 4
# 26 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__));






# 498 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




extern void abort (void) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
# 528 "/usr/include/stdlib.h" 3 4
extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));







extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern void exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));







extern void quick_exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));







extern void _Exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));






extern char *getenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




extern char *__secure_getenv (__const char *__name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





extern int putenv (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (__const char *__name, __const char *__value, int __replace)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__));
# 606 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
# 620 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 630 "/usr/include/stdlib.h" 3 4
extern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 642 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 652 "/usr/include/stdlib.h" 3 4
extern int mkstemps64 (char *__template, int __suffixlen)
     __attribute__ ((__nonnull__ (1))) ;
# 663 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
# 674 "/usr/include/stdlib.h" 3 4
extern int mkostemp (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 684 "/usr/include/stdlib.h" 3 4
extern int mkostemp64 (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 694 "/usr/include/stdlib.h" 3 4
extern int mkostemps (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 706 "/usr/include/stdlib.h" 3 4
extern int mkostemps64 (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;









extern int system (__const char *__command) ;






extern char *canonicalize_file_name (__const char *__name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
# 734 "/usr/include/stdlib.h" 3 4
extern char *realpath (__const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__)) ;






typedef int (*__compar_fn_t) (__const void *, __const void *);


typedef __compar_fn_t comparison_fn_t;



typedef int (*__compar_d_fn_t) (__const void *, __const void *, void *);





extern void *bsearch (__const void *__key, __const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));

extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
       __compar_d_fn_t __compar, void *__arg)
  __attribute__ ((__nonnull__ (1, 4)));




extern int abs (int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;

# 808 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));







extern int mblen (__const char *__s, size_t __n) __attribute__ ((__nothrow__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__));

extern size_t wcstombs (char *__restrict __s,
   __const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__));








extern int rpmatch (__const char *__response) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
# 896 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *__const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;





extern void setkey (__const char *__key) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));







extern int posix_openpt (int __oflag) ;







extern int grantpt (int __fd) __attribute__ ((__nothrow__));



extern int unlockpt (int __fd) __attribute__ ((__nothrow__));




extern char *ptsname (int __fd) __attribute__ ((__nothrow__)) ;






extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


extern int getpt (void);






extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
# 964 "/usr/include/stdlib.h" 3 4

# 36 "../libs/uti/sge_stdlib.h" 2
# 63 "../libs/uti/sge_stdlib.h"
char *sge_malloc(int size);

void *sge_realloc(void *ptr, int size, int do_abort);

char *sge_free(char *cp);

const char *sge_getenv(const char *env_str);
int sge_putenv(const char *var);
int sge_setenv(const char *name, const char *value);
void sge_unsetenv(const char* name);
# 59 "../libs/uti/sge_dstring.h" 2



typedef struct {
   char *s;


   size_t length;
   size_t size;
   bool is_static;
} dstring;


void sge_dstring_init(dstring *sb, char *buffer, size_t size);

const char* sge_dstring_append(dstring *sb, const char *a);
const char* sge_dstring_append_dstring(dstring *sb, const dstring *a);
const char* sge_dstring_append_char(dstring *sb, const char a);
const char* sge_dstring_append_time(dstring *sb, time_t time, bool as_xml);
const char* sge_dstring_append_mailopt(dstring *sb, u_int mailopt);

const char* sge_dstring_sprintf(dstring *sb, const char *fmt, ...);
const char* sge_dstring_vsprintf(dstring *sb, const char *fmt, va_list ap);
const char* sge_dstring_sprintf_append(dstring *sb, const char *fmt, ...);

void sge_dstring_clear(dstring *sb);
void sge_dstring_free(dstring *sb);

const char *sge_dstring_get_string(const dstring *string);

const char* sge_dstring_copy_string(dstring *sb, const char* str);

const char* sge_dstring_copy_dstring(dstring *sb1, const dstring *sb2);

size_t sge_dstring_strlen(const dstring *string);

size_t sge_dstring_remaining(const dstring *string);

const char *sge_dstring_ulong_to_binstring(dstring *sb, u_int number);

bool sge_dstring_split(dstring *string, char character, dstring *before, dstring *after);

void sge_dstring_strip_white_space_at_eol(dstring *string);
# 40 "../libs/uti/sge_monitor.h" 2
# 101 "../libs/uti/sge_monitor.h"
typedef enum {
   NO_WARNING = 0,
   EMT_WARNING = 10,
   TET_WARNING = 30,
   MT_WARNING = 10,
   ST_WARNING = 0,
   EXECD_WARNING = 10,
   SCT_WARNING = 20
}thread_warning_t;






typedef enum {
   NO_ERROR = 0,
   EMT_ERROR = 600,
   TET_ERROR = 600,
   MT_ERROR = 600,
   ST_ERROR = 0,
   EXECD_ERROR = 600,
   SCT_ERROR = 600
}thread_error_t;





typedef void (*extension_output)(
   dstring *info_message,
   void *monitor_extension,
   double time
);




typedef enum {
   NONE_EXT = -1,
   GDI_EXT = 0,
   EDT_EXT = 1,
   TET_EXT = 2,
   LIS_EXT = 3,
   SCH_EXT = 4
}extension_t;




typedef struct {

   const char *thread_name;
   u_int monitor_time;
   bool log_monitor_mes;

   dstring *output_line1;
   dstring *output_line2;
   dstring *work_line;
   int pos;

   struct timeval now;
   bool output;
   u_int message_in_count;
   u_int message_out_count;
   double idle;
   double wait;

   extension_t ext_type;
   void *ext_data;
   u_int ext_data_size;
   extension_output ext_output;
} monitoring_t;

void sge_monitor_init(monitoring_t *monitor, const char *thread_name, extension_t ext,
                 thread_warning_t warning_timeout, thread_error_t error_timeout);
void sge_monitor_free(monitoring_t *monitor);
u_int sge_monitor_status(char **info_message, u_int monitor_time);
void sge_set_last_wait_time(monitoring_t *monitor, struct timeval after);

void sge_monitor_output(monitoring_t *monitor);
void sge_monitor_reset(monitoring_t *monitor);
# 267 "../libs/uti/sge_monitor.h"
typedef struct {
   u_int dummy;
} m_sch_t;



typedef struct {
   u_int gdi_add_count;
   u_int gdi_mod_count;
   u_int gdi_get_count;
   u_int gdi_del_count;
   u_int gdi_cp_count;
   u_int gdi_trig_count;
   u_int gdi_perm_count;
   u_int gdi_replace_count;

   u_int eload_count;
   u_int econf_count;
   u_int ejob_count;
   u_int eproc_count;
   u_int eack_count;

   u_int queue_length;
} m_gdi_t;
# 312 "../libs/uti/sge_monitor.h"
typedef struct {
   u_int inc_gdi;
   u_int inc_ack;
   u_int inc_ece;
   u_int inc_rep;
} m_lis_t;
# 326 "../libs/uti/sge_monitor.h"
typedef struct {
   u_int count;
   u_int client_count;
   u_int mod_client_count;
   u_int ack_count;
   u_int new_event_count;
   u_int added_event_count;
   u_int skip_event_count;
   u_int blocked_client_count;
   u_int busy_client_count;
}m_edt_t;
# 367 "../libs/uti/sge_monitor.h"
typedef struct {
   u_int count;
   u_int event_count;
   u_int exec_count;
}m_tet_t;
# 39 "../libs/sgeobj/sge_event_EV_L.h" 2
# 47 "../libs/sgeobj/sge_event_EV_L.h"
enum {

   EV_id = EV_LOWERBOUND,
   EV_name,


   EV_host,
   EV_commproc,
   EV_commid,


   EV_uid,


   EV_d_time,
   EV_flush_delay,


   EV_subscribed,

   EV_changed,
   EV_busy_handling,
   EV_session,


   EV_last_heard_from,
   EV_last_send_time,
   EV_next_send_time,
   EV_next_number,
   EV_busy,
   EV_events,

   EV_sub_array,

   EV_state,
   EV_update_function
};

LISTDEF(EV_Type)
   JGDI_ROOT_OBJ(EventClient, SGE_EV_LIST, GET_LIST)


   SGE_ULONG(EV_id, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_DEFAULT)
   SGE_STRING(EV_name, CULL_DEFAULT)

   SGE_HOST(EV_host, CULL_DEFAULT)
   SGE_STRING(EV_commproc, CULL_DEFAULT)
   SGE_ULONG(EV_commid, CULL_DEFAULT)

   SGE_ULONG(EV_uid, CULL_DEFAULT)

   SGE_ULONG(EV_d_time, CULL_DEFAULT)
   SGE_ULONG(EV_flush_delay, CULL_DEFAULT)
   SGE_LIST(EV_subscribed, EVS_Type, CULL_DEFAULT)
   SGE_BOOL(EV_changed, CULL_DEFAULT)
   SGE_ULONG(EV_busy_handling, CULL_DEFAULT)
   SGE_STRING(EV_session, CULL_DEFAULT)

   SGE_ULONG(EV_last_heard_from, CULL_DEFAULT)
   SGE_ULONG(EV_last_send_time, CULL_DEFAULT)
   SGE_ULONG(EV_next_send_time, CULL_DEFAULT)
   SGE_ULONG(EV_next_number, CULL_DEFAULT)
   SGE_ULONG(EV_busy, CULL_DEFAULT)
   SGE_LIST(EV_events, ET_Type, CULL_DEFAULT)
   SGE_REF(EV_sub_array, CULL_ANY_SUBTYPE, CULL_DEFAULT)

   SGE_ULONG(EV_state, CULL_DEFAULT)
   SGE_REF(EV_update_function, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(EVN)
   NAME("EV_id")
   NAME("EV_name")

   NAME("EV_host")
   NAME("EV_commproc")
   NAME("EV_commid")

   NAME("EV_uid")

   NAME("EV_d_time")
   NAME("EV_flush_delay")
   NAME("EV_subscribed")
   NAME("EV_changed")
   NAME("EV_busy_handling")
   NAME("EV_session")

   NAME("EV_last_heard_from")
   NAME("EV_last_send_time")
   NAME("EV_next_send_time")
   NAME("EV_next_number")
   NAME("EV_busy")
   NAME("EV_events")
   NAME("EV_sub_array")

   NAME("EV_state")
   NAME("EV_update_function")
NAMEEND
# 85 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_event_EVS_L.h" 1
# 46 "../libs/sgeobj/sge_event_EVS_L.h"
enum {
   EVS_id = EVS_LOWERBOUND,
   EVS_flush,
   EVS_interval,
   EVS_what,
   EVS_where
};

LISTDEF(EVS_Type)
   JGDI_OBJ(EventSubcribtion)
   SGE_ULONG(EVS_id, CULL_DEFAULT)
   SGE_BOOL(EVS_flush, CULL_DEFAULT)
   SGE_ULONG(EVS_interval, CULL_DEFAULT)
   SGE_OBJECT(EVS_what, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_OBJECT(EVS_where, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(EVSN)
   NAME("EVS_id")
   NAME("EVS_flush")
   NAME("EVS_interval")
   NAME("EVS_what")
   NAME("EVS_where")
NAMEEND
# 86 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_event_ET_L.h" 1
# 46 "../libs/sgeobj/sge_event_ET_L.h"
enum {
   ET_number = ET_LOWERBOUND,
   ET_timestamp,
   ET_type,
   ET_intkey,
   ET_intkey2,
   ET_strkey,
   ET_strkey2,
   ET_new_version





};

LISTDEF(ET_Type)
   JGDI_OBJ(Event)
   SGE_ULONG(ET_number, CULL_DEFAULT)
   SGE_ULONG(ET_timestamp, CULL_DEFAULT)
   SGE_ULONG(ET_type, CULL_DEFAULT)
   SGE_ULONG(ET_intkey, CULL_DEFAULT)
   SGE_ULONG(ET_intkey2, CULL_DEFAULT)
   SGE_STRING(ET_strkey, CULL_DEFAULT)
   SGE_STRING(ET_strkey2, CULL_DEFAULT)
   SGE_LIST(ET_new_version, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(ETN)
   NAME("ET_number")
   NAME("ET_timestamp")
   NAME("ET_type")
   NAME("ET_intkey")
   NAME("ET_intkey2")
   NAME("ET_strkey")
   NAME("ET_strkey2")
   NAME("ET_new_version")
NAMEEND
# 87 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_event_request_EVR_L.h" 1
# 47 "../libs/sgeobj/sge_event_request_EVR_L.h"
enum {

   EVR_operation = EVR_LOWERBOUND,
   EVR_timestamp,
   EVR_event_client_id,
   EVR_event_number,
   EVR_session,
   EVR_event_client,
   EVR_event_list
};

LISTDEF(EVR_Type)
   SGE_ULONG(EVR_operation, CULL_DEFAULT)
   SGE_ULONG(EVR_timestamp, CULL_DEFAULT)
   SGE_ULONG(EVR_event_client_id, CULL_DEFAULT)
   SGE_ULONG(EVR_event_number, CULL_DEFAULT)
   SGE_STRING(EVR_session, CULL_DEFAULT)
   SGE_OBJECT(EVR_event_client, EV_Type, CULL_DEFAULT)
   SGE_LIST(EVR_event_list, ET_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(EVRN)
   NAME("EVR_operation")
   NAME("EVR_timestamp")
   NAME("EVR_event_client_id")
   NAME("EVR_event_number")
   NAME("EVR_session")
   NAME("EVR_event_client")
   NAME("EVR_event_list")
NAMEEND
# 88 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_feature_FES_L.h" 1
# 45 "../libs/sgeobj/sge_feature_FES_L.h"
enum {
   FES_id = FES_LOWERBOUND,
   FES_active
};

LISTDEF(FES_Type)
   SGE_ULONG(FES_id, CULL_DEFAULT)
   SGE_ULONG(FES_active, CULL_DEFAULT)
LISTEND

NAMEDEF(FESN)
   NAME("FES_id")

   NAME("FES_active")
NAMEEND
# 89 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_helper_QAJ_L.h" 1
# 46 "../libs/sgeobj/sge_helper_QAJ_L.h"
enum {
   QAJ_host = QAJ_LOWERBOUND,
   QAJ_queue,
   QAJ_group,
   QAJ_owner,
   QAJ_project,
   QAJ_department,
   QAJ_ru_wallclock,
   QAJ_ru_utime,
   QAJ_ru_stime,
   QAJ_ru_maxrss,
   QAJ_ru_inblock,
   QAJ_granted_pe,
   QAJ_slots,
   QAJ_cpu,
   QAJ_mem,
   QAJ_io,
   QAJ_iow,
   QAJ_maxvmem,
   QAJ_arid
};

LISTDEF(QAJ_Type)
   SGE_HOST(QAJ_host, CULL_DEFAULT)
   SGE_STRING(QAJ_queue, CULL_DEFAULT)
   SGE_STRING(QAJ_group, CULL_DEFAULT)
   SGE_STRING(QAJ_owner, CULL_DEFAULT)
   SGE_STRING(QAJ_project, CULL_DEFAULT)
   SGE_STRING(QAJ_department, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_ru_wallclock, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_ru_utime, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_ru_stime, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_ru_maxrss, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_ru_inblock, CULL_DEFAULT)
   SGE_STRING(QAJ_granted_pe, CULL_DEFAULT)
   SGE_ULONG(QAJ_slots, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_cpu, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_mem, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_io, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_iow, CULL_DEFAULT)
   SGE_DOUBLE(QAJ_maxvmem, CULL_DEFAULT)
   SGE_ULONG(QAJ_arid, CULL_DEFAULT)
LISTEND


NAMEDEF(QAJN)
   NAME("QAJ_host")
   NAME("QAJ_queue")
   NAME("QAJ_group")
   NAME("QAJ_owner")
   NAME("QAJ_project")
   NAME("QAJ_department")
   NAME("QAJ_ru_wallclock")
   NAME("QAJ_ru_utime")
   NAME("QAJ_ru_stime")
   NAME("QAJ_ru_maxrss")
   NAME("QAJ_ru_inblock")
   NAME("QAJ_granted_pe")
   NAME("QAJ_slots")
   NAME("QAJ_cpu")
   NAME("QAJ_mem")
   NAME("QAJ_io")
   NAME("QAJ_iow")
   NAME("QAJ_maxvmem")
   NAME("QAJ_arid")
NAMEEND
# 90 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_hgroup_HGRP_L.h" 1
# 124 "../libs/sgeobj/sge_hgroup_HGRP_L.h"
enum {
   HGRP_name = HGRP_LOWERBOUND,
   HGRP_host_list,
   HGRP_cqueue_list
};

LISTDEF(HGRP_Type)
   JGDI_ROOT_OBJ(Hostgroup, SGE_HGRP_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_HGROUP_ADD) | MODIFY(sgeE_HGROUP_MOD) | DELETE(sgeE_HGROUP_DEL) | GET_LIST(sgeE_HGROUP_LIST))
   SGE_HOST_D(HGRP_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF, "@template")
   SGE_LIST(HGRP_host_list, HR_Type, CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(HGRP_cqueue_list, CQ_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(HGRPN)
   NAME("HGRP_name")
   NAME("HGRP_host_list")
   NAME("HGRP_cqueue_list")
NAMEEND
# 91 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_host_EH_L.h" 1
# 48 "../libs/sgeobj/sge_host_EH_L.h"
enum {
   EH_name = EH_LOWERBOUND,
   EH_scaling_list,



   EH_consumable_config_list,

   EH_usage_scaling_list,


   EH_load_list,


   EH_lt_heard_from,
   EH_processors,

   EH_acl,
   EH_xacl,
   EH_prj,
   EH_xprj,


   EH_sort_value,

   EH_reuse_me,
   EH_tagged,
   EH_load_correction_factor,





   EH_seq_no,

   EH_real_name,
   EH_sge_load,

   EH_sge_ticket_pct,

   EH_sge_load_pct,


   EH_featureset_id,
   EH_scaled_usage_list,

   EH_scaled_usage_pct_list,

   EH_num_running_jobs,

   EH_load_report_interval,

   EH_resource_utilization,

   EH_cached_complexes,

   EH_cache_version,

   EH_master_host,
   EH_reschedule_unknown,


   EH_reschedule_unknown_list,



   EH_report_seqno,





   EH_report_variables,
   EH_merged_report_variables


};

LISTDEF(EH_Type)
   JGDI_ROOT_OBJ(ExecHost, SGE_EH_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_EXECHOST_ADD) | MODIFY(sgeE_EXECHOST_MOD) | DELETE(sgeE_EXECHOST_DEL) | GET_LIST(sgeE_EXECHOST_LIST))
   SGE_HOST_D(EH_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF, "template")
   SGE_MAP(EH_scaling_list, HS_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(EH_consumable_config_list, CE_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_MAP(EH_usage_scaling_list, HS_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_MAP(EH_load_list, HL_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(EH_lt_heard_from, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_processors, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_LIST(EH_acl, US_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(EH_xacl, US_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(EH_prj, PR_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(EH_xprj, PR_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_DOUBLE(EH_sort_value, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_reuse_me, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_tagged, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_load_correction_factor, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_seq_no, CULL_DEFAULT | CULL_JGDI_HIDDEN)

   SGE_STRING(EH_real_name, CULL_DEFAULT | CULL_JGDI_HIDDEN)

   SGE_ULONG(EH_sge_load, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(EH_sge_ticket_pct, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(EH_sge_load_pct, CULL_DEFAULT | CULL_JGDI_HIDDEN)

   SGE_ULONG(EH_featureset_id, CULL_DEFAULT | CULL_JGDI_HIDDEN)

   SGE_MAP(EH_scaled_usage_list, UA_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_MAP(EH_scaled_usage_pct_list, UA_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_num_running_jobs, CULL_DEFAULT | CULL_JGDI_HIDDEN)

   SGE_ULONG(EH_load_report_interval, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_LIST(EH_resource_utilization, RUE_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_LIST(EH_cached_complexes, CE_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_cache_version, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_master_host, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_reschedule_unknown, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_LIST(EH_reschedule_unknown_list, RU_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(EH_report_seqno, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_LIST(EH_report_variables, STU_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(EH_merged_report_variables, STU_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(EHN)
   NAME("EH_name")
   NAME("EH_scaling_list")
   NAME("EH_consumable_config_list")
   NAME("EH_usage_scaling_list")
   NAME("EH_load_list")
   NAME("EH_lt_heard_from")
   NAME("EH_processors")
   NAME("EH_acl")
   NAME("EH_xacl")
   NAME("EH_prj")
   NAME("EH_xprj")


   NAME("EH_sort_value")
   NAME("EH_reuse_me")
   NAME("EH_tagged")
   NAME("EH_load_correction_factor")
   NAME("EH_seq_no")

   NAME("EH_real_name")

   NAME("EH_sge_load")
   NAME("EH_sge_ticket_pct")
   NAME("EH_sge_load_pct")

   NAME("EH_featureset_id")

   NAME("EH_scaled_usage_list")
   NAME("EH_scaled_usage_pct_list")
   NAME("EH_num_running_jobs")

   NAME("EH_load_report_interval")
   NAME("EH_resource_utilization")
   NAME("EH_cached_complexes")
   NAME("EH_cache_version")
   NAME("EH_master_host")
   NAME("EH_reschedule_unknown")
   NAME("EH_reschedule_unknown_list")
   NAME("EH_report_seqno")
   NAME("EH_report_variables")
   NAME("EH_merged_report_variables")
NAMEEND
# 92 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_host_RU_L.h" 1
# 48 "../libs/sgeobj/sge_host_RU_L.h"
enum {
   RU_job_number = RU_LOWERBOUND,
   RU_task_number,
   RU_state
};

LISTDEF(RU_Type)
   JGDI_OBJ(RescheduleUnknown)
   SGE_ULONG(RU_job_number, CULL_DEFAULT)
   SGE_ULONG(RU_task_number, CULL_DEFAULT)
   SGE_ULONG(RU_state, CULL_DEFAULT)
LISTEND

NAMEDEF(RUN)
   NAME("RU_job_number")
   NAME("RU_task_number")
   NAME("RU_state")
NAMEEND
# 93 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_host_AH_L.h" 1
# 48 "../libs/sgeobj/sge_host_AH_L.h"
enum {
   AH_name = AH_LOWERBOUND
};

LISTDEF(AH_Type)
   JGDI_ROOT_OBJ(AdminHost, SGE_AH_LIST, ADD | DELETE | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_ADMINHOST_ADD) | MODIFY(sgeE_ADMINHOST_MOD) | DELETE(sgeE_ADMINHOST_DEL) | GET_LIST(sgeE_ADMINHOST_LIST))
   SGE_HOST(AH_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF)
LISTEND

NAMEDEF(AHN)
   NAME("AH_name")
NAMEEND
# 94 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_host_SH_L.h" 1
# 48 "../libs/sgeobj/sge_host_SH_L.h"
enum {
   SH_name = SH_LOWERBOUND
};

LISTDEF(SH_Type)
   JGDI_ROOT_OBJ( SubmitHost, SGE_SH_LIST, ADD | DELETE | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_SUBMITHOST_ADD) | MODIFY(sgeE_SUBMITHOST_MOD) | DELETE(sgeE_SUBMITHOST_DEL) | GET_LIST(sgeE_SUBMITHOST_LIST))
   SGE_HOST(SH_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF)
LISTEND

NAMEDEF(SHN)
   NAME("SH_name")
NAMEEND
# 95 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_host_HL_L.h" 1
# 48 "../libs/sgeobj/sge_host_HL_L.h"
enum {
   HL_name = HL_LOWERBOUND,
   HL_value,
   HL_last_update,
   HL_static
};

LISTDEF(HL_Type)
   JGDI_MAP_OBJ(HL_name, HL_value)
   SGE_STRING(HL_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_STRING(HL_value, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(HL_last_update, CULL_DEFAULT)
   SGE_BOOL(HL_static, CULL_DEFAULT)
LISTEND

NAMEDEF(HLN)
   NAME("HL_name")
   NAME("HL_value")
   NAME("HL_last_update")
   NAME("HL_static")
NAMEEND
# 96 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_host_HS_L.h" 1
# 48 "../libs/sgeobj/sge_host_HS_L.h"
enum {
   HS_name = HS_LOWERBOUND,
   HS_value
};

LISTDEF(HS_Type)
   JGDI_MAP_OBJ(HS_name, HS_value)
   SGE_STRING(HS_name, CULL_PRIMARY_KEY | CULL_DEFAULT | CULL_SUBLIST)
   SGE_DOUBLE(HS_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(HSN)
   NAME("HS_name")
   NAME("HS_value")
NAMEEND
# 97 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_href_HR_L.h" 1
# 45 "../libs/sgeobj/sge_href_HR_L.h"
enum {
   HR_name = HR_LOWERBOUND
};

LISTDEF(HR_Type)
   JGDI_PRIMITIVE_OBJ(HR_name)
   SGE_HOST(HR_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
LISTEND

NAMEDEF(HRN)
   NAME("HR_name")
NAMEEND
# 98 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_id_ID_L.h" 1
# 45 "../libs/sgeobj/sge_id_ID_L.h"
enum {
   ID_str = ID_LOWERBOUND,
   ID_ja_structure,
   ID_action,
   ID_force,
   ID_user_list
};

LISTDEF(ID_Type)
   SGE_STRING(ID_str, CULL_DEFAULT)
   SGE_LIST(ID_ja_structure, RN_Type, CULL_DEFAULT)
   SGE_ULONG(ID_action, CULL_DEFAULT)
   SGE_ULONG(ID_force, CULL_DEFAULT)
   SGE_LIST(ID_user_list, ST_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(IDN)
   NAME("ID_str")
   NAME("ID_ja_structure")
   NAME("ID_action")
   NAME("ID_force")
   NAME("ID_user_list")
NAMEEND
# 99 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_japi_JJ_L.h" 1
# 68 "../libs/sgeobj/sge_japi_JJ_L.h"
enum {
   JJ_jobid = JJ_LOWERBOUND,
   JJ_type,
   JJ_finished_tasks,
   JJ_not_yet_finished_ids,
   JJ_started_task_ids
};

LISTDEF(JJ_Type)
   SGE_ULONG(JJ_jobid, CULL_HASH | CULL_UNIQUE)
   SGE_ULONG(JJ_type, CULL_DEFAULT)
   SGE_LIST(JJ_finished_tasks, JJAT_Type, CULL_DEFAULT)
   SGE_LIST(JJ_not_yet_finished_ids, RN_Type, CULL_DEFAULT)
   SGE_LIST(JJ_started_task_ids, RN_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(JJN)
   NAME("JJ_jobid")
   NAME("JJ_type")
   NAME("JJ_finished_tasks")
   NAME("JJ_not_yet_finished_ids")
   NAME("JJ_started_task_ids")
NAMEEND
# 100 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_japi_JJAT_L.h" 1
# 65 "../libs/sgeobj/sge_japi_JJAT_L.h"
enum {
   JJAT_task_id = JJAT_LOWERBOUND,
   JJAT_stat,
   JJAT_rusage,
   JJAT_failed_text
};

LISTDEF(JJAT_Type)
   SGE_ULONG(JJAT_task_id, CULL_DEFAULT)
   SGE_ULONG(JJAT_stat, CULL_DEFAULT)
   SGE_MAP(JJAT_rusage, UA_Type, CULL_DEFAULT)
   SGE_STRING(JJAT_failed_text, CULL_DEFAULT)
LISTEND

NAMEDEF(JJATN)
   NAME("JJAT_task_id")
   NAME("JJAT_stat")
   NAME("JJAT_rusage")
   NAME("JJAT_failed_text")
NAMEEND
# 101 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_japi_NSV_L.h" 1
# 59 "../libs/sgeobj/sge_japi_NSV_L.h"
enum {
   NSV_name = NSV_LOWERBOUND,
   NSV_strings
};

LISTDEF(NSV_Type)
   SGE_STRING(NSV_name, CULL_DEFAULT)
   SGE_LIST(NSV_strings, ST_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(NSVN)
   NAME("NSV_name")
   NAME("NSV_strings")
NAMEEND
# 102 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ja_task_JAT_L.h" 1
# 203 "../libs/sgeobj/sge_ja_task_JAT_L.h"
enum {
   JAT_task_number = JAT_LOWERBOUND,
   JAT_status,
   JAT_start_time,
   JAT_end_time,
   JAT_hold,
   JAT_granted_pe,

   JAT_job_restarted,
   JAT_granted_destin_identifier_list,
   JAT_master_queue,
   JAT_state,
   JAT_pvm_ckpt_pid,

   JAT_pending_signal,
   JAT_pending_signal_delivery_time,
   JAT_pid,
   JAT_osjobid,
   JAT_usage_list,

   JAT_scaled_usage_list,
   JAT_reported_usage_list,
   JAT_fshare,
   JAT_tix,
   JAT_oticket,

   JAT_fticket,
   JAT_sticket,
   JAT_share,
   JAT_suitable,
   JAT_task_list,
   JAT_finished_task_list,

   JAT_previous_usage_list,

   JAT_pe_object,
   JAT_next_pe_task_id,

   JAT_stop_initiate_time,
   JAT_prio,
   JAT_ntix,

   JAT_wallclock_limit,

   JAT_message_list
};

LISTDEF(JAT_Type)
   JGDI_OBJ(JobTask)
   JGDI_EVENT_OBJ(ADD(sgeE_JATASK_ADD) | MODIFY(sgeE_JATASK_MOD) | DELETE(sgeE_JATASK_DEL))
   SGE_ULONG(JAT_task_number, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_ULONG(JAT_status, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_start_time, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_end_time, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_hold, CULL_DEFAULT | CULL_SUBLIST)
   SGE_STRING(JAT_granted_pe, CULL_DEFAULT | CULL_SUBLIST)

   SGE_ULONG(JAT_job_restarted, CULL_DEFAULT | CULL_SUBLIST)
   SGE_LIST(JAT_granted_destin_identifier_list, JG_Type, CULL_DEFAULT | CULL_SUBLIST)
   SGE_STRING(JAT_master_queue, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_state, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_pvm_ckpt_pid, CULL_DEFAULT | CULL_SUBLIST)

   SGE_ULONG(JAT_pending_signal, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_pending_signal_delivery_time, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_pid, CULL_DEFAULT | CULL_SUBLIST)
   SGE_STRING(JAT_osjobid, CULL_DEFAULT | CULL_SUBLIST)
   SGE_MAP(JAT_usage_list, UA_Type, CULL_DEFAULT | CULL_SUBLIST)

   SGE_MAP(JAT_scaled_usage_list, UA_Type, CULL_DEFAULT | CULL_SUBLIST)
   SGE_MAP(JAT_reported_usage_list, UA_Type, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_fshare, CULL_DEFAULT | CULL_SUBLIST)
   SGE_DOUBLE(JAT_tix, CULL_DEFAULT | CULL_SUBLIST)
   SGE_DOUBLE(JAT_oticket, CULL_DEFAULT | CULL_SUBLIST)

   SGE_DOUBLE(JAT_fticket, CULL_DEFAULT | CULL_SUBLIST)
   SGE_DOUBLE(JAT_sticket, CULL_DEFAULT | CULL_SUBLIST)
   SGE_DOUBLE(JAT_share, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JAT_suitable, CULL_DEFAULT)
   SGE_LIST(JAT_task_list, PET_Type, CULL_DEFAULT | CULL_SUBLIST)
   SGE_LIST(JAT_finished_task_list, FPET_Type, CULL_DEFAULT | CULL_SUBLIST)

   SGE_MAP(JAT_previous_usage_list, UA_Type, CULL_DEFAULT)

   SGE_OBJECT(JAT_pe_object, PE_Type, CULL_DEFAULT)
   SGE_ULONG(JAT_next_pe_task_id, CULL_DEFAULT)

   SGE_ULONG(JAT_stop_initiate_time, CULL_DEFAULT | CULL_SUBLIST)
   SGE_DOUBLE(JAT_prio, CULL_DEFAULT)
   SGE_DOUBLE(JAT_ntix, CULL_DEFAULT)

   SGE_ULONG(JAT_wallclock_limit, CULL_DEFAULT | CULL_SPOOL)

   SGE_LIST(JAT_message_list, QIM_Type, CULL_DEFAULT | CULL_SPOOL)
LISTEND

NAMEDEF(JATN)
   NAME("JAT_task_number")
   NAME("JAT_status")
   NAME("JAT_start_time")
   NAME("JAT_end_time")
   NAME("JAT_hold")
   NAME("JAT_granted_pe")
   NAME("JAT_job_restarted")
   NAME("JAT_granted_destin_identifier_list")
   NAME("JAT_master_queue")
   NAME("JAT_state")
   NAME("JAT_pvm_ckpt_pid")
   NAME("JAT_pending_signal")
   NAME("JAT_pending_signal_delivery_time")
   NAME("JAT_pid")
   NAME("JAT_osjobid")
   NAME("JAT_usage_list")
   NAME("JAT_scaled_usage_list")
   NAME("JAT_reported_usage_list")
   NAME("JAT_fshare")

   NAME("JAT_tix")
   NAME("JAT_oticket")
   NAME("JAT_fticket")
   NAME("JAT_sticket")
   NAME("JAT_share")

   NAME("JAT_suitable")
   NAME("JAT_task_list")
   NAME("JAT_finished_task_list")
   NAME("JAT_previous_usage_list")

   NAME("JAT_pe_object")
   NAME("JAT_next_pe_task_id")

   NAME("JAT_stop_initiate_time")
   NAME("JAT_prio")
   NAME("JAT_ntix")

   NAME("JAT_wallclock_limit")

   NAME("JAT_message_list")
NAMEEND
# 103 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_job_AT_L.h" 1
# 45 "../libs/sgeobj/sge_job_AT_L.h"
enum {
   AT_account = AT_LOWERBOUND,
   AT_cell
};

LISTDEF(AT_Type)
   SGE_STRING(AT_account, CULL_DEFAULT)
   SGE_STRING(AT_cell, CULL_DEFAULT )
LISTEND

NAMEDEF(ATN)
   NAME("AT_account")
   NAME("AT_cell")
NAMEEND
# 104 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_job_JB_L.h" 1
# 426 "../libs/sgeobj/sge_job_JB_L.h"
enum {
   JB_job_number = JB_LOWERBOUND,
   JB_job_name,
   JB_version,
   JB_jid_request_list,
   JB_jid_predecessor_list,
   JB_jid_successor_list,
   JB_ja_ad_request_list,
   JB_ja_ad_predecessor_list,
   JB_ja_ad_successor_list,
   JB_session,

   JB_project,
   JB_department,

   JB_directive_prefix,
   JB_exec_file,
   JB_script_file,
   JB_script_size,
   JB_script_ptr,

   JB_submission_time,
   JB_execution_time,
   JB_deadline,

   JB_owner,
   JB_uid,
   JB_group,
   JB_gid,
   JB_account,

   JB_cwd,
   JB_notify,
   JB_type,
   JB_reserve,
   JB_priority,
   JB_jobshare,
   JB_shell_list,
   JB_verify,
   JB_env_list,
   JB_context,
   JB_job_args,

   JB_checkpoint_attr,
   JB_checkpoint_name,
   JB_checkpoint_object,
   JB_checkpoint_interval,
   JB_restart,

   JB_stdout_path_list,
   JB_stderr_path_list,
   JB_stdin_path_list,
   JB_merge_stderr,

   JB_hard_resource_list,
   JB_soft_resource_list,
   JB_hard_queue_list,
   JB_soft_queue_list,

   JB_mail_options,
   JB_mail_list,

   JB_pe,
   JB_pe_range,
   JB_master_hard_queue_list,

   JB_tgt,
   JB_cred,

   JB_ja_structure,
   JB_ja_n_h_ids,
   JB_ja_u_h_ids,
   JB_ja_s_h_ids,
   JB_ja_o_h_ids,
   JB_ja_a_h_ids,
   JB_ja_z_ids,
   JB_ja_template,
   JB_ja_tasks,

   JB_host,
   JB_category,

   JB_user_list,
   JB_job_identifier_list,
   JB_verify_suitable_queues,
   JB_soft_wallclock_gmt,
   JB_hard_wallclock_gmt,
   JB_override_tickets,
   JB_qs_args,
   JB_path_aliases,
   JB_urg,
   JB_nurg,
   JB_nppri,
   JB_rrcontr,
   JB_dlcontr,
   JB_wtcontr,
   JB_ar,
   JB_pty,
   JB_ja_task_concurrency,
   JB_binding
};





LISTDEF(JB_Type)
   JGDI_ROOT_OBJ(Job, SGE_JB_LIST, ADD | MODIFY| DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_JOB_ADD) | MODIFY(sgeE_JOB_MOD) | DELETE(sgeE_JOB_DEL) | GET_LIST(sgeE_JOB_LIST))
   SGE_ULONG(JB_job_number, CULL_PRIMARY_KEY | CULL_HASH | CULL_SPOOL)
   SGE_STRING(JB_job_name, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_version, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_LIST(JB_jid_request_list, JRE_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_jid_predecessor_list, JRE_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_LIST(JB_jid_successor_list, JRE_Type, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_LIST(JB_ja_ad_request_list, JRE_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_ja_ad_predecessor_list, JRE_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_LIST(JB_ja_ad_successor_list, JRE_Type, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_STRING(JB_session, CULL_DEFAULT | CULL_SPOOL)

   SGE_STRING(JB_project, CULL_DEFAULT | CULL_SPOOL)
   SGE_STRING(JB_department, CULL_DEFAULT | CULL_SPOOL)

   SGE_STRING(JB_directive_prefix, CULL_DEFAULT | CULL_SPOOL)
   SGE_STRING(JB_exec_file, CULL_DEFAULT | CULL_SPOOL)
   SGE_STRING(JB_script_file, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_script_size, CULL_DEFAULT | CULL_SPOOL)
   SGE_STRING(JB_script_ptr, CULL_DEFAULT)

   SGE_ULONG(JB_submission_time, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(JB_execution_time, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_deadline, CULL_DEFAULT | CULL_SPOOL)

   SGE_STRING(JB_owner, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(JB_uid, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_STRING(JB_group, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(JB_gid, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_STRING(JB_account, CULL_DEFAULT | CULL_SPOOL)

   SGE_STRING(JB_cwd, CULL_DEFAULT | CULL_SPOOL)
   SGE_BOOL(JB_notify, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_type, CULL_DEFAULT | CULL_SPOOL)
   SGE_BOOL(JB_reserve, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_priority, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_jobshare, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_shell_list, PN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_verify, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_MAP(JB_env_list, VA_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_MAP(JB_context, VA_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_job_args, ST_Type, CULL_DEFAULT | CULL_SPOOL)

   SGE_ULONG(JB_checkpoint_attr, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_STRING(JB_checkpoint_name, CULL_DEFAULT | CULL_SPOOL)
   SGE_OBJECT(JB_checkpoint_object, CK_Type, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(JB_checkpoint_interval, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(JB_restart, CULL_DEFAULT | CULL_SPOOL)

   SGE_LIST(JB_stdout_path_list, PN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_stderr_path_list, PN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_stdin_path_list, PN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_BOOL(JB_merge_stderr, CULL_DEFAULT | CULL_SPOOL)

   SGE_LIST(JB_hard_resource_list, CE_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_soft_resource_list, CE_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_hard_queue_list, QR_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_soft_queue_list, QR_Type, CULL_DEFAULT | CULL_SPOOL)

   SGE_ULONG(JB_mail_options, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_mail_list, MR_Type, CULL_DEFAULT | CULL_SPOOL)

   SGE_STRING(JB_pe, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_pe_range, RN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_master_hard_queue_list, QR_Type, CULL_DEFAULT | CULL_SPOOL)

   SGE_STRING(JB_tgt, CULL_DEFAULT)
   SGE_STRING(JB_cred, CULL_DEFAULT)

   SGE_LIST(JB_ja_structure, RN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_ja_n_h_ids, RN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_ja_u_h_ids, RN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_ja_s_h_ids, RN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_ja_o_h_ids, RN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_ja_a_h_ids, RN_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_ja_z_ids, RN_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)
   SGE_LIST(JB_ja_template, JAT_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_ja_tasks, JAT_Type, CULL_DEFAULT | CULL_SPOOL)

   SGE_HOST(JB_host, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_REF(JB_category, CT_Type, CULL_DEFAULT)

   SGE_LIST(JB_user_list, ST_Type, CULL_DEFAULT)
   SGE_LIST(JB_job_identifier_list, ID_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(JB_verify_suitable_queues, CULL_DEFAULT)
   SGE_ULONG(JB_soft_wallclock_gmt, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)
   SGE_ULONG(JB_hard_wallclock_gmt, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)
   SGE_ULONG(JB_override_tickets, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_qs_args, ST_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_LIST(JB_path_aliases, PA_Type, CULL_DEFAULT | CULL_SPOOL)
   SGE_DOUBLE(JB_urg, CULL_DEFAULT)
   SGE_DOUBLE(JB_nurg, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_DOUBLE(JB_nppri, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_DOUBLE(JB_rrcontr, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_DOUBLE(JB_dlcontr, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_DOUBLE(JB_wtcontr, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(JB_ar, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_pty, CULL_DEFAULT | CULL_SPOOL)
   SGE_ULONG(JB_ja_task_concurrency, CULL_DEFAULT | CULL_SPOOL)
   SGE_LIST(JB_binding, BN_Type, CULL_DEFAULT | CULL_SPOOL)



LISTEND

NAMEDEF(JBN)
   NAME("JB_job_number")
   NAME("JB_job_name")
   NAME("JB_version")
   NAME("JB_jid_request_list")
   NAME("JB_jid_predecessor_list")
   NAME("JB_jid_successor_list")
   NAME("JB_ja_ad_request_list")
   NAME("JB_ja_ad_predecessor_list")
   NAME("JB_ja_ad_successor_list")
   NAME("JB_session")

   NAME("JB_project")
   NAME("JB_department")

   NAME("JB_directive_prefix")
   NAME("JB_exec_file")
   NAME("JB_script_file")
   NAME("JB_script_size")
   NAME("JB_script_ptr")

   NAME("JB_submission_time")
   NAME("JB_execution_time")
   NAME("JB_deadline")

   NAME("JB_owner")
   NAME("JB_uid")
   NAME("JB_group")
   NAME("JB_gid")
   NAME("JB_account")

   NAME("JB_cwd")
   NAME("JB_notify")
   NAME("JB_type")
   NAME("JB_reserve")
   NAME("JB_priority")
   NAME("JB_jobshare")
   NAME("JB_shell_list")
   NAME("JB_verify")
   NAME("JB_env_list")
   NAME("JB_context")
   NAME("JB_job_args")

   NAME("JB_checkpoint_attr")
   NAME("JB_checkpoint_name")
   NAME("JB_checkpoint_object")
   NAME("JB_checkpoint_interval")
   NAME("JB_restart")

   NAME("JB_stdout_path_list")
   NAME("JB_stderr_path_list")
   NAME("JB_stdin_path_list")
   NAME("JB_merge_stderr")

   NAME("JB_hard_resource_list")
   NAME("JB_soft_resource_list")
   NAME("JB_hard_queue_list")
   NAME("JB_soft_queue_list")

   NAME("JB_mail_options")
   NAME("JB_mail_list")

   NAME("JB_pe")
   NAME("JB_pe_range")
   NAME("JB_master_hard_queue_list")

   NAME("JB_tgt")
   NAME("JB_cred")

   NAME("JB_ja_structure")
   NAME("JB_ja_n_h_ids")
   NAME("JB_ja_u_h_ids")
   NAME("JB_ja_s_h_ids")
   NAME("JB_ja_o_h_ids")
   NAME("JB_ja_a_h_ids")
   NAME("JB_ja_z_ids")
   NAME("JB_ja_template")
   NAME("JB_ja_tasks")

   NAME("JB_host")
   NAME("JB_category")

   NAME("JB_user_list")
   NAME("JB_job_identifier_list")
   NAME("JB_verify_suitable_queues")
   NAME("JB_soft_wallclock_gmt")
   NAME("JB_hard_wallclock_gmt")
   NAME("JB_override_tickets")
   NAME("JB_qs_args")
   NAME("JB_path_aliases")
   NAME("JB_urg")
   NAME("JB_nurg")
   NAME("JB_nppri")
   NAME("JB_rrcontr")
   NAME("JB_dlcontr")
   NAME("JB_wtcontr")
   NAME("JB_ar")
   NAME("JB_pty")
   NAME("JB_ja_task_concurrency")
   NAME("JB_binding")
NAMEEND
# 105 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_job_JG_L.h" 1
# 48 "../libs/sgeobj/sge_job_JG_L.h"
enum {
   JG_qname = JG_LOWERBOUND,
   JG_qversion,
   JG_qhostname,
   JG_slots,
   JG_queue,
   JG_tag_slave_job,
   JG_task_id_range,
   JG_ticket,
   JG_oticket,
   JG_fticket,
   JG_sticket,
   JG_jcoticket,
   JG_jcfticket,
   JG_processors
};

LISTDEF(JG_Type)
   SGE_STRING(JG_qname, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(JG_qversion, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_HOST(JG_qhostname, CULL_DEFAULT | CULL_HASH | CULL_SUBLIST)
   SGE_ULONG(JG_slots, CULL_DEFAULT | CULL_SUBLIST)
   SGE_OBJECT(JG_queue, QU_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN | CULL_JGDI_RO)
   SGE_ULONG(JG_tag_slave_job, CULL_DEFAULT | CULL_JGDI_HIDDEN)

   SGE_ULONG(JG_task_id_range, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(JG_ticket, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(JG_oticket, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(JG_fticket, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(JG_sticket, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(JG_jcoticket, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(JG_jcfticket, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_STRING(JG_processors, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF( JGN )
   NAME( "JG_qname" )
   NAME( "JG_qversion" )
   NAME( "JG_qhostname" )
   NAME( "JG_slots" )
   NAME( "JG_queue" )
   NAME( "JG_tag_slave_job" )
   NAME( "JG_task_id_range" )
   NAME( "JG_ticket" )
   NAME( "JG_oticket" )
   NAME( "JG_fticket" )
   NAME( "JG_sticket" )
   NAME( "JG_jcoticket" )
   NAME( "JG_jcfticket" )
   NAME( "JG_processors" )
NAMEEND
# 106 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_job_PN_L.h" 1
# 45 "../libs/sgeobj/sge_job_PN_L.h"
enum {
   PN_path = PN_LOWERBOUND,
   PN_host,
   PN_file_host,
   PN_file_staging
};

LISTDEF(PN_Type)
   JGDI_OBJ(PathName)
   SGE_STRING(PN_path, CULL_PRIMARY_KEY | CULL_DEFAULT | CULL_SUBLIST)
   SGE_HOST(PN_host, CULL_DEFAULT)
   SGE_HOST(PN_file_host, CULL_DEFAULT)
   SGE_BOOL(PN_file_staging, CULL_DEFAULT)
LISTEND

NAMEDEF(PNN)
   NAME("PN_path")
   NAME("PN_host")
   NAME("PN_file_host")
   NAME("PN_file_staging")
NAMEEND
# 107 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_job_ref_JRE_L.h" 1
# 45 "../libs/sgeobj/sge_job_ref_JRE_L.h"
enum {
   JRE_job_number = JRE_LOWERBOUND,
   JRE_job_name
};

LISTDEF(JRE_Type)
   JGDI_OBJ(JobReference)
   SGE_ULONG(JRE_job_number, CULL_PRIMARY_KEY | CULL_DEFAULT | CULL_SUBLIST)
   SGE_STRING(JRE_job_name, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(JREN)
   NAME("JRE_job_number")
   NAME("JRE_job_name")
NAMEEND
# 108 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_jsv_JSV_L.h" 1
# 84 "../libs/sgeobj/sge_jsv_JSV_L.h"
enum {
   JSV_name = JSV_LOWERBOUND,
   JSV_context,
   JSV_url,
   JSV_type,
   JSV_user,
   JSV_command,
   JSV_pid,
   JSV_in,
   JSV_out,
   JSV_err,
   JSV_has_to_restart,
   JSV_last_mod,
   JSV_send_env,
   JSV_old_job,
   JSV_new_job,
   JSV_restart,
   JSV_accept,
   JSV_done,
   JSV_soft_shutdown,
   JSV_test,
   JSV_test_pos,
   JSV_result
};

LISTDEF(JSV_Type)
   SGE_STRING(JSV_name, CULL_DEFAULT)
   SGE_STRING(JSV_context, CULL_DEFAULT)



   SGE_STRING(JSV_url, CULL_DEFAULT)
   SGE_STRING(JSV_type, CULL_DEFAULT)
   SGE_STRING(JSV_user, CULL_DEFAULT)
   SGE_STRING(JSV_command, CULL_DEFAULT)
   SGE_STRING(JSV_pid, CULL_DEFAULT)
   SGE_REF(JSV_in, SGE_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(JSV_out, SGE_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(JSV_err, SGE_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_BOOL(JSV_has_to_restart, CULL_DEFAULT)
   SGE_ULONG(JSV_last_mod, CULL_DEFAULT)

   SGE_BOOL(JSV_send_env, CULL_DEFAULT)

   SGE_REF(JSV_old_job, JB_Type, CULL_DEFAULT)
   SGE_REF(JSV_new_job, JB_Type, CULL_DEFAULT)
   SGE_BOOL(JSV_restart, CULL_DEFAULT)
   SGE_BOOL(JSV_accept, CULL_DEFAULT)
   SGE_BOOL(JSV_done, CULL_DEFAULT)
   SGE_BOOL(JSV_soft_shutdown, CULL_DEFAULT)
   SGE_BOOL(JSV_test, CULL_DEFAULT)
   SGE_ULONG(JSV_test_pos, CULL_DEFAULT)
   SGE_STRING(JSV_result, CULL_DEFAULT)
LISTEND

NAMEDEF(JSVN)
   NAME("JSV_name")
   NAME("JSV_context")
   NAME("JSV_url")
   NAME("JSV_type")
   NAME("JSV_user")
   NAME("JSV_command")
   NAME("JSV_pid")
   NAME("JSV_in")
   NAME("JSV_out")
   NAME("JSV_err")
   NAME("JSV_has_to_restart")
   NAME("JSV_last_mod")
   NAME("JSV_send_env")
   NAME("JSV_old_job")
   NAME("JSV_new_job")
   NAME("JSV_restart")
   NAME("JSV_accept")
   NAME("JSV_done")
   NAME("JSV_soft_shutdown")
   NAME("JSV_test")
   NAME("JSV_test_pos")
   NAME("JSV_result")
NAMEEND
# 109 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_krb_KRB_L.h" 1
# 49 "../libs/sgeobj/sge_krb_KRB_L.h"
enum {
   KRB_commproc=KRB_LOWERBOUND,
   KRB_id,
   KRB_host,
   KRB_timestamp,
   KRB_auth_context,
   KRB_tgt_list
};

LISTDEF( KRB_Type )
   SGE_STRING(KRB_commproc, CULL_DEFAULT)
   SGE_ULONG(KRB_id, CULL_DEFAULT)
   SGE_HOST(KRB_host, CULL_DEFAULT)
   SGE_ULONG(KRB_timestamp, CULL_DEFAULT)
   SGE_STRING(KRB_auth_context, CULL_DEFAULT)
   SGE_LIST(KRB_tgt_list, KTGT_Type, CULL_DEFAULT)
LISTEND

NAMEDEF( KRBN )
    NAME( "KRB_commproc" )
    NAME( "KRB_id" )
    NAME( "KRB_host" )
    NAME( "KRB_timestamp" )
    NAME( "KRB_auth_context" )
    NAME( "KRB_tgt_list" )
NAMEEND
# 110 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_krb_KTGT_L.h" 1
# 49 "../libs/sgeobj/sge_krb_KTGT_L.h"
enum {
    KTGT_id=KTGT_LOWERBOUND,
    KTGT_tgt
};

LISTDEF( KTGT_Type )
   SGE_ULONG(KTGT_id, CULL_DEFAULT)
   SGE_STRING(KTGT_tgt, CULL_DEFAULT)
LISTEND

NAMEDEF( KTGTN )
   NAME( "KTGT_id" )
   NAME( "KTGT_tgt" )
NAMEEND
# 111 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_loadsensor_LS_L.h" 1
# 88 "../libs/sgeobj/sge_loadsensor_LS_L.h"
enum {
   LS_name = LS_LOWERBOUND,
   LS_command,
   LS_pid,
   LS_in,
   LS_out,
   LS_err,
   LS_has_to_restart,
   LS_tag,
   LS_incomplete,
   LS_complete,
   LS_last_mod
};

LISTDEF(LS_Type)
   SGE_STRING(LS_name, CULL_DEFAULT)
   SGE_STRING(LS_command, CULL_DEFAULT)
   SGE_STRING(LS_pid, CULL_DEFAULT)
   SGE_REF(LS_in, SGE_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(LS_out, SGE_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(LS_err, SGE_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_BOOL(LS_has_to_restart, CULL_DEFAULT)
   SGE_ULONG(LS_tag, CULL_DEFAULT)
   SGE_LIST(LS_incomplete, LR_Type, CULL_DEFAULT)
   SGE_LIST(LS_complete, LR_Type, CULL_DEFAULT)
   SGE_ULONG(LS_last_mod, CULL_DEFAULT)
LISTEND

NAMEDEF(LSN)
   NAME("LS_name")
   NAME("LS_command")
   NAME("LS_pid")
   NAME("LS_in")
   NAME("LS_out")
   NAME("LS_err")
   NAME("LS_has_to_restart")
   NAME("LS_tag")
   NAME("LS_incomplete")
   NAME("LS_complete")
   NAME("LS_last_mod")
NAMEEND
# 112 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_mailrec_MR_L.h" 1
# 45 "../libs/sgeobj/sge_mailrec_MR_L.h"
enum {
   MR_user = MR_LOWERBOUND,
   MR_host
};

LISTDEF(MR_Type)
   JGDI_OBJ(MailReceiver)
   SGE_STRING(MR_user, CULL_PRIMARY_KEY | CULL_DEFAULT | CULL_SUBLIST)
   SGE_HOST(MR_host, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(MRN)
   NAME("MR_user")
   NAME("MR_host")
NAMEEND
# 113 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_manop_UM_L.h" 1
# 48 "../libs/sgeobj/sge_manop_UM_L.h"
enum {
   UM_name = UM_LOWERBOUND
};

LISTDEF(UM_Type)
   JGDI_ROOT_OBJ(Manager, SGE_UM_LIST, ADD | GET | DELETE | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_MANAGER_ADD) | MODIFY(sgeE_MANAGER_MOD) | DELETE(sgeE_MANAGER_DEL) | GET_LIST(sgeE_MANAGER_LIST))
   SGE_STRING(UM_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF)
LISTEND

NAMEDEF(UMN)
   NAME("UM_name")
NAMEEND
# 114 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_manop_UO_L.h" 1
# 48 "../libs/sgeobj/sge_manop_UO_L.h"
enum {
   UO_name = UO_LOWERBOUND
};

LISTDEF(UO_Type)
   JGDI_ROOT_OBJ(Operator, SGE_UO_LIST, ADD | GET | DELETE | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_OPERATOR_ADD) | MODIFY(sgeE_OPERATOR_MOD) | DELETE(sgeE_OPERATOR_DEL) | GET_LIST(sgeE_OPERATOR_LIST))
   SGE_STRING(UO_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF)
LISTEND

NAMEDEF(UON)
   NAME("UO_name")
NAMEEND
# 115 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_mesobj_QIM_L.h" 1
# 48 "../libs/sgeobj/sge_mesobj_QIM_L.h"
enum {
   QIM_type = QIM_LOWERBOUND,
   QIM_message
};

LISTDEF(QIM_Type)
   JGDI_OBJ(QueueInstanceMessage)
   SGE_ULONG(QIM_type, CULL_DEFAULT | CULL_SPOOL)
   SGE_STRING(QIM_message, CULL_DEFAULT | CULL_SPOOL)
LISTEND

NAMEDEF(QIMN)
   NAME("QIM_type")
   NAME("QIM_message")
NAMEEND
# 116 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_message_SME_L.h" 1
# 47 "../libs/sgeobj/sge_message_SME_L.h"
enum {
   SME_message_list = SME_LOWERBOUND,
   SME_global_message_list
};

LISTDEF(SME_Type)
   JGDI_ROOT_OBJ(JobSchedulingInfo, SGE_SME_LIST, GET )
   JGDI_EVENT_OBJ(ADD(sgeE_JOB_SCHEDD_INFO_ADD) | MODIFY(sgeE_JOB_SCHEDD_INFO_MOD) | DELETE(sgeE_JOB_SCHEDD_INFO_DEL) | GET_LIST(sgeE_JOB_SCHEDD_INFO_LIST))
   SGE_LIST(SME_message_list, MES_Type, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_LIST(SME_global_message_list, MES_Type, CULL_DEFAULT | CULL_JGDI_RO)
LISTEND

NAMEDEF(SMEN)
   NAME("SME_message_list")
   NAME("SME_global_message_list")
NAMEEND
# 117 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_message_MES_L.h" 1
# 47 "../libs/sgeobj/sge_message_MES_L.h"
enum {
   MES_job_number_list = MES_LOWERBOUND,
   MES_message_number,
   MES_message
};

LISTDEF(MES_Type)
   JGDI_OBJ(JobSchedulingMessage)
   SGE_LIST(MES_job_number_list, ULNG_Type, CULL_DEFAULT)
   SGE_ULONG(MES_message_number, CULL_DEFAULT)
   SGE_STRING(MES_message, CULL_DEFAULT)
LISTEND

NAMEDEF(MESN)
   NAME("MES_job_number_list")
   NAME("MES_message_number")
   NAME("MES_message")
NAMEEND
# 118 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_multi_MA_L.h" 1
# 45 "../libs/sgeobj/sge_multi_MA_L.h"
enum {
   MA_id = MA_LOWERBOUND,
   MA_objects,
   MA_answers
};

LISTDEF(MA_Type)
   SGE_ULONG(MA_id, CULL_DEFAULT)
   SGE_LIST(MA_objects, CULL_ANY_SUBTYPE, CULL_DEFAULT)

   SGE_LIST(MA_answers, AN_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(MAN)
   NAME("MA_id")
   NAME("MA_objects")
   NAME("MA_answers")
NAMEEND
# 119 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_order_OR_L.h" 1
# 45 "../libs/sgeobj/sge_order_OR_L.h"
enum {
   OR_type = OR_LOWERBOUND,
   OR_job_number,
   OR_ja_task_number,
   OR_job_version,
   OR_queuelist,
   OR_ticket,
   OR_joker,
   OR_pe,
   OR_ntix,
   OR_prio
};

LISTDEF(OR_Type)
   SGE_ULONG(OR_type, CULL_DEFAULT)
   SGE_ULONG(OR_job_number, CULL_DEFAULT)
   SGE_ULONG(OR_ja_task_number, CULL_DEFAULT)
   SGE_ULONG(OR_job_version, CULL_DEFAULT)
   SGE_LIST(OR_queuelist, OQ_Type, CULL_DEFAULT)
   SGE_DOUBLE(OR_ticket, CULL_DEFAULT)
   SGE_LIST(OR_joker, CULL_ANY_SUBTYPE, CULL_DEFAULT)
# 77 "../libs/sgeobj/sge_order_OR_L.h"
   SGE_STRING(OR_pe, CULL_DEFAULT)
   SGE_DOUBLE(OR_ntix, CULL_DEFAULT)
   SGE_DOUBLE(OR_prio, CULL_DEFAULT)
LISTEND

NAMEDEF(ORN)
     NAME("OR_type")
     NAME("OR_job_number")
     NAME("OR_ja_task_number")
     NAME("OR_job_version")
     NAME("OR_queuelist")
     NAME("OR_ticket")
     NAME("OR_joker")
     NAME("OR_pe")
     NAME("OR_ntix")
     NAME("OR_prio")
     NAMEEND
# 120 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_order_OQ_L.h" 1
# 46 "../libs/sgeobj/sge_order_OQ_L.h"
enum {
   OQ_slots = OQ_LOWERBOUND,
   OQ_dest_queue,
   OQ_dest_version,
   OQ_ticket,
   OQ_oticket,
   OQ_fticket,
   OQ_sticket
};

LISTDEF(OQ_Type)
   SGE_ULONG(OQ_slots, CULL_DEFAULT)
   SGE_STRING(OQ_dest_queue, CULL_DEFAULT)
   SGE_ULONG(OQ_dest_version, CULL_DEFAULT)
   SGE_DOUBLE(OQ_ticket, CULL_DEFAULT)
   SGE_DOUBLE(OQ_oticket, CULL_DEFAULT)
   SGE_DOUBLE(OQ_fticket, CULL_DEFAULT)
   SGE_DOUBLE(OQ_sticket, CULL_DEFAULT)
LISTEND

NAMEDEF(OQN)
   NAME("OQ_slots")
   NAME("OQ_dest_queue")
   NAME("OQ_dest_version")
   NAME("OQ_ticket")
   NAME("OQ_oticket")
   NAME("OQ_fticket")
   NAME("OQ_sticket")
NAMEEND
# 121 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_order_RTIC_L.h" 1
# 46 "../libs/sgeobj/sge_order_RTIC_L.h"
enum {
   RTIC_host = RTIC_LOWERBOUND,
   RTIC_tickets
};

LISTDEF(RTIC_Type)
   SGE_HOST(RTIC_host, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE)
   SGE_LIST(RTIC_tickets, OR_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(RTICN)
   NAME("RTIC_host")
   NAME("RTIC_tickets")
NAMEEND
# 122 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_pack_PACK_L.h" 1
# 43 "../libs/sgeobj/sge_pack_PACK_L.h"
enum {
   PACK_id = PACK_LOWERBOUND,

   PACK_compressed,

   PACK_string
};

LISTDEF( PACK_Type )
   SGE_ULONG(PACK_id, CULL_DEFAULT)

   SGE_BOOL(PACK_compressed, CULL_DEFAULT)

   SGE_STRING(PACK_string, CULL_DEFAULT)
LISTEND

NAMEDEF( PACKN )
   NAME ( "PACK_id")

   NAME ( "PACK_compressed")

   NAME ( "PACK_string")
NAMEEND
# 123 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_parse_SPA_L.h" 1
# 46 "../libs/sgeobj/sge_parse_SPA_L.h"
enum {
   SPA_number = SPA_LOWERBOUND,
   SPA_argtype,
   SPA_switch,
   SPA_switch_arg,
   SPA_occurrence,
   SPA_argval_lFloatT,
   SPA_argval_lDoubleT,
   SPA_argval_lUlongT,
   SPA_argval_lLongT,
   SPA_argval_lCharT,
   SPA_argval_lIntT,
   SPA_argval_lStringT,
   SPA_argval_lListT
};

LISTDEF(SPA_Type)
   SGE_ULONG(SPA_number, CULL_DEFAULT)
   SGE_ULONG(SPA_argtype, CULL_DEFAULT)
   SGE_STRING(SPA_switch, CULL_HASH)
   SGE_STRING(SPA_switch_arg, CULL_DEFAULT)
   SGE_ULONG(SPA_occurrence, CULL_DEFAULT)
   SGE_FLOAT(SPA_argval_lFloatT, CULL_DEFAULT)
   SGE_DOUBLE(SPA_argval_lDoubleT, CULL_DEFAULT)
   SGE_ULONG(SPA_argval_lUlongT, CULL_DEFAULT)
   SGE_LONG(SPA_argval_lLongT, CULL_DEFAULT)
   SGE_CHAR(SPA_argval_lCharT, CULL_DEFAULT)
   SGE_INT(SPA_argval_lIntT, CULL_DEFAULT)
   SGE_STRING(SPA_argval_lStringT, CULL_DEFAULT)
   SGE_LIST(SPA_argval_lListT, ST_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(SPAN)
   NAME("SPA_number")
   NAME("SPA_argtype")
   NAME("SPA_switch")
   NAME("SPA_switch_arg")
   NAME("SPA_occurrence")
   NAME("SPA_argval_lFloatT")
   NAME("SPA_argval_lDoubleT")
   NAME("SPA_argval_lUlongT")
   NAME("SPA_argval_lLongT")
   NAME("SPA_argval_lCharT")
   NAME("SPA_argval_lIntT")
   NAME("SPA_argval_lStringT")
   NAME("SPA_argval_lListT")
NAMEEND
# 124 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_path_alias_PA_L.h" 1
# 73 "../libs/sgeobj/sge_path_alias_PA_L.h"
enum {
   PA_origin = PA_LOWERBOUND,
   PA_submit_host,
   PA_exec_host,
   PA_translation
};

LISTDEF(PA_Type)
   JGDI_OBJ(PathAlias)
   SGE_STRING(PA_origin, CULL_PRIMARY_KEY | CULL_DEFAULT | CULL_SPOOL)
   SGE_HOST(PA_submit_host, CULL_DEFAULT | CULL_SPOOL)
   SGE_HOST(PA_exec_host, CULL_DEFAULT | CULL_SPOOL)
   SGE_STRING(PA_translation, CULL_DEFAULT | CULL_SPOOL)
LISTEND

NAMEDEF(PAN)
   NAME("PA_origin")
   NAME("PA_submit_host")
   NAME("PA_exec_host")
   NAME("PA_translation")
NAMEEND
# 125 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_pe_PE_L.h" 1
# 106 "../libs/sgeobj/sge_pe_PE_L.h"
enum {
   PE_name = PE_LOWERBOUND,
   PE_slots,
   PE_user_list,
   PE_xuser_list,
   PE_start_proc_args,
   PE_stop_proc_args,
   PE_allocation_rule,
   PE_control_slaves,
   PE_job_is_first_task,
   PE_resource_utilization,
   PE_urgency_slots,



   PE_accounting_summary
};


LISTDEF(PE_Type)
   JGDI_ROOT_OBJ(ParallelEnvironment, SGE_PE_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_PE_ADD) | MODIFY(sgeE_PE_MOD) | DELETE(sgeE_PE_DEL) | GET_LIST(sgeE_PE_LIST))
   SGE_STRING_D(PE_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF, "template")
   SGE_ULONG(PE_slots, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(PE_user_list, US_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(PE_xuser_list, US_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_STRING_D(PE_start_proc_args, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "/bin/true")
   SGE_STRING_D(PE_stop_proc_args, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "/bin/true")
   SGE_STRING_D(PE_allocation_rule, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "$pe_slots")
   SGE_BOOL_D(PE_control_slaves, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "FALSE")
   SGE_BOOL_D(PE_job_is_first_task, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "TRUE")
   SGE_LIST(PE_resource_utilization, RUE_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_STRING_D(PE_urgency_slots, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "min")



   SGE_BOOL_D(PE_accounting_summary, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "FALSE")
LISTEND

NAMEDEF(PEN)
   NAME("PE_name")
   NAME("PE_slots")
   NAME("PE_user_list")
   NAME("PE_xuser_list")
   NAME("PE_start_proc_args")
   NAME("PE_stop_proc_args")
   NAME("PE_allocation_rule")
   NAME("PE_control_slaves")
   NAME("PE_job_is_first_task")
   NAME("PE_resource_utilization")
   NAME("PE_urgency_slots")



   NAME("PE_accounting_summary")
NAMEEND
# 126 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_pe_task_FPET_L.h" 1
# 112 "../libs/sgeobj/sge_pe_task_FPET_L.h"
enum {
   PET_id = PET_LOWERBOUND,
   PET_name,

   PET_status,

   PET_granted_destin_identifier_list,

   PET_pid,
   PET_osjobid,
   PET_usage,
   PET_scaled_usage,
   PET_reported_usage,
   PET_previous_usage,

   PET_submission_time,
   PET_start_time,
   PET_end_time,

   PET_cwd,
   PET_path_aliases,
   PET_environment,

   PET_do_contact
};

LISTDEF(PET_Type)
   JGDI_OBJ(PETask)
   JGDI_EVENT_OBJ(ADD(sgeE_PETASK_ADD) | DELETE(sgeE_PETASK_DEL))
   SGE_STRING(PET_id, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_STRING(PET_name, CULL_DEFAULT | CULL_SUBLIST)

   SGE_ULONG(PET_status, CULL_DEFAULT | CULL_SUBLIST)

   SGE_LIST(PET_granted_destin_identifier_list, JG_Type, CULL_DEFAULT | CULL_SUBLIST)

   SGE_ULONG(PET_pid, CULL_DEFAULT)
   SGE_STRING(PET_osjobid, CULL_DEFAULT)
   SGE_MAP(PET_usage, UA_Type, CULL_DEFAULT | CULL_SUBLIST)
   SGE_MAP(PET_scaled_usage, UA_Type, CULL_DEFAULT | CULL_SUBLIST)
   SGE_MAP(PET_reported_usage, UA_Type, CULL_DEFAULT | CULL_SUBLIST)
   SGE_MAP(PET_previous_usage, UA_Type, CULL_DEFAULT)

   SGE_ULONG(PET_submission_time, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(PET_start_time, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(PET_end_time, CULL_DEFAULT | CULL_SUBLIST)

   SGE_STRING(PET_cwd, CULL_DEFAULT | CULL_SUBLIST)
   SGE_LIST(PET_path_aliases, PA_Type, CULL_DEFAULT)
   SGE_MAP(PET_environment, VA_Type, CULL_DEFAULT)
   SGE_BOOL(PET_do_contact, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(PETN)
   NAME("PET_id")
   NAME("PET_name")

   NAME("PET_status")

   NAME("PET_granted_destin_identifier_list")

   NAME("PET_pid")
   NAME("PET_osjobid")
   NAME("PET_usage")
   NAME("PET_scaled_usage")
   NAME("PET_reported_usage")
   NAME("PET_previous_usage")

   NAME("PET_submission_time")
   NAME("PET_start_time")
   NAME("PET_end_time")

   NAME("PET_cwd")
   NAME("PET_path_aliases")
   NAME("PET_environment")
   NAME("PET_do_contact")
NAMEEND
# 227 "../libs/sgeobj/sge_pe_task_FPET_L.h"
enum {
   PETR_jobid = PETR_LOWERBOUND,
   PETR_jataskid,
   PETR_queuename,
   PETR_owner,
   PETR_cwd,
   PETR_path_aliases,
   PETR_environment,
   PETR_submission_time
};

LISTDEF(PETR_Type)
   SGE_ULONG(PETR_jobid, CULL_DEFAULT)
   SGE_ULONG(PETR_jataskid, CULL_DEFAULT)
   SGE_STRING(PETR_queuename, CULL_DEFAULT)
   SGE_STRING(PETR_owner, CULL_DEFAULT)
   SGE_STRING(PETR_cwd, CULL_DEFAULT)
   SGE_LIST(PETR_path_aliases, PA_Type, CULL_DEFAULT)
   SGE_MAPLIST(PETR_environment, VA_Type, CULL_DEFAULT)
   SGE_ULONG(PETR_submission_time, CULL_DEFAULT)
LISTEND


NAMEDEF(PETRN)
   NAME("PETR_jobid")
   NAME("PETR_jataskid")
   NAME("PETR_queuename")
   NAME("PETR_owner")
   NAME("PETR_cwd")
   NAME("PETR_path_aliases")
   NAME("PETR_environment")
   NAME("PETR_submission_time")
NAMEEND
# 272 "../libs/sgeobj/sge_pe_task_FPET_L.h"
enum {
   FPET_id = FPET_LOWERBOUND
};

LISTDEF(FPET_Type)
   SGE_STRING(FPET_id, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
LISTEND

NAMEDEF(FPETN)
   NAME("FPET_id")
NAMEEND
# 127 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_pe_task_PET_L.h" 1
# 128 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_pe_task_PETR_L.h" 1
# 129 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_permission_PERM_L.h" 1
# 93 "../libs/sgeobj/sge_permission_PERM_L.h"
enum {
   PERM_manager = PERM_LOWERBOUND,
   PERM_operator,
   PERM_req_host,
   PERM_req_username,
   PERM_sge_username
};

LISTDEF(PERM_Type)
   SGE_ULONG(PERM_manager, CULL_DEFAULT)
   SGE_ULONG(PERM_operator, CULL_DEFAULT)
   SGE_HOST(PERM_req_host, CULL_DEFAULT)
   SGE_STRING(PERM_req_username, CULL_DEFAULT)
   SGE_STRING(PERM_sge_username, CULL_DEFAULT)
LISTEND

NAMEDEF(PERMN)
   NAME("PERM_manager")
   NAME("PERM_operator")
   NAME("PERM_req_host")
   NAME("PERM_req_username")
   NAME("PERM_sge_username")
NAMEEND
# 130 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_pref_PREF_L.h" 1
# 48 "../libs/sgeobj/sge_pref_PREF_L.h"
enum {
   PREF_job_filter_resources = PREF_LOWERBOUND,
   PREF_job_filter_owners,
   PREF_job_filter_fields,
   PREF_job_filter_compact,
   PREF_queue_filter_resources,
   PREF_queue_filter_pe,
   PREF_queue_filter_user,
   PREF_queue_filter_q,
   PREF_queue_filter_state,
   PREF_ar_filter_fields
};

LISTDEF(PREF_Type)

   SGE_LIST(PREF_job_filter_resources, CE_Type, CULL_DEFAULT)
   SGE_LIST(PREF_job_filter_owners, ST_Type, CULL_DEFAULT)
   SGE_LIST(PREF_job_filter_fields, ST_Type, CULL_DEFAULT)
   SGE_BOOL(PREF_job_filter_compact, CULL_DEFAULT)
   SGE_LIST(PREF_queue_filter_resources, CE_Type, CULL_DEFAULT)
   SGE_LIST(PREF_queue_filter_pe, ST_Type, CULL_DEFAULT)
   SGE_LIST(PREF_queue_filter_user, ST_Type, CULL_DEFAULT)
   SGE_LIST(PREF_queue_filter_q, ST_Type, CULL_DEFAULT)
   SGE_STRING(PREF_queue_filter_state, CULL_DEFAULT)
   SGE_LIST(PREF_ar_filter_fields, ST_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(PREFS)

   NAME("PREF_job_filter_resources")
   NAME("PREF_job_filter_owners")
   NAME("PREF_job_filter_fields")
   NAME("PREF_job_filter_compact")
   NAME("PREF_queue_filter_resources")
   NAME("PREF_queue_filter_pe")
   NAME("PREF_queue_filter_user")
   NAME("PREF_queue_filter_q")
   NAME("PREF_queue_filter_state")
   NAME("PREF_ar_filter_fields")
NAMEEND
# 131 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ptf_JL_L.h" 1
# 50 "../libs/sgeobj/sge_ptf_JL_L.h"
enum {
   JL_job_ID = JL_LOWERBOUND,
   JL_OS_job_list,
   JL_state,
   JL_tickets,
   JL_share,
   JL_ticket_share,
   JL_timeslice,
   JL_usage,
   JL_old_usage_value,
   JL_adjusted_usage,
   JL_last_usage,
   JL_old_usage,
   JL_proportion,
   JL_adjusted_proportion,
   JL_adjusted_current_proportion,
   JL_actual_proportion,
   JL_diff_proportion,
   JL_last_proportion,
   JL_curr_pri,
   JL_pri,
   JL_procfd,
   JL_interactive
};

LISTDEF(JL_Type)
   SGE_ULONG(JL_job_ID, CULL_DEFAULT)
   SGE_LIST(JL_OS_job_list, JO_Type, CULL_DEFAULT)
   SGE_ULONG(JL_state, CULL_DEFAULT)
   SGE_ULONG(JL_tickets, CULL_DEFAULT)
   SGE_DOUBLE(JL_share, CULL_DEFAULT)
   SGE_DOUBLE(JL_ticket_share, CULL_DEFAULT)
   SGE_DOUBLE(JL_timeslice, CULL_DEFAULT)
   SGE_DOUBLE(JL_usage, CULL_DEFAULT)
   SGE_DOUBLE(JL_old_usage_value, CULL_DEFAULT)
   SGE_DOUBLE(JL_adjusted_usage, CULL_DEFAULT)
   SGE_DOUBLE(JL_last_usage, CULL_DEFAULT)
   SGE_DOUBLE(JL_old_usage, CULL_DEFAULT)
   SGE_DOUBLE(JL_proportion, CULL_DEFAULT)
   SGE_DOUBLE(JL_adjusted_proportion, CULL_DEFAULT)
   SGE_DOUBLE(JL_adjusted_current_proportion, CULL_DEFAULT)
   SGE_DOUBLE(JL_actual_proportion, CULL_DEFAULT)
   SGE_DOUBLE(JL_diff_proportion, CULL_DEFAULT)
   SGE_DOUBLE(JL_last_proportion, CULL_DEFAULT)
   SGE_DOUBLE(JL_curr_pri, CULL_DEFAULT)
   SGE_LONG(JL_pri, CULL_DEFAULT)
   SGE_ULONG(JL_procfd, CULL_DEFAULT)
   SGE_ULONG(JL_interactive, CULL_DEFAULT)
LISTEND

NAMEDEF(JLN)
   NAME("JL_job_ID")
   NAME("JL_OS_job_list")
   NAME("JL_state")
   NAME("JL_tickets")
   NAME("JL_share")
   NAME("JL_ticket_share")
   NAME("JL_timeslice")
   NAME("JL_usage")
   NAME("JL_old_usage_value")
   NAME("JL_adjusted_usage")
   NAME("JL_last_usage")
   NAME("JL_old_usage")
   NAME("JL_proportion")
   NAME("JL_adjusted_proportion")
   NAME("JL_adjusted_current_proportion")
   NAME("JL_actual_proportion")
   NAME("JL_diff_proportion")
   NAME("JL_last_proportion")
   NAME("JL_curr_pri")
   NAME("JL_pri")
   NAME("JL_procfd")
   NAME("JL_interactive")
NAMEEND
# 132 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ptf_JO_L.h" 1
# 53 "../libs/sgeobj/sge_ptf_JO_L.h"
enum {
   JO_OS_job_ID,
   JO_OS_job_ID2,
   JO_ja_task_ID,
   JO_task_id_str,
   JO_state,
   JO_usage_list,
   JO_pid_list
};

LISTDEF(JO_Type)
   SGE_ULONG(JO_OS_job_ID, CULL_DEFAULT)
   SGE_ULONG(JO_OS_job_ID2, CULL_DEFAULT)
   SGE_ULONG(JO_ja_task_ID, CULL_DEFAULT)
   SGE_STRING(JO_task_id_str, CULL_DEFAULT)
   SGE_ULONG(JO_state, CULL_DEFAULT)
   SGE_MAP(JO_usage_list, UA_Type, CULL_DEFAULT)
   SGE_LIST(JO_pid_list, JP_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(JON)
   NAME("JO_OS_job_ID")
   NAME("JO_OS_job_ID2")
   NAME("JO_ja_task_ID")
   NAME("JO_task_id_str")
   NAME("JO_state")
   NAME("JO_usage_list")
   NAME("JO_pid_list")
NAMEEND
# 133 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ptf_JP_L.h" 1
# 49 "../libs/sgeobj/sge_ptf_JP_L.h"
enum {
   JP_pid = JP_LOWERBOUND,
   JP_background
};

LISTDEF(JP_Type)
   SGE_ULONG(JP_pid, CULL_HASH | CULL_UNIQUE)
   SGE_ULONG(JP_background, CULL_DEFAULT)
LISTEND

NAMEDEF(JPN)
   NAME("JP_pid")
   NAME("JP_background")
NAMEEND
# 134 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_qeti_QETI_L.h" 1
# 73 "../libs/sgeobj/sge_qeti_QETI_L.h"
enum {
   QETI_total = QETI_LOWERBOUND,
   QETI_resource_instance,
   QETI_queue_end_next
};

LISTDEF(QETI_Type)
   SGE_DOUBLE(QETI_total, CULL_DEFAULT)
   SGE_REF(QETI_resource_instance, RUE_Type, CULL_DEFAULT)
   SGE_REF(QETI_queue_end_next, RDE_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(QETIN)
   NAME("QETI_total")
   NAME("QETI_resource_instance")
   NAME("QETI_queue_end_next")
NAMEEND
# 135 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_qexec_RT_L.h" 1
# 48 "../libs/sgeobj/sge_qexec_RT_L.h"
enum {
   RT_tid = RT_LOWERBOUND,
   RT_hostname,
   RT_status,
   RT_state
};

LISTDEF(RT_Type)
   SGE_STRING(RT_tid, CULL_DEFAULT)
   SGE_HOST(RT_hostname, CULL_DEFAULT)
   SGE_ULONG(RT_status, CULL_DEFAULT)
   SGE_ULONG(RT_state, CULL_DEFAULT)
LISTEND

NAMEDEF(RTN)
   NAME("RT_tid")
   NAME("RT_hostname")
   NAME("RT_status")
   NAME("RT_state")
NAMEEND
# 136 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_qinstance_QU_L.h" 1
# 45 "../libs/sgeobj/sge_qinstance_QU_L.h"
enum {
   QU_qhostname = QU_LOWERBOUND,
   QU_qname,
   QU_full_name,
   QU_tag,
   QU_available_at,

   QU_seq_no,
   QU_nsuspend,
   QU_qtype,
   QU_job_slots,

   QU_tmpdir,
   QU_shell,
   QU_calendar,
   QU_priority,
   QU_processors,
   QU_prolog,
   QU_epilog,
   QU_shell_start_mode,
   QU_starter_method,
   QU_suspend_method,
   QU_resume_method,
   QU_terminate_method,
   QU_initial_state,

   QU_rerun,

   QU_s_rt,
   QU_h_rt,
   QU_s_cpu,
   QU_h_cpu,
   QU_s_fsize,
   QU_h_fsize,
   QU_s_data,
   QU_h_data,
   QU_s_stack,
   QU_h_stack,
   QU_s_core,
   QU_h_core,
   QU_s_rss,
   QU_h_rss,
   QU_s_vmem,
   QU_h_vmem,

   QU_suspend_interval,
   QU_min_cpu_interval,
   QU_notify,

   QU_ckpt_list,
   QU_pe_list,

   QU_owner_list,
   QU_acl,
   QU_xacl,

   QU_projects,
   QU_xprojects,

   QU_consumable_config_list,
   QU_load_thresholds,
   QU_suspend_thresholds,

   QU_subordinate_list,

   QU_state,
   QU_tagged4schedule,




   QU_cache_version,
   QU_pending_signal,
   QU_pending_signal_delivery_time,
   QU_version,
   QU_suspended_on_subordinate,
   QU_last_suspend_threshold_ckeck,
   QU_job_cnt,
   QU_pending_job_cnt,
   QU_soft_violation,
   QU_host_seq_no,
   QU_resource_utilization,
   QU_message_list,
   QU_gdi_do_later,


   QU_state_changes
};


LISTDEF(QU_Type)
   JGDI_OBJ(QueueInstance)
   JGDI_EVENT_OBJ(ADD(sgeE_QINSTANCE_ADD) | MODIFY(sgeE_QINSTANCE_MOD) | DELETE(sgeE_QINSTANCE_DEL))
   SGE_HOST(QU_qhostname, CULL_HASH | CULL_SPOOL | CULL_JGDI_RO)
   SGE_STRING(QU_qname, CULL_SPOOL | CULL_JGDI_RO)
   SGE_STRING(QU_full_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_JGDI_RO)
   SGE_ULONG(QU_tag, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(QU_available_at, CULL_DEFAULT | CULL_JGDI_RO)

   SGE_ULONG(QU_seq_no, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_ULONG(QU_nsuspend, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_ULONG(QU_qtype, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_ULONG(QU_job_slots, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_STRING(QU_tmpdir, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_shell, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_calendar, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_priority, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_processors, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_prolog, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_epilog, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_shell_start_mode, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_starter_method, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_suspend_method, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_resume_method, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_terminate_method, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_initial_state, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_BOOL(QU_rerun, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_STRING(QU_s_rt, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_h_rt, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_s_cpu, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_h_cpu, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_s_fsize, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_h_fsize, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_s_data, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_h_data, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_s_stack, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_h_stack, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_s_core, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_h_core, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_s_rss, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_h_rss, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_s_vmem, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_h_vmem, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_STRING(QU_suspend_interval, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_min_cpu_interval, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_STRING(QU_notify, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_LIST(QU_ckpt_list, ST_Type, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_LIST(QU_pe_list, ST_Type, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_LIST(QU_owner_list, US_Type, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_LIST(QU_acl, US_Type, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_LIST(QU_xacl, US_Type, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_LIST(QU_projects, PR_Type, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_LIST(QU_xprojects, PR_Type, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_LIST(QU_consumable_config_list, CE_Type, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_LIST(QU_load_thresholds, CE_Type, CULL_CONFIGURE | CULL_JGDI_RO)
   SGE_LIST(QU_suspend_thresholds, CE_Type, CULL_CONFIGURE | CULL_JGDI_RO)

   SGE_LIST(QU_subordinate_list, SO_Type, CULL_CONFIGURE | CULL_JGDI_RO)



   SGE_ULONG(QU_state, CULL_SPOOL | CULL_JGDI_HIDDEN)
   SGE_ULONG(QU_tagged4schedule, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(QU_cache_version, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(QU_pending_signal, CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(QU_pending_signal_delivery_time, CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(QU_version, CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(QU_suspended_on_subordinate, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(QU_last_suspend_threshold_ckeck, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(QU_job_cnt, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(QU_pending_job_cnt, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(QU_soft_violation, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_ULONG(QU_host_seq_no, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_LIST(QU_resource_utilization, RUE_Type, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_LIST(QU_message_list, QIM_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
   SGE_ULONG(QU_gdi_do_later, CULL_DEFAULT | CULL_JGDI_RO)

   SGE_LIST(QU_state_changes, CQU_Type, CULL_DEFAULT | CULL_JGDI_RO)

LISTEND

NAMEDEF(QUN)
   NAME("QU_qhostname")
   NAME("QU_qname")
   NAME("QU_full_name")
   NAME("QU_tag")
   NAME("QU_available_at")

   NAME("QU_seq_no")
   NAME("QU_nsuspend")
   NAME("QU_qtype")
   NAME("QU_job_slots")

   NAME("QU_tmpdir")
   NAME("QU_shell")
   NAME("QU_calendar")
   NAME("QU_priority")
   NAME("QU_processors")
   NAME("QU_prolog")
   NAME("QU_epilog")
   NAME("QU_shell_start_mode")
   NAME("QU_starter_method")
   NAME("QU_suspend_method")
   NAME("QU_resume_method")
   NAME("QU_terminate_method")
   NAME("QU_initial_state")

   NAME("QU_rerun")

   NAME("QU_s_rt")
   NAME("QU_h_rt")
   NAME("QU_s_cpu")
   NAME("QU_h_cpu")
   NAME("QU_s_fsize")
   NAME("QU_h_fsize")
   NAME("QU_s_data")
   NAME("QU_h_data")
   NAME("QU_s_stack")
   NAME("QU_h_stack")
   NAME("QU_s_core")
   NAME("QU_h_core")
   NAME("QU_s_rss")
   NAME("QU_h_rss")
   NAME("QU_s_vmem")
   NAME("QU_h_vmem")

   NAME("QU_suspend_interval")
   NAME("QU_min_cpu_interval")
   NAME("QU_notify")

   NAME("QU_ckpt_list")
   NAME("QU_pe_list")

   NAME("QU_owner_list")
   NAME("QU_acl")
   NAME("QU_xacl")

   NAME("QU_projects")
   NAME("QU_xprojects")

   NAME("QU_consumable_config_list")
   NAME("QU_load_thresholds")
   NAME("QU_suspend_thresholds")

   NAME("QU_subordinate_list")

   NAME("QU_state")
   NAME("QU_tagged4schedule")
   NAME("QU_cache_version")
   NAME("QU_pending_signal")
   NAME("QU_pending_signal_delivery_time")
   NAME("QU_version")
   NAME("QU_suspended_on_subordinate")
   NAME("QU_last_suspend_threshold_ckeck")
   NAME("QU_job_cnt")
   NAME("QU_pending_job_cnt")
   NAME("QU_soft_violation")
   NAME("QU_host_seq_no")
   NAME("QU_resource_utilization")
   NAME("QU_message_list")
   NAME("QU_gdi_do_later")
   NAME("QU_state_changes")

NAMEEND
# 137 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_qref_QR_L.h" 1
# 45 "../libs/sgeobj/sge_qref_QR_L.h"
enum {
   QR_name = QR_LOWERBOUND
};

LISTDEF(QR_Type)
   JGDI_PRIMITIVE_OBJ(QR_name)
   SGE_STRING(QR_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
LISTEND

NAMEDEF(QRN)
   NAME("QR_name")
NAMEEND
# 138 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_range_RN_L.h" 1
# 107 "../libs/sgeobj/sge_range_RN_L.h"
enum {
   RN_min = RN_LOWERBOUND,
   RN_max,
   RN_step
};

LISTDEF(RN_Type)
   JGDI_OBJ(Range)
   SGE_ULONG(RN_min, CULL_PRIMARY_KEY | CULL_SUBLIST)
   SGE_ULONG(RN_max, CULL_DEFAULT | CULL_SUBLIST)
   SGE_ULONG(RN_step, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(RNN)
   NAME("RN_min")
   NAME("RN_max")
   NAME("RN_step")
NAMEEND
# 139 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_report_REP_L.h" 1
# 48 "../libs/sgeobj/sge_report_REP_L.h"
enum {
   REP_type = REP_LOWERBOUND,
   REP_host,
   REP_list,
   REP_version,
   REP_seqno
};

LISTDEF(REP_Type)
   SGE_ULONG(REP_type, CULL_DEFAULT)
   SGE_HOST(REP_host, CULL_DEFAULT)
   SGE_LIST(REP_list, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_ULONG(REP_version, CULL_DEFAULT)
   SGE_ULONG(REP_seqno, CULL_DEFAULT)
LISTEND

NAMEDEF(REPN)
   NAME("REP_type")
   NAME("REP_host")
   NAME("REP_list")
   NAME("REP_version")
   NAME("REP_seqno")
NAMEEND
# 140 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_report_JR_L.h" 1
# 47 "../libs/sgeobj/sge_report_JR_L.h"
enum {
   JR_job_number = JR_LOWERBOUND,
   JR_ja_task_number,
   JR_queue_name,
   JR_state,
   JR_failed,
   JR_general_failure,
   JR_err_str,
   JR_usage,
   JR_job_pid,
   JR_ckpt_arena,
   JR_pe_task_id_str,
   JR_osjobid,
   JR_wait_status,
   JR_flush,
   JR_no_send,
   JR_delay_report
};

LISTDEF(JR_Type)
   SGE_ULONG(JR_job_number, CULL_HASH)
   SGE_ULONG(JR_ja_task_number, CULL_DEFAULT)
   SGE_STRING(JR_queue_name, CULL_DEFAULT)
   SGE_ULONG(JR_state, CULL_DEFAULT)

   SGE_ULONG(JR_failed, CULL_DEFAULT)
   SGE_ULONG(JR_general_failure, CULL_DEFAULT)
   SGE_STRING(JR_err_str, CULL_DEFAULT)
   SGE_MAP(JR_usage, UA_Type, CULL_DEFAULT)
   SGE_ULONG(JR_job_pid, CULL_DEFAULT)
   SGE_ULONG(JR_ckpt_arena, CULL_DEFAULT)
   SGE_STRING(JR_pe_task_id_str, CULL_DEFAULT)


   SGE_STRING(JR_osjobid, CULL_DEFAULT)
   SGE_ULONG(JR_wait_status, CULL_DEFAULT)
   SGE_BOOL(JR_flush, CULL_DEFAULT)
   SGE_BOOL(JR_no_send, CULL_DEFAULT)
   SGE_BOOL(JR_delay_report, CULL_DEFAULT)
LISTEND

NAMEDEF(JRN)
   NAME("JR_job_number")
   NAME("JR_ja_task_number")
   NAME("JR_queue_name")
   NAME("JR_state")
   NAME("JR_failed")
   NAME("JR_general_failure")
   NAME("JR_err_str")
   NAME("JR_usage")
   NAME("JR_job_pid")
   NAME("JR_ckpt_arena")
   NAME("JR_pe_task_id_str")
   NAME("JR_osjobid")
   NAME("JR_wait_status")
   NAME("JR_flush")
   NAME("JR_no_send")
   NAME("JR_delay_report")
NAMEEND
# 141 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_report_LIC_L.h" 1
# 48 "../libs/sgeobj/sge_report_LIC_L.h"
enum {
   LIC_processors = LIC_LOWERBOUND,
   LIC_arch
};

LISTDEF(LIC_Type)
   SGE_ULONG(LIC_processors, CULL_DEFAULT)
   SGE_STRING(LIC_arch, CULL_DEFAULT)
LISTEND

NAMEDEF(LICN)
   NAME("LIC_processors")
   NAME("LIC_arch")
NAMEEND
# 142 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_report_LR_L.h" 1
# 45 "../libs/sgeobj/sge_report_LR_L.h"
enum {
   LR_name = LR_LOWERBOUND,
   LR_value,
   LR_global,
   LR_static,


   LR_host
};

LISTDEF(LR_Type)
   SGE_STRING(LR_name, CULL_HASH)
   SGE_STRING(LR_value, CULL_DEFAULT)
   SGE_ULONG(LR_global, CULL_DEFAULT)
   SGE_ULONG(LR_static, CULL_DEFAULT)
   SGE_HOST(LR_host, CULL_HASH)
LISTEND

NAMEDEF(LRN)
   NAME("LR_name")
   NAME("LR_value")
   NAME("LR_global")
   NAME("LR_static")
   NAME("LR_host")
NAMEEND
# 143 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_resource_quota_RQS_L.h" 1
# 46 "../libs/sgeobj/sge_resource_quota_RQS_L.h"
enum {
   RQS_name = RQS_LOWERBOUND,
   RQS_description,
   RQS_enabled,
   RQS_rule
};

LISTDEF(RQS_Type)
 JGDI_ROOT_OBJ(ResourceQuotaSet, SGE_RQS_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
 JGDI_EVENT_OBJ(ADD(sgeE_RQS_ADD) | MODIFY(sgeE_RQS_MOD) | DELETE(sgeE_RQS_DEL) | GET_LIST(sgeE_RQS_LIST))
 SGE_STRING(RQS_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_STRING(RQS_description, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_BOOL(RQS_enabled, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_LIST(RQS_rule, RQR_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
LISTEND

NAMEDEF(RQSN)
   NAME("RQS_name")
   NAME("RQS_description")
   NAME("RQS_enabled")
   NAME("RQS_rule")
NAMEEND
# 144 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_resource_quota_RQR_L.h" 1
# 46 "../libs/sgeobj/sge_resource_quota_RQR_L.h"
enum {
   RQR_name = RQR_LOWERBOUND,
   RQR_filter_users,
   RQR_filter_projects,
   RQR_filter_pes,
   RQR_filter_queues,
   RQR_filter_hosts,
   RQR_limit,
   RQR_level
};

LISTDEF(RQR_Type)
 JGDI_OBJ(ResourceQuotaRule)
 SGE_STRING(RQR_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_OBJECT(RQR_filter_users, RQRF_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_OBJECT(RQR_filter_projects, RQRF_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_OBJECT(RQR_filter_pes, RQRF_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_OBJECT(RQR_filter_queues, RQRF_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_OBJECT(RQR_filter_hosts, RQRF_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_LIST(RQR_limit, RQRL_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_ULONG(RQR_level, CULL_DEFAULT | CULL_JGDI_RO)

LISTEND

NAMEDEF(RQRN)
   NAME("RQR_name")
   NAME("RQR_filter_users")
   NAME("RQR_filter_projects")
   NAME("RQR_filter_pes")
   NAME("RQR_filter_queues")
   NAME("RQR_filter_hosts")
   NAME("RQR_limit")
   NAME("RQR_level")
NAMEEND
# 145 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_resource_quota_RQRF_L.h" 1
# 46 "../libs/sgeobj/sge_resource_quota_RQRF_L.h"
enum {
   RQRF_expand = RQRF_LOWERBOUND,
   RQRF_scope,
   RQRF_xscope
};

LISTDEF(RQRF_Type)
 JGDI_OBJ(ResourceQuotaRuleFilter)
 SGE_BOOL(RQRF_expand, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_LIST(RQRF_scope, ST_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_LIST(RQRF_xscope, ST_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
LISTEND

NAMEDEF(RQRFN)
   NAME("RQRF_expand")
   NAME("RQRF_scope")
   NAME("RQRF_xscope")
NAMEEND
# 146 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_resource_quota_RQRL_L.h" 1
# 46 "../libs/sgeobj/sge_resource_quota_RQRL_L.h"
enum {
   RQRL_name = RQRL_LOWERBOUND,
   RQRL_value,
   RQRL_type,
   RQRL_dvalue,
   RQRL_usage,
   RQRL_dynamic
};

LISTDEF(RQRL_Type)
 JGDI_OBJ(ResourceQuotaRuleLimit)
 SGE_STRING(RQRL_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_STRING(RQRL_value, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
 SGE_ULONG(RQRL_type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
 SGE_DOUBLE(RQRL_dvalue, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_RO)
 SGE_LIST(RQRL_usage, RUE_Type, CULL_DEFAULT | CULL_JGDI_RO)
 SGE_BOOL(RQRL_dynamic, CULL_DEFAULT | CULL_JGDI_RO)
LISTEND

NAMEDEF(RQRLN)
   NAME("RQRL_name")
   NAME("RQRL_value")
   NAME("RQRL_type")
   NAME("RQRL_dvalue")
   NAME("RQRL_usage")
   NAME("RQRL_dynamic")
NAMEEND
# 147 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_resource_quota_RQL_L.h" 1
# 46 "../libs/sgeobj/sge_resource_quota_RQL_L.h"
enum {
   RQL_name = RQL_LOWERBOUND,
   RQL_result,
   RQL_time,
   RQL_slots,
   RQL_slots_qend,
   RQL_tagged4schedule
};

LISTDEF(RQL_Type)
   SGE_STRING(RQL_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE )
   SGE_INT(RQL_result, CULL_DEFAULT )
   SGE_ULONG(RQL_time, CULL_DEFAULT )
   SGE_INT(RQL_slots, CULL_DEFAULT )
   SGE_INT(RQL_slots_qend, CULL_DEFAULT )
   SGE_ULONG(RQL_tagged4schedule, CULL_DEFAULT)
LISTEND

NAMEDEF(RQLN)
   NAME("RQL_name")
   NAME("RQL_result")
   NAME("RQL_time")
   NAME("RQL_slots")
   NAME("RQL_slots_qend")
   NAME("RQL_tagged4schedule")
NAMEEND
# 148 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_resource_utilization_RDE_L.h" 1
# 84 "../libs/sgeobj/sge_resource_utilization_RDE_L.h"
enum {
   RDE_time = RDE_LOWERBOUND,
   RDE_amount
};

LISTDEF(RDE_Type)
   JGDI_OBJ(ResourceDiagramEntry)
   SGE_ULONG(RDE_time, CULL_DEFAULT)
   SGE_DOUBLE(RDE_amount, CULL_DEFAULT)
LISTEND

NAMEDEF(RDEN)
   NAME("RDE_time")
   NAME("RDE_amount")
NAMEEND
# 149 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_resource_utilization_RUE_L.h" 1
# 104 "../libs/sgeobj/sge_resource_utilization_RUE_L.h"
enum {
   RUE_name = RUE_LOWERBOUND,
   RUE_utilized_now,
   RUE_utilized,
   RUE_utilized_now_nonexclusive,
   RUE_utilized_nonexclusive
};

LISTDEF(RUE_Type)
   JGDI_OBJ(ResourceUtilization)
   SGE_STRING(RUE_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_SUBLIST | CULL_PRIMARY_KEY)
   SGE_DOUBLE(RUE_utilized_now, CULL_DEFAULT)
   SGE_LIST(RUE_utilized, RDE_Type, CULL_DEFAULT)
   SGE_DOUBLE(RUE_utilized_now_nonexclusive, CULL_DEFAULT)
   SGE_LIST(RUE_utilized_nonexclusive, RDE_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(RUEN)
   NAME("RUE_name")
   NAME("RUE_utilized_now")
   NAME("RUE_utilized")
   NAME("RUE_utilized_now_nonexclusive")
   NAME("RUE_utilized_nonexclusive")
NAMEEND
# 150 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_schedd_conf_PARA_L.h" 1
# 48 "../libs/sgeobj/sge_schedd_conf_PARA_L.h"
enum {
   PARA_name = PARA_LOWERBOUND,
   PARA_value
};

LISTDEF(PARA_Type)
   SGE_STRING(PARA_name, CULL_PRIMARY_KEY | CULL_DEFAULT)
   SGE_STRING(PARA_value, CULL_DEFAULT)
LISTEND

NAMEDEF(PARAN)
   NAME("PARA_name")
   NAME("PARA_value")
NAMEEND
# 151 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_schedd_conf_SC_L.h" 1
# 48 "../libs/sgeobj/sge_schedd_conf_SC_L.h"
enum {
   SC_algorithm = SC_LOWERBOUND,
   SC_schedule_interval,
   SC_maxujobs,
   SC_queue_sort_method,
   SC_job_load_adjustments,
   SC_load_adjustment_decay_time,
   SC_load_formula,
   SC_schedd_job_info,
   SC_flush_submit_sec,
   SC_flush_finish_sec,
   SC_params,

   SC_reprioritize_interval,
   SC_halftime,
   SC_usage_weight_list,
   SC_compensation_factor,
   SC_weight_user,
   SC_weight_project,
   SC_weight_department,
   SC_weight_job,
   SC_weight_tickets_functional,
   SC_weight_tickets_share,
   SC_weight_tickets_override,
   SC_share_override_tickets,
   SC_share_functional_shares,
   SC_max_functional_jobs_to_schedule,
   SC_report_pjob_tickets,
   SC_max_pending_tasks_per_job,
   SC_halflife_decay_list,
   SC_policy_hierarchy,
   SC_weight_ticket,
   SC_weight_waiting_time,
   SC_weight_deadline,
   SC_weight_urgency,
   SC_weight_priority,
   SC_max_reservation,
   SC_default_duration
   };

LISTDEF(SC_Type)
   JGDI_ROOT_OBJ(SchedConf, SGE_SC_LIST, MODIFY | GET)
   JGDI_EVENT_OBJ(MODIFY(sgeE_SCHED_CONF))



   SGE_STRING_D(SC_algorithm, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "default")
   SGE_STRING_D(SC_schedule_interval, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "0:0:15")
   SGE_ULONG_D(SC_maxujobs, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0)
   SGE_ULONG_D(SC_queue_sort_method, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0)
   SGE_LIST(SC_job_load_adjustments, CE_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_STRING_D(SC_load_adjustment_decay_time, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "0:7:30")
   SGE_STRING_D(SC_load_formula, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "np_load_avg")
   SGE_STRING_D(SC_schedd_job_info, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "true")
   SGE_ULONG_D(SC_flush_submit_sec, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0)

   SGE_ULONG_D(SC_flush_finish_sec, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0)

   SGE_STRING_D(SC_params, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")




   SGE_STRING_D(SC_reprioritize_interval, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "0:0:0")
   SGE_ULONG_D(SC_halftime, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 168)
   SGE_MAP(SC_usage_weight_list, UA_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)



   SGE_DOUBLE_D(SC_compensation_factor, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 5.0)

   SGE_DOUBLE_D(SC_weight_user, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0.25)

   SGE_DOUBLE_D(SC_weight_project, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0.25)
   SGE_DOUBLE_D(SC_weight_department, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0.25)
   SGE_DOUBLE_D(SC_weight_job, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0.25)

   SGE_ULONG_D(SC_weight_tickets_functional, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0)
   SGE_ULONG_D(SC_weight_tickets_share, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0)
   SGE_ULONG_D(SC_weight_tickets_override, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0)
   SGE_BOOL(SC_share_override_tickets, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_BOOL(SC_share_functional_shares, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_ULONG_D(SC_max_functional_jobs_to_schedule, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 200)


   SGE_BOOL(SC_report_pjob_tickets, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG_D(SC_max_pending_tasks_per_job, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 50)


   SGE_STRING_D(SC_halflife_decay_list,CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "none")
   SGE_STRING_D(SC_policy_hierarchy,CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "OFS")

   SGE_DOUBLE_D(SC_weight_ticket, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0.01)

   SGE_DOUBLE_D(SC_weight_waiting_time, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0.0)

   SGE_DOUBLE_D(SC_weight_deadline, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 3600000.0)

   SGE_DOUBLE_D(SC_weight_urgency, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0.1)

   SGE_DOUBLE_D(SC_weight_priority, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 1.0)

   SGE_ULONG_D(SC_max_reservation, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 0)


   SGE_STRING_D(SC_default_duration, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, "0:10:0")



LISTEND

NAMEDEF(SCN)
   NAME("SC_algorithm")
   NAME("SC_schedule_interval")
   NAME("SC_maxujobs")
   NAME("SC_queue_sort_method")
   NAME("SC_job_load_adjustments")
   NAME("SC_load_adjustment_decay_time")
   NAME("SC_load_formula")
   NAME("SC_schedd_job_info")
   NAME("SC_flush_submit_sec")
   NAME("SC_flush_finish_sec")
   NAME("SC_params")

   NAME("SC_reprioritize_interval")
   NAME("SC_halftime")
   NAME("SC_usage_weight_list")
   NAME("SC_compensation_factor")

   NAME("SC_weight_user")
   NAME("SC_weight_project")
   NAME("SC_weight_department")
   NAME("SC_weight_job")

   NAME("SC_weight_tickets_functional")
   NAME("SC_weight_tickets_share")
   NAME("SC_weight_tickets_override")

   NAME("SC_share_override_tickets")
   NAME("SC_share_functional_shares")
   NAME("SC_max_functional_jobs_to_schedule")
   NAME("SC_report_pjob_tickets")
   NAME("SC_max_pending_tasks_per_job")
   NAME("SC_halflife_decay_list")
   NAME("SC_policy_hierarchy")

   NAME("SC_weight_ticket")
   NAME("SC_weight_waiting_time")
   NAME("SC_weight_deadline")
   NAME("SC_weight_urgency")
   NAME("SC_weight_priority")
   NAME("SC_max_reservation")
   NAME("SC_default_duration")
NAMEEND
# 152 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_sec_SEC_L.h" 1
# 45 "../libs/sgeobj/sge_sec_SEC_L.h"
enum {
   SEC_ConnectionID = SEC_LOWERBOUND,
   SEC_Host,
   SEC_Commproc,
   SEC_Id,
   SEC_UniqueIdentifier,
   SEC_ExpiryDate,
   SEC_SeqNoSend,
   SEC_SeqNoReceive,
   SEC_KeyPart0,
   SEC_KeyPart1,
   SEC_KeyPart2,
   SEC_KeyPart3,
   SEC_KeyPart4,
   SEC_KeyPart5,
   SEC_KeyPart6,
   SEC_KeyPart7
};

LISTDEF(SEC_Type)
   SGE_ULONG(SEC_ConnectionID, CULL_DEFAULT)
   SGE_HOST(SEC_Host, CULL_DEFAULT)
   SGE_STRING(SEC_Commproc, CULL_DEFAULT)
   SGE_INT(SEC_Id, CULL_DEFAULT)
   SGE_STRING(SEC_UniqueIdentifier, CULL_DEFAULT)
   SGE_STRING(SEC_ExpiryDate, CULL_DEFAULT)
   SGE_ULONG(SEC_SeqNoSend, CULL_DEFAULT)
   SGE_ULONG(SEC_SeqNoReceive, CULL_DEFAULT)
   SGE_ULONG(SEC_KeyPart0, CULL_DEFAULT)
   SGE_ULONG(SEC_KeyPart1, CULL_DEFAULT)
   SGE_ULONG(SEC_KeyPart2, CULL_DEFAULT)
   SGE_ULONG(SEC_KeyPart3, CULL_DEFAULT)
   SGE_ULONG(SEC_KeyPart4, CULL_DEFAULT)
   SGE_ULONG(SEC_KeyPart5, CULL_DEFAULT)
   SGE_ULONG(SEC_KeyPart6, CULL_DEFAULT)
   SGE_ULONG(SEC_KeyPart7, CULL_DEFAULT)
LISTEND

NAMEDEF(SECN)
   NAME("SEC_ConnectionID")
   NAME("SEC_Host")
   NAME("SEC_Commproc")
   NAME("SEC_Id")
   NAME("SEC_UniqueIdentifier")
   NAME("SEC_ExpiryDate")
   NAME("SEC_SeqNoSend")
   NAME("SEC_SeqNoReceive")
   NAME("SEC_KeyPart0")
   NAME("SEC_KeyPart1")
   NAME("SEC_KeyPart2")
   NAME("SEC_KeyPart3")
   NAME("SEC_KeyPart4")
   NAME("SEC_KeyPart5")
   NAME("SEC_KeyPart6")
   NAME("SEC_KeyPart7")
NAMEEND
# 153 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_select_queue_LDR_L.h" 1
# 78 "../libs/sgeobj/sge_select_queue_LDR_L.h"
enum {
   LDR_queue_ref_list_pos = 0,
   LDR_limit_pos,
   LDR_global_pos,
   LDR_host_pos,
   LDR_queue_pos
};

enum {
   LDR_queue_ref_list = LDR_LOWERBOUND,
   LDR_limit,
   LDR_global,
   LDR_host,
   LDR_queue
};

LISTDEF(LDR_Type)
   SGE_LIST(LDR_queue_ref_list, QR_Type, CULL_DEFAULT)
   SGE_STRING(LDR_limit, CULL_DEFAULT)
   SGE_REF(LDR_global,CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(LDR_host,CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(LDR_queue,CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(LDRN)
   NAME("LDR_queue_ref_list")
   NAME("LDR_limit")
   NAME("LDR_global")
   NAME("LDR_host")
   NAME("LDR_queue")
NAMEEND
# 154 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_select_queue_QRL_L.h" 1
# 58 "../libs/sgeobj/sge_select_queue_QRL_L.h"
enum {
   QRL_queue_pos = 0
};

enum {
   QRL_queue = QRL_LOWERBOUND
};

LISTDEF(QRL_Type)
   SGE_REF(QRL_queue,CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(QRL_N)
   NAME("QRL_queue")
NAMEEND
# 155 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_sharetree_STN_L.h" 1
# 45 "../libs/sgeobj/sge_sharetree_STN_L.h"
enum {
   STN_name = STN_LOWERBOUND,

   STN_type,



   STN_id,


   STN_shares,

   STN_children,


   STN_job_ref_count,

   STN_active_job_ref_count,

   STN_project,

   STN_proportion,

   STN_adjusted_proportion,

   STN_combined_usage,

   STN_pass2_seqno,

   STN_sum_priority,

   STN_actual_proportion,

   STN_m_share,


   STN_last_actual_proportion,


   STN_adjusted_current_proportion,


   STN_temp,



   STN_stt,




   STN_ostt,




   STN_ltt,




   STN_oltt,




   STN_shr,



   STN_sort,



   STN_ref,



   STN_tickets,



   STN_jobid,



   STN_taskid,



   STN_usage_list,


   STN_version

};

enum {
   STN_name_POS = 0,
   STN_type_POS,
   STN_id_POS,
   STN_shares_POS,
   STN_children_POS,
   STN_job_ref_count_POS,
   STN_active_job_ref_count_POS,
   STN_project_POS,
   STN_proportion_POS,
   STN_adjusted_proportion_POS,
   STN_combined_usage_POS,
   STN_pass2_seqno_POS,
   STN_sum_priority_POS,
   STN_actual_proportion_POS,
   STN_m_share_POS,
   STN_last_actual_proportion_POS,
   STN_adjusted_current_proportion_POS,
   STN_temp_POS,
   STN_stt_POS,
   STN_ostt_POS,
   STN_ltt_POS,
   STN_oltt_POS,
   STN_shr_POS,
   STN_sort_POS,
   STN_ref_POS,
   STN_tickets_POS,
   STN_jobid_POS,
   STN_taskid_POS,
   STN_usage_list_POS,
   STN_version_POS
};


LISTDEF(STN_Type)
   JGDI_ROOT_OBJ(ShareTree, SGE_STN_LIST , MODIFY | GET)
   JGDI_EVENT_OBJ(MODIFY(sgeE_NEW_SHARETREE))
   SGE_STRING(STN_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(STN_type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(STN_id, CULL_DEFAULT | CULL_JGDI_CONF)
   SGE_ULONG(STN_shares, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_LIST(STN_children, STN_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(STN_job_ref_count, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_active_job_ref_count, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_project, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_proportion, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_adjusted_proportion, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_combined_usage, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_pass2_seqno, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_sum_priority, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_actual_proportion, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_DOUBLE(STN_m_share, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_DOUBLE(STN_last_actual_proportion, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_adjusted_current_proportion, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_temp, CULL_DEFAULT | CULL_JGDI_RO)
   SGE_DOUBLE(STN_stt, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_ostt, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_ltt, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_oltt, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_shr, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_sort, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_ref, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_DOUBLE(STN_tickets, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_jobid, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_taskid, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_MAP(STN_usage_list,UA_Type, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_ULONG(STN_version, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(STNN)
   NAME("STN_name")
   NAME("STN_type")
   NAME("STN_id")
   NAME("STN_shares")
   NAME("STN_children")
   NAME("STN_job_ref_count")
   NAME("STN_active_job_ref_count")
   NAME("STN_project")
   NAME("STN_proportion")
   NAME("STN_adjusted_proportion")
   NAME("STN_combined_usage")
   NAME("STN_pass2_seqno")
   NAME("STN_sum_priority")
   NAME("STN_actual_proportion")
   NAME("STN_m_share")
   NAME("STN_last_actual_proportion")
   NAME("STN_adjusted_current_proportion")
   NAME("STN_temp")
   NAME("STN_stt")
   NAME("STN_ostt")
   NAME("STN_ltt")
   NAME("STN_oltt")
   NAME("STN_shr")
   NAME("STN_sort")
   NAME("STN_ref")
   NAME("STN_tickets")
   NAME("STN_jobid")
   NAME("STN_taskid")
   NAME("STN_usage_list")
   NAME("STN_version")
NAMEEND
# 156 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_spooling_SPC_L.h" 1
# 98 "../libs/sgeobj/sge_spooling_SPC_L.h"
enum {
   SPC_name = SPC_LOWERBOUND,
   SPC_rules,
   SPC_types
};

LISTDEF(SPC_Type)
   SGE_STRING(SPC_name, CULL_HASH | CULL_UNIQUE)
   SGE_LIST(SPC_rules, SPR_Type, CULL_DEFAULT)
   SGE_LIST(SPC_types, SPT_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(SPCN)
   NAME("SPC_name")
   NAME("SPC_rules")
   NAME("SPC_types")
NAMEEND
# 157 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_spooling_SPR_L.h" 1
# 124 "../libs/sgeobj/sge_spooling_SPR_L.h"
enum {
   SPR_name = SPR_LOWERBOUND,
   SPR_url,
   SPR_option_func,
   SPR_startup_func,
   SPR_shutdown_func,
   SPR_maintenance_func,
   SPR_trigger_func,
   SPR_transaction_func,
   SPR_list_func,
   SPR_read_func,
   SPR_write_func,
   SPR_delete_func,
   SPR_validate_func,
   SPR_validate_list_func,
   SPR_clientdata
};

LISTDEF(SPR_Type)
   SGE_STRING(SPR_name, CULL_HASH | CULL_UNIQUE)
   SGE_STRING(SPR_url, CULL_DEFAULT)
   SGE_REF(SPR_option_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_startup_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_shutdown_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_maintenance_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_trigger_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_transaction_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_list_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_read_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_write_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_delete_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_validate_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_validate_list_func, CULL_ANY_SUBTYPE, CULL_DEFAULT)
   SGE_REF(SPR_clientdata, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(SPRN)
   NAME("SPR_name")
   NAME("SPR_url")
   NAME("SPR_option_func")
   NAME("SPR_startup_func")
   NAME("SPR_shutdown_func")
   NAME("SPR_maintenance_func")
   NAME("SPR_trigger_func")
   NAME("SPR_transaction_func")
   NAME("SPR_list_func")
   NAME("SPR_read_func")
   NAME("SPR_write_func")
   NAME("SPR_delete_func")
   NAME("SPR_validate_func")
   NAME("SPR_validate_list_func")
   NAME("SPR_clientdata")
NAMEEND
# 158 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_spooling_SPT_L.h" 1
# 86 "../libs/sgeobj/sge_spooling_SPT_L.h"
enum {
   SPT_type = SPT_LOWERBOUND,
   SPT_name,
   SPT_rules
};

LISTDEF(SPT_Type)
   SGE_ULONG(SPT_type, CULL_HASH | CULL_UNIQUE)
   SGE_STRING(SPT_name, CULL_DEFAULT)
   SGE_LIST(SPT_rules, SPTR_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(SPTN)
   NAME("SPT_type")
   NAME("SPT_name")
   NAME("SPT_rules")
NAMEEND
# 159 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_spooling_SPTR_L.h" 1
# 74 "../libs/sgeobj/sge_spooling_SPTR_L.h"
enum {
   SPTR_default = SPTR_LOWERBOUND,
   SPTR_rule_name,
   SPTR_rule
};

LISTDEF(SPTR_Type)
   SGE_BOOL(SPTR_default, CULL_DEFAULT)
   SGE_STRING(SPTR_rule_name, CULL_UNIQUE)
   SGE_REF(SPTR_rule, CULL_ANY_SUBTYPE, CULL_DEFAULT)
LISTEND

NAMEDEF(SPTRN)
   NAME("SPTR_default")
   NAME("SPTR_rule_name")
   NAME("SPTR_rule")
NAMEEND
# 160 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_spooling_SPM_L.h" 1
# 42 "../libs/sgeobj/sge_spooling_SPM_L.h"
enum {
   SPM_key = SPM_LOWERBOUND,
   SPM_id,
   SPM_tag,
   SPM_sublist
};

LISTDEF(SPM_Type)
   SGE_STRING(SPM_key, CULL_HASH | CULL_UNIQUE)
   SGE_STRING(SPM_id, CULL_DEFAULT)
   SGE_BOOL(SPM_tag, CULL_DEFAULT)
   SGE_LIST(SPM_sublist, SPM_Type, CULL_DEFAULT)
LISTEND

NAMEDEF(SPMN)
   NAME("SPM_key")
   NAME("SPM_id")
   NAME("SPM_tag")
   NAME("SPM_sublist")
NAMEEND
# 161 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_str_ST_L.h" 1
# 45 "../libs/sgeobj/sge_str_ST_L.h"
enum {
   ST_name = ST_LOWERBOUND
};

LISTDEF(ST_Type)
   JGDI_PRIMITIVE_OBJ(ST_name)





   SGE_STRING(ST_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_SUBLIST)
LISTEND

NAMEDEF(STN)
   NAME("ST_name")
NAMEEND
# 162 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_str_STU_L.h" 1
# 48 "../libs/sgeobj/sge_str_STU_L.h"
enum {
   STU_name = ST_LOWERBOUND
};

LISTDEF(STU_Type)
   JGDI_PRIMITIVE_OBJ(STU_name)
   SGE_STRING(STU_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
LISTEND

NAMEDEF(STUN)
   NAME("STU_name")
NAMEEND
# 163 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_subordinate_SO_L.h" 1
# 45 "../libs/sgeobj/sge_subordinate_SO_L.h"
enum {
   SO_name = SO_LOWERBOUND,
   SO_threshold,
   SO_slots_sum,
   SO_seq_no,
   SO_action
};
# 63 "../libs/sgeobj/sge_subordinate_SO_L.h"
LISTDEF(SO_Type)
   JGDI_OBJ(Subordinate)
   SGE_STRING(SO_name, CULL_PRIMARY_KEY | CULL_SUBLIST)
   SGE_ULONG(SO_threshold, CULL_SUBLIST)
   SGE_ULONG(SO_slots_sum, CULL_SUBLIST)
   SGE_ULONG(SO_seq_no, CULL_SUBLIST)
   SGE_ULONG(SO_action, CULL_SUBLIST)
LISTEND

NAMEDEF(SON)
   NAME("SO_name")
   NAME("SO_threshold")
   NAME("SO_slots_sum")
   NAME("SO_seq_no")
   NAME("SO_action")
NAMEEND
# 164 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_suser_SU_L.h" 1
# 76 "../libs/sgeobj/sge_suser_SU_L.h"
enum {
   SU_name = SU_LOWERBOUND,
   SU_jobs
};

LISTDEF(SU_Type)
   SGE_STRING(SU_name, CULL_HASH | CULL_UNIQUE)
   SGE_ULONG(SU_jobs, CULL_DEFAULT)
LISTEND

NAMEDEF(SUN)
   NAME("SU_name")
   NAME("SU_jobs")
NAMEEND
# 165 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_time_event_TE_L.h" 1
# 45 "../libs/sgeobj/sge_time_event_TE_L.h"
enum {
   TE_when = TE_LOWERBOUND,
   TE_type,
   TE_mode,
   TE_interval,
   TE_uval0,
   TE_uval1,
   TE_sval,
   TE_seqno
};

LISTDEF(TE_Type)
   SGE_ULONG(TE_when, CULL_DEFAULT)
   SGE_ULONG(TE_type, CULL_DEFAULT)
   SGE_ULONG(TE_mode, CULL_DEFAULT)
   SGE_ULONG(TE_interval, CULL_DEFAULT)
   SGE_ULONG(TE_uval0, CULL_DEFAULT)
   SGE_ULONG(TE_uval1, CULL_DEFAULT)
   SGE_STRING(TE_sval, CULL_DEFAULT)
   SGE_ULONG(TE_seqno, CULL_DEFAULT)
LISTEND

NAMEDEF(TEN)
   NAME("TE_when")
   NAME("TE_type")
   NAME("TE_mode")
   NAME("TE_interval")
   NAME("TE_uval0")
   NAME("TE_uval1")
   NAME("TE_sval")
   NAME("TE_seqno")
NAMEEND
# 166 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_ulong_ULNG_L.h" 1
# 45 "../libs/sgeobj/sge_ulong_ULNG_L.h"
enum {
   ULNG_value = ULNG_LOWERBOUND
};

LISTDEF(ULNG_Type)
   SGE_ULONG(ULNG_value, CULL_HASH | CULL_UNIQUE | CULL_DEFAULT)
LISTEND

NAMEDEF(ULNGN)
   NAME("ULNG_value")
NAMEEND
# 167 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_usage_UA_L.h" 1
# 50 "../libs/sgeobj/sge_usage_UA_L.h"
enum {
   UA_name = UA_LOWERBOUND,
   UA_value
};

enum {
   UA_name_POS = 0,
   UA_value_POS
};


LISTDEF(UA_Type)
   JGDI_MAP_OBJ(UA_name, UA_value)
   SGE_STRING(UA_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_DOUBLE(UA_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(UAN)
   NAME("UA_name")
   NAME("UA_value")
NAMEEND
# 168 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_userprj_PR_L.h" 1
# 49 "../libs/sgeobj/sge_userprj_PR_L.h"
enum {
   PR_name = PR_LOWERBOUND,
   PR_oticket,
   PR_fshare,
   PR_job_cnt,
   PR_pending_job_cnt,
   PR_usage,
   PR_usage_time_stamp,
   PR_usage_seqno,
   PR_long_term_usage,
   PR_project,
   PR_acl,
   PR_xacl,
   PR_debited_job_usage,
   PR_version,
   PR_consider_with_categories
};

enum {
   PR_name_POS = 0,
   PR_oticket_POS,
   PR_fshare_POS,
   PR_job_cnt_POS,
   PR_pending_job_cnt_POS,
   PR_usage_POS,
   PR_usage_time_stamp_POS,
   PR_usage_seqno_POS,
   PR_long_term_usage_POS,
   PR_project_POS,
   PR_acl_POS,
   PR_xacl_POS,
   PR_debited_job_usage_POS,
   PR_version_POS,
   PR_consider_with_categories_POS
};

LISTDEF(PR_Type)
   JGDI_ROOT_OBJ(Project, SGE_PR_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_PROJECT_ADD) | MODIFY(sgeE_PROJECT_MOD) | DELETE(sgeE_PROJECT_DEL) | GET_LIST(sgeE_PROJECT_LIST))


   SGE_STRING_D(PR_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_SUBLIST | CULL_JGDI_CONF, "template")


   SGE_ULONG(PR_oticket, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_ULONG(PR_fshare, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_ULONG(PR_job_cnt, CULL_DEFAULT | CULL_JGDI_HIDDEN)


   SGE_ULONG(PR_pending_job_cnt, CULL_DEFAULT | CULL_JGDI_HIDDEN)


   SGE_MAP(PR_usage, UA_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_ULONG(PR_usage_time_stamp, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_ULONG(PR_usage_seqno, CULL_DEFAULT | CULL_JGDI_HIDDEN)


   SGE_MAP(PR_long_term_usage, UA_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_LIST(PR_project, UPP_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_LIST(PR_acl, US_Type, CULL_DEFAULT | CULL_SPOOL_PROJECT | CULL_JGDI_CONF)


   SGE_LIST(PR_xacl, US_Type, CULL_DEFAULT | CULL_SPOOL_PROJECT | CULL_JGDI_CONF)


   SGE_LIST(PR_debited_job_usage, UPU_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_ULONG(PR_version, CULL_DEFAULT | CULL_JGDI_HIDDEN)


   SGE_BOOL(PR_consider_with_categories, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(PRN)
   NAME("PR_name")
   NAME("PR_oticket")
   NAME("PR_fshare")
   NAME("PR_job_cnt")
   NAME("PR_pending_job_cnt")
   NAME("PR_usage")
   NAME("PR_usage_time_stamp")
   NAME("PR_usage_seqno")
   NAME("PR_long_term_usage")
   NAME("PR_project")
   NAME("PR_acl")
   NAME("PR_xacl")
   NAME("PR_debited_job_usage")
   NAME("PR_version")
   NAME("PR_consider_with_categories")
NAMEEND
# 169 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_userprj_UU_L.h" 1
# 48 "../libs/sgeobj/sge_userprj_UU_L.h"
enum {
   UU_name = UU_LOWERBOUND,
   UU_oticket,
   UU_fshare,
   UU_delete_time,
   UU_job_cnt,
   UU_pending_job_cnt,
   UU_usage,
   UU_usage_time_stamp,
   UU_usage_seqno,
   UU_long_term_usage,
   UU_project,
   UU_debited_job_usage,
   UU_default_project,
   UU_version,
   UU_consider_with_categories
};

enum {
   UU_name_POS = 0,
   UU_oticket_POS,
   UU_fshare_POS,
   UU_delete_time_POS,
   UU_job_cnt_POS,
   UU_pending_job_cnt_POS,
   UU_usage_POS,
   UU_usage_time_stamp_POS,
   UU_usage_seqno_POS,
   UU_long_term_usage_POS,
   UU_project_POS,
   UU_debited_job_usage_POS,
   UU_default_project_POS,
   UU_version_POS,
   UU_consider_with_categories_POS
};

LISTDEF(UU_Type)
   JGDI_ROOT_OBJ(User, SGE_UU_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_USER_ADD) | MODIFY(sgeE_USER_MOD) | DELETE(sgeE_USER_DEL) | GET_LIST(sgeE_USER_LIST))


   SGE_STRING_D(UU_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_SUBLIST | CULL_JGDI_CONF, "template")


   SGE_ULONG(UU_oticket, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_ULONG(UU_fshare, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_ULONG(UU_delete_time, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_ULONG(UU_job_cnt, CULL_DEFAULT | CULL_JGDI_HIDDEN)


   SGE_ULONG(UU_pending_job_cnt, CULL_DEFAULT | CULL_JGDI_HIDDEN)


   SGE_MAP(UU_usage, UA_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_ULONG(UU_usage_time_stamp, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_ULONG(UU_usage_seqno, CULL_DEFAULT | CULL_JGDI_HIDDEN)


   SGE_MAP(UU_long_term_usage, UA_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_LIST(UU_project, UPP_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_LIST(UU_debited_job_usage, UPU_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_HIDDEN)


   SGE_STRING(UU_default_project, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)


   SGE_ULONG(UU_version, CULL_DEFAULT | CULL_JGDI_HIDDEN)


   SGE_BOOL(UU_consider_with_categories, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(UUN)
   NAME("UU_name")
   NAME("UU_oticket")
   NAME("UU_fshare")
   NAME("UU_delete_time")
   NAME("UU_job_cnt")
   NAME("UU_pending_job_cnt")
   NAME("UU_usage")
   NAME("UU_usage_time_stamp")
   NAME("UU_usage_seqno")
   NAME("UU_long_term_usage")
   NAME("UU_project")
   NAME("UU_debited_job_usage")
   NAME("UU_default_project")
   NAME("UU_version")
   NAME("UU_consider_with_categories")
NAMEEND
# 170 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_userprj_UPU_L.h" 1
# 50 "../libs/sgeobj/sge_userprj_UPU_L.h"
enum {
   UPU_job_number = UPU_LOWERBOUND,
   UPU_old_usage_list


};

LISTDEF(UPU_Type)
   JGDI_OBJ(JobUsage)
   SGE_ULONG(UPU_job_number, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_MAP(UPU_old_usage_list, UA_Type, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(UPUN)
   NAME("UPU_job_number")
   NAME("UPU_old_usage_list")
NAMEEND
# 171 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_userprj_UPP_L.h" 1
# 49 "../libs/sgeobj/sge_userprj_UPP_L.h"
enum {
   UPP_name = UPP_LOWERBOUND,
   UPP_usage,
   UPP_long_term_usage
};

enum {
   UPP_name_POS = 0,
   UPP_usage_POS,
   UPP_long_term_usage_POS
};


LISTDEF(UPP_Type)
   JGDI_OBJ(ProjectUsage)
   SGE_STRING(UPP_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_MAP(UPP_usage, UA_Type, CULL_DEFAULT | CULL_SUBLIST)



   SGE_MAP(UPP_long_term_usage, UA_Type, CULL_DEFAULT | CULL_SUBLIST)


LISTEND

NAMEDEF(UPPN)
   NAME("UPP_name")
   NAME("UPP_usage")
   NAME("UPP_long_term_usage")
NAMEEND
# 172 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_userset_US_L.h" 1
# 45 "../libs/sgeobj/sge_userset_US_L.h"
enum {
   US_name = US_LOWERBOUND,
   US_type,
   US_fshare,
   US_oticket,
   US_job_cnt,
   US_pending_job_cnt,
   US_entries,
   US_consider_with_categories
};


LISTDEF(US_Type)
   JGDI_ROOT_OBJ(UserSet, SGE_US_LIST, ADD | MODIFY | DELETE | GET | GET_LIST)
   JGDI_EVENT_OBJ(ADD(sgeE_USERSET_ADD) | MODIFY(sgeE_USERSET_MOD) | DELETE(sgeE_USERSET_DEL) | GET_LIST(sgeE_USERSET_LIST))
   SGE_STRING(US_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SPOOL | CULL_SUBLIST | CULL_JGDI_CONF)
   SGE_ULONG_D(US_type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF, 1)
   SGE_ULONG(US_fshare, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(US_oticket, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_ULONG(US_job_cnt, CULL_DEFAULT | CULL_JGDI_CONF)
   SGE_ULONG(US_pending_job_cnt, CULL_DEFAULT | CULL_JGDI_HIDDEN)
   SGE_LIST(US_entries, UE_Type, CULL_DEFAULT | CULL_SPOOL | CULL_JGDI_CONF)
   SGE_BOOL(US_consider_with_categories, CULL_DEFAULT | CULL_JGDI_HIDDEN)
LISTEND

NAMEDEF(USEN)
   NAME("US_name")
   NAME("US_type")
   NAME("US_fshare")
   NAME("US_oticket")
   NAME("US_job_cnt")
   NAME("US_pending_job_cnt")
   NAME("US_entries")
   NAME("US_consider_with_categories")
NAMEEND
# 173 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_userset_UE_L.h" 1
# 45 "../libs/sgeobj/sge_userset_UE_L.h"
enum {
   UE_name = UE_LOWERBOUND
};

LISTDEF(UE_Type)
   JGDI_PRIMITIVE_OBJ(UE_name)
   SGE_STRING(UE_name, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
LISTEND

NAMEDEF(UEN)
   NAME("UE_name")
NAMEEND
# 174 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_userset_JC_L.h" 1
# 45 "../libs/sgeobj/sge_userset_JC_L.h"
enum {
   JC_name = JC_LOWERBOUND,
   JC_jobs
};

LISTDEF(JC_Type)
   SGE_STRING(JC_name, CULL_HASH | CULL_UNIQUE)
   SGE_ULONG(JC_jobs, CULL_DEFAULT)
LISTEND

NAMEDEF(JCN)
   NAME("JC_name")
   NAME("JC_jobs")
NAMEEND
# 175 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_var_VA_L.h" 1
# 61 "../libs/sgeobj/sge_var_VA_L.h"
enum {
   VA_variable = VA_LOWERBOUND,
   VA_value
};

LISTDEF(VA_Type)
   JGDI_MAP_OBJ(VA_variable, VA_value)
   SGE_STRING(VA_variable, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE | CULL_SUBLIST)
   SGE_STRING(VA_value, CULL_DEFAULT | CULL_SUBLIST)
LISTEND

NAMEDEF(VAN)
   NAME("VA_variable")
   NAME("VA_value")
NAMEEND
# 176 "../libs/sgeobj/sge_all_listsL.h" 2
# 1 "../libs/sgeobj/sge_procL.h" 1
# 63 "../libs/sgeobj/sge_procL.h"
enum {
   PRO_pid = PRO_LOWERBOUND,
   PRO_utime,
   PRO_stime,
   PRO_vsize,
   PRO_groups,
   PRO_rel,
   PRO_run,
   PRO_io
};

LISTDEF( PRO_Type )
   SGE_ULONG ( PRO_pid, CULL_PRIMARY_KEY | CULL_HASH | CULL_UNIQUE )
   SGE_ULONG ( PRO_utime, CULL_DEFAULT )
   SGE_ULONG ( PRO_stime, CULL_DEFAULT )

   SGE_LONG ( PRO_vsize, CULL_DEFAULT )



   SGE_LIST ( PRO_groups, GR_Type, CULL_DEFAULT )
   SGE_BOOL ( PRO_rel, CULL_DEFAULT )
   SGE_BOOL ( PRO_run, CULL_DEFAULT )
   SGE_ULONG ( PRO_io, CULL_DEFAULT )
LISTEND

NAMEDEF( PRON )
   NAME ( "PRO_pid" )
   NAME ( "PRO_utime" )
   NAME ( "PRO_stime" )
   NAME ( "PRO_vsize" )
   NAME ( "PRO_groups" )
   NAME ( "PRO_rel" )
   NAME ( "PRO_run" )
   NAME ( "PRO_io" )
NAMEEND
# 110 "../libs/sgeobj/sge_procL.h"
enum {
   GR_group = GR_LOWERBOUND
};


LISTDEF( GR_Type )
   SGE_ULONG ( GR_group, CULL_DEFAULT | CULL_HASH )
LISTEND

NAMEDEF( GRN )
   NAME ( "GR_group" )
NAMEEND
# 177 "../libs/sgeobj/sge_all_listsL.h" 2
# 379 "../libs/sgeobj/sge_all_listsL.h"
   extern lNameSpace nmv[];
